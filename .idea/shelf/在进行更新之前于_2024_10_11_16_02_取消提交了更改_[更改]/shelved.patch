Index: asc-java/asc-service/asc-email-service/src/main/java/org/qinian/AscEmailServiceApplication.java
===================================================================
diff --git a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/AscEmailServiceApplication.java b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/AscEmailServiceApplication.java
rename from asc-java/asc-service/asc-email-service/src/main/java/org/qinian/AscEmailServiceApplication.java
rename to asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/AscEmailServiceApplication.java
--- a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/AscEmailServiceApplication.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/AscEmailServiceApplication.java	(date 1726316993391)
@@ -1,4 +1,4 @@
-package org.qinian;
+package org.leyramu;
 
 import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.boot.SpringApplication;
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/Convert.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/Convert.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/Convert.java
new file mode 100644
--- /dev/null	(date 1726288143625)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/Convert.java	(date 1726288143625)
@@ -0,0 +1,821 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.text;
+
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+
+import java.math.BigDecimal;
+import java.math.BigInteger;
+import java.math.RoundingMode;
+import java.nio.ByteBuffer;
+import java.nio.charset.Charset;
+import java.text.NumberFormat;
+import java.util.Set;
+
+/**
+ * 类型转换器
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class Convert {
+
+    /**
+     * 转换为字符串
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static String toStr(Object value, String defaultValue) {
+        if (null == value) {
+            return defaultValue;
+        }
+        if (value instanceof String) {
+            return (String) value;
+        }
+        return value.toString();
+    }
+
+    /**
+     * 转换为字符串
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static String toStr(Object value) {
+        return toStr(value, null);
+    }
+
+    /**
+     * 转换为字符
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static Character toChar(Object value, Character defaultValue) {
+        if (null == value) {
+            return defaultValue;
+        }
+        if (value instanceof Character) {
+            return (Character) value;
+        }
+
+        final String valueStr = toStr(value, null);
+        return StringUtils.isEmpty(valueStr) ? defaultValue : valueStr.charAt(0);
+    }
+
+    /**
+     * 转换为字符
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static Character toChar(Object value) {
+        return toChar(value, null);
+    }
+
+    /**
+     * 转换为byte
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static Byte toByte(Object value, Byte defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (value instanceof Byte) {
+            return (Byte) value;
+        }
+        if (value instanceof Number) {
+            return ((Number) value).byteValue();
+        }
+        final String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        try {
+            return Byte.parseByte(valueStr);
+        } catch (Exception e) {
+            return defaultValue;
+        }
+    }
+
+    /**
+     * 转换为byte
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static Byte toByte(Object value) {
+        return toByte(value, null);
+    }
+
+    /**
+     * 转换为Short
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static Short toShort(Object value, Short defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (value instanceof Short) {
+            return (Short) value;
+        }
+        if (value instanceof Number) {
+            return ((Number) value).shortValue();
+        }
+        final String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        try {
+            return Short.parseShort(valueStr.trim());
+        } catch (Exception e) {
+            return defaultValue;
+        }
+    }
+
+    /**
+     * 转换为Short
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static Short toShort(Object value) {
+        return toShort(value, null);
+    }
+
+    /**
+     * 转换为Number
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static Number toNumber(Object value, Number defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (value instanceof Number) {
+            return (Number) value;
+        }
+        final String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        try {
+            return NumberFormat.getInstance().parse(valueStr);
+        } catch (Exception e) {
+            return defaultValue;
+        }
+    }
+
+    /**
+     * 转换为Number
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static Number toNumber(Object value) {
+        return toNumber(value, null);
+    }
+
+    /**
+     * 转换为int
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static Integer toInt(Object value, Integer defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (value instanceof Integer) {
+            return (Integer) value;
+        }
+        if (value instanceof Number) {
+            return ((Number) value).intValue();
+        }
+        final String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        try {
+            return Integer.parseInt(valueStr.trim());
+        } catch (Exception e) {
+            return defaultValue;
+        }
+    }
+
+    /**
+     * 转换为int
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static Integer toInt(Object value) {
+        return toInt(value, null);
+    }
+
+    /**
+     * 转换为Integer数组<br>
+     *
+     * @param str 被转换的值
+     * @return 结果
+     */
+    public static Integer[] toIntArray(String str) {
+        return toIntArray(",", str);
+    }
+
+    /**
+     * 转换为Long数组<br>
+     *
+     * @param str 被转换的值
+     * @return 结果
+     */
+    public static Long[] toLongArray(String str) {
+        return toLongArray(",", str);
+    }
+
+    /**
+     * 转换为Integer数组<br>
+     *
+     * @param split 分隔符
+     * @param str   被转换的值
+     * @return 结果
+     */
+    public static Integer[] toIntArray(String split, String str) {
+        if (StringUtils.isEmpty(str)) {
+            return new Integer[]{};
+        }
+        String[] arr = str.split(split);
+        final Integer[] ints = new Integer[arr.length];
+        for (int i = 0; i < arr.length; i++) {
+            final Integer v = toInt(arr[i], 0);
+            ints[i] = v;
+        }
+        return ints;
+    }
+
+    /**
+     * 转换为Long数组<br>
+     *
+     * @param split 分隔符
+     * @param str   被转换的值
+     * @return 结果
+     */
+    public static Long[] toLongArray(String split, String str) {
+        if (StringUtils.isEmpty(str)) {
+            return new Long[]{};
+        }
+        String[] arr = str.split(split);
+        final Long[] longs = new Long[arr.length];
+        for (int i = 0; i < arr.length; i++) {
+            final Long v = toLong(arr[i], null);
+            longs[i] = v;
+        }
+        return longs;
+    }
+
+    /**
+     * 转换为String数组<br>
+     *
+     * @param str 被转换的值
+     * @return 结果
+     */
+    public static String[] toStrArray(String str) {
+        if (StringUtils.isEmpty(str)) {
+            return new String[]{};
+        }
+        return toStrArray(",", str);
+    }
+
+    /**
+     * 转换为String数组<br>
+     *
+     * @param split 分隔符
+     * @param str   被转换的值
+     * @return 结果
+     */
+    public static String[] toStrArray(String split, String str) {
+        return str.split(split);
+    }
+
+    /**
+     * 转换为long
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static Long toLong(Object value, Long defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (value instanceof Long) {
+            return (Long) value;
+        }
+        if (value instanceof Number) {
+            return ((Number) value).longValue();
+        }
+        final String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        try {
+            return new BigDecimal(valueStr.trim()).longValue();
+        } catch (Exception e) {
+            return defaultValue;
+        }
+    }
+
+    /**
+     * 转换为long
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static Long toLong(Object value) {
+        return toLong(value, null);
+    }
+
+    /**
+     * 转换为double
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static Double toDouble(Object value, Double defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (value instanceof Double) {
+            return (Double) value;
+        }
+        if (value instanceof Number) {
+            return ((Number) value).doubleValue();
+        }
+        final String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        try {
+            return new BigDecimal(valueStr.trim()).doubleValue();
+        } catch (Exception e) {
+            return defaultValue;
+        }
+    }
+
+    /**
+     * 转换为double
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static Double toDouble(Object value) {
+        return toDouble(value, null);
+    }
+
+    /**
+     * 转换为Float
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static Float toFloat(Object value, Float defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (value instanceof Float) {
+            return (Float) value;
+        }
+        if (value instanceof Number) {
+            return ((Number) value).floatValue();
+        }
+        final String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        try {
+            return Float.parseFloat(valueStr.trim());
+        } catch (Exception e) {
+            return defaultValue;
+        }
+    }
+
+    /**
+     * 转换为Float
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static Float toFloat(Object value) {
+        return toFloat(value, null);
+    }
+
+    /**
+     * 转换为boolean
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static Boolean toBool(Object value, Boolean defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (value instanceof Boolean) {
+            return (Boolean) value;
+        }
+        String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        valueStr = valueStr.trim().toLowerCase();
+        return switch (valueStr) {
+            case "true", "yes", "ok", "1" -> true;
+            case "false", "no", "0" -> false;
+            default -> defaultValue;
+        };
+    }
+
+    /**
+     * 转换为boolean
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static Boolean toBool(Object value) {
+        return toBool(value, null);
+    }
+
+    /**
+     * 转换为Enum对象
+     *
+     * @param clazz        Enum的Class
+     * @param value        值
+     * @param defaultValue 默认值
+     * @return Enum
+     */
+    @SuppressWarnings("unchecked")
+    public static <E extends Enum<E>> E toEnum(Class<E> clazz, Object value, E defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (clazz.isAssignableFrom(value.getClass())) {
+            return (E) value;
+        }
+        final String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        try {
+            return Enum.valueOf(clazz, valueStr);
+        } catch (Exception e) {
+            return defaultValue;
+        }
+    }
+
+    /**
+     * 转换为Enum对象<br>
+     * 如果给定的值为空，或者转换失败，返回默认值<code>null</code><br>
+     *
+     * @param clazz Enum的Class
+     * @param value 值
+     * @return Enum
+     */
+    public static <E extends Enum<E>> E toEnum(Class<E> clazz, Object value) {
+        return toEnum(clazz, value, null);
+    }
+
+    /**
+     * 转换为BigInteger
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static BigInteger toBigInteger(Object value, BigInteger defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (value instanceof BigInteger) {
+            return (BigInteger) value;
+        }
+        if (value instanceof Long) {
+            return BigInteger.valueOf((Long) value);
+        }
+        final String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        try {
+            return new BigInteger(valueStr);
+        } catch (Exception e) {
+            return defaultValue;
+        }
+    }
+
+    /**
+     * 转换为BigInteger
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static BigInteger toBigInteger(Object value) {
+        return toBigInteger(value, null);
+    }
+
+    /**
+     * 转换为BigDecimal
+     *
+     * @param value        被转换的值
+     * @param defaultValue 转换错误时的默认值
+     * @return 结果
+     */
+    public static BigDecimal toBigDecimal(Object value, BigDecimal defaultValue) {
+        if (value == null) {
+            return defaultValue;
+        }
+        if (value instanceof BigDecimal) {
+            return (BigDecimal) value;
+        }
+        if (value instanceof Long) {
+            return new BigDecimal((Long) value);
+        }
+        if (value instanceof Double) {
+            return BigDecimal.valueOf((Double) value);
+        }
+        if (value instanceof Integer) {
+            return new BigDecimal((Integer) value);
+        }
+        final String valueStr = toStr(value, null);
+        if (StringUtils.isEmpty(valueStr)) {
+            return defaultValue;
+        }
+        try {
+            return new BigDecimal(valueStr);
+        } catch (Exception e) {
+            return defaultValue;
+        }
+    }
+
+    /**
+     * 转换为BigDecimal
+     *
+     * @param value 被转换的值
+     * @return 结果
+     */
+    public static BigDecimal toBigDecimal(Object value) {
+        return toBigDecimal(value, null);
+    }
+
+    /**
+     * 将对象转为字符串
+     *
+     * @param obj 对象
+     * @return 字符串
+     */
+    public static String utf8Str(Object obj) {
+        return str(obj, CharsetKit.CHARSET_UTF_8);
+    }
+
+    /**
+     * 将对象转为字符串
+     *
+     * @param obj         对象
+     * @param charsetName 字符集
+     * @return 字符串
+     */
+    public static String str(Object obj, String charsetName) {
+        return str(obj, Charset.forName(charsetName));
+    }
+
+    /**
+     * 将对象转为字符串
+     *
+     * @param obj     对象
+     * @param charset 字符集
+     * @return 字符串
+     */
+    public static String str(Object obj, Charset charset) {
+        if (null == obj) {
+            return null;
+        }
+
+        if (obj instanceof String) {
+            return (String) obj;
+        } else if (obj instanceof byte[] || obj instanceof Byte[]) {
+            if (obj instanceof byte[]) {
+                return str((byte[]) obj, charset);
+            } else {
+                Byte[] bytes = (Byte[]) obj;
+                int length = bytes.length;
+                byte[] dest = new byte[length];
+                for (int i = 0; i < length; i++) {
+                    dest[i] = bytes[i];
+                }
+                return str(dest, charset);
+            }
+        } else if (obj instanceof ByteBuffer) {
+            return str((ByteBuffer) obj, charset);
+        }
+        return obj.toString();
+    }
+
+    /**
+     * 将byte数组转为字符串
+     *
+     * @param bytes   byte数组
+     * @param charset 字符集
+     * @return 字符串
+     */
+    public static String str(byte[] bytes, String charset) {
+        return str(bytes, StringUtils.isEmpty(charset) ? Charset.defaultCharset() : Charset.forName(charset));
+    }
+
+    /**
+     * 解码字节码
+     *
+     * @param data    字符串
+     * @param charset 字符集，如果此字段为空，则解码的结果取决于平台
+     * @return 解码后的字符串
+     */
+    public static String str(byte[] data, Charset charset) {
+        if (data == null) {
+            return null;
+        }
+
+        if (null == charset) {
+            return new String(data);
+        }
+        return new String(data, charset);
+    }
+
+    /**
+     * 将编码的byteBuffer数据转换为字符串
+     *
+     * @param data    数据
+     * @param charset 字符集，如果为空使用当前系统字符集
+     * @return 字符串
+     */
+    public static String str(ByteBuffer data, String charset) {
+        if (data == null) {
+            return null;
+        }
+
+        return str(data, Charset.forName(charset));
+    }
+
+    /**
+     * 将编码的byteBuffer数据转换为字符串
+     *
+     * @param data    数据
+     * @param charset 字符集，如果为空使用当前系统字符集
+     * @return 字符串
+     */
+    public static String str(ByteBuffer data, Charset charset) {
+        if (null == charset) {
+            charset = Charset.defaultCharset();
+        }
+        return charset.decode(data).toString();
+    }
+
+    // ===========================================================
+    // ======================= 全角半角转换 ==========================
+    // ===========================================================
+
+    /**
+     * 半角转全角
+     *
+     * @param input String.
+     * @return 全角字符串.
+     */
+    public static String toSbc(String input) {
+        return toSbc(input, null);
+    }
+
+    /**
+     * 半角转全角
+     *
+     * @param input         String
+     * @param notConvertSet 不替换的字符集合
+     * @return 全角字符串.
+     */
+    public static String toSbc(String input, Set<Character> notConvertSet) {
+        char[] c = input.toCharArray();
+        for (int i = 0; i < c.length; i++) {
+            if (null != notConvertSet && notConvertSet.contains(c[i])) {
+                continue;
+            }
+
+            if (c[i] == ' ') {
+                c[i] = '\u3000';
+            } else if (c[i] < '\177') {
+                c[i] = (char) (c[i] + 65248);
+
+            }
+        }
+        return new String(c);
+    }
+
+    /**
+     * 全角转半角
+     *
+     * @param input String.
+     * @return 半角字符串
+     */
+    public static String toDbc(String input) {
+        return toDbc(input, null);
+    }
+
+    /**
+     * 替换全角为半角
+     *
+     * @param text          文本
+     * @param notConvertSet 不替换的字符集合
+     * @return 替换后的字符
+     */
+    public static String toDbc(String text, Set<Character> notConvertSet) {
+        char[] c = text.toCharArray();
+        for (int i = 0; i < c.length; i++) {
+            if (null != notConvertSet && notConvertSet.contains(c[i])) {
+                continue;
+            }
+
+            if (c[i] == '\u3000') {
+                c[i] = ' ';
+            } else if (c[i] > '\uFF00' && c[i] < '\uFF5F') {
+                c[i] = (char) (c[i] - 65248);
+            }
+        }
+        return new String(c);
+    }
+
+    /**
+     * 数字金额大写转换 先写个完整的然后将如零拾替换成零
+     *
+     * @param n 数字
+     * @return 中文大写数字
+     */
+    public static String digitUppercase(double n) {
+        String[] fraction = {"角", "分"};
+        String[] digit = {"零", "壹", "贰", "叁", "肆", "伍", "陆", "柒", "捌", "玖"};
+        String[][] unit = {{"元", "万", "亿"}, {"", "拾", "佰", "仟"}};
+
+        String head = n < 0 ? "负" : "";
+        n = Math.abs(n);
+
+        StringBuilder s = getStringBuilder(n, fraction, digit);
+        int integerPart = (int) Math.floor(n);
+
+        for (int i = 0; i < unit[0].length && integerPart > 0; i++) {
+            StringBuilder p = new StringBuilder();
+            for (int j = 0; j < unit[1].length && n > 0; j++) {
+                p.insert(0, digit[integerPart % 10] + unit[1][j]);
+                integerPart = integerPart / 10;
+            }
+            s.insert(0, p.toString().replaceAll("(零.)*零$", "").replaceAll("^$", "零") + unit[0][i]);
+        }
+        return head + s.toString().replaceAll("(零.)*零元", "元").replaceFirst("(零.)+", "").replaceAll("(零.)+", "零").replaceAll("^整$", "零元整");
+    }
+
+    /**
+     * 数字金额大写转换 先写个完整的然后将如零拾替换成零
+     *
+     * @param n 数字
+     * @return 中文大写数字
+     */
+    private static StringBuilder getStringBuilder(double n, String[] fraction, String[] digit) {
+        StringBuilder s = new StringBuilder();
+        for (int i = 0; i < fraction.length; i++) {
+            // 优化double计算精度丢失问题
+            BigDecimal nNum = new BigDecimal(n);
+            BigDecimal decimal = new BigDecimal(10);
+            BigDecimal scale = nNum.multiply(decimal).setScale(2, RoundingMode.HALF_EVEN);
+            double d = scale.doubleValue();
+            s.append((digit[(int) (Math.floor(d * Math.pow(10, i)) % 10)] + fraction[i]).replaceAll("(零.)+", ""));
+        }
+        if (s.isEmpty()) {
+            s = new StringBuilder("整");
+        }
+        return s;
+    }
+}
Index: asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation.properties b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation.properties
new file mode 100644
--- /dev/null	(date 1726288500139)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation.properties	(date 1726288500139)
@@ -0,0 +1,19 @@
+#  /*
+#   * Copyright (c) 2024 Leyramu. All rights reserved.
+#   * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+#   * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+#   * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+#   * By using this project, users acknowledge and agree to abide by these terms and conditions.
+#   */
+
+
+P_OAuth2_UuidIsNull=UUIDä¸è½ä¸ºç©º
+P_OAuth2_CaptchaIsNull=éªè¯ç ä¸è½ä¸ºç©º
+P_OAuth2_UsernameIsNull=ç¨æ·åä¸è½ä¸ºç©º
+P_OAuth2_PasswordIsNull=å¯ç ä¸è½ä¸ºç©º
+P_OAuth2_MobileIsNUll=ææºå·ä¸è½ä¸ºç©º
+P_OAuth2_MailIsNull=é®ç®±ä¸è½ä¸ºç©º
+P_OAuth2_TenantIdIsNull=ç§æ·IDä¸è½ä¸ºç©º
+P_System_IdIsNull=IDä¸è½ä¸ºç©º
+A_OAuth2_MailError=é®ç®±éè¯¯
+A_OAuth2_MobileError=ææºå·éè¯¯
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/xss/XssValidator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/xss/XssValidator.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/xss/XssValidator.java
new file mode 100644
--- /dev/null	(date 1726288143554)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/xss/XssValidator.java	(date 1726288143554)
@@ -0,0 +1,62 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.xss;
+
+import jakarta.validation.ConstraintValidator;
+import jakarta.validation.ConstraintValidatorContext;
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/**
+ * 自定义xss校验注解实现
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class XssValidator implements ConstraintValidator<Xss, String> {
+
+    /**
+     * 匹配表达式
+     */
+    private static final String HTML_PATTERN = "<(\\S*?)[^>]*>.*?|<.*? />";
+
+    /**
+     * 校验
+     *
+     * @param value                      待校验值
+     * @param constraintValidatorContext 上下文
+     * @return 是否校验通过
+     */
+    @Override
+    public boolean isValid(String value, ConstraintValidatorContext constraintValidatorContext) {
+        if (StringUtils.isBlank(value)) {
+            return true;
+        }
+        return !containsHtml(value);
+    }
+
+    /**
+     * 验证是否包含非法字符
+     *
+     * @param value 待验证的字符串
+     * @return 是否包含非法字符
+     */
+    public static boolean containsHtml(String value) {
+        StringBuilder sHtml = new StringBuilder();
+        Pattern pattern = Pattern.compile(HTML_PATTERN);
+        Matcher matcher = pattern.matcher(value);
+        while (matcher.find()) {
+            sHtml.append(matcher.group());
+        }
+        return pattern.matcher(sHtml).matches();
+    }
+}
Index: asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_en.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_en.properties b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_en.properties
new file mode 100644
--- /dev/null	(date 1726288500158)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_en.properties	(date 1726288500158)
@@ -0,0 +1,45 @@
+#  /*
+#   * Copyright (c) 2024 Leyramu. All rights reserved.
+#   * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+#   * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+#   * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+#   * By using this project, users acknowledge and agree to abide by these terms and conditions.
+#   */
+
+
+OK=Request successful
+Bad_Request=Bad request
+Unauthorized=Login status has expired
+Forbidden=Access denied without permission
+Not_Found=Unable to find the requested resource
+Too_Many_Requests=Request too frequently
+Internal_Server_Error=Internal server error, unable to complete request
+Bad_Gateway=Bad Gateway
+Service_Unavailable=Service is being maintained
+S_Ip_Blacked=IP has been blacklisted
+S_Ip_Restricted=IP restricted
+S_Gateway_RouterNotExist=Router does not exist
+A_OAuth2_GenerateIdTokenFail=Token generator failed to generate identity token
+A_OAuth2_GenerateRefreshTokenFail=The token generator was unable to generate a refresh token
+A_OAuth2_GenerateAccessTokenFail=Token generator failed to generate access token
+A_OAuth2_RegisteredClientNotExist=The registration client does not exist
+A_OAuth2_InvalidClient=Invalid client
+A_OAuth2_InvalidScope=Invalid scope
+A_OAuth2_UserDisabled=User disabled
+A_OAuth2_CaptchaExpired=Verification code has expired
+A_OAuth2_CaptchaError=Verification code error
+A_OAuth2_UsernamePasswordError=Username or password error
+S_Sentinel_Authority=Authorization rule error
+S_Sentinel_SystemBlocked=System rule error
+S_Sentinel_ParamFlowed=Hot spot parameters are restricted
+S_Sentinel_Degraded=Degraded
+S_Sentinel_Flowed=Flowed
+S_Seata_TransactionDowntime=Distributed transaction has crashed
+S_Seata_TransactionTimeout=Distributed transaction has timed out
+S_DS_TableNotExist=Table {0} does not exist
+A_OAuth2_SourceNotExist=The data source does not exist
+S_User_AESDecryptUsernameFail=User name decryption failed
+S_User_AESDecryptMailFail=Email decryption failed
+S_User_AESDecryptMobileFail=Phone number decryption failed
+A_OAuth2_MobileNotRegistered=Mobile number not registered
+A_OAuth2_MailNotRegistered=Email not registered
Index: asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message.properties b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message.properties
new file mode 100644
--- /dev/null	(date 1726288500148)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message.properties	(date 1726288500148)
@@ -0,0 +1,45 @@
+#  /*
+#   * Copyright (c) 2024 Leyramu. All rights reserved.
+#   * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+#   * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+#   * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+#   * By using this project, users acknowledge and agree to abide by these terms and conditions.
+#   */
+
+
+OK=\u8BF7\u6C42\u6210\u529F
+Bad_Request=\u9519\u8BEF\u8BF7\u6C42
+Unauthorized=\u767B\u5F55\u72B6\u6001\u5DF2\u8FC7\u671F
+Forbidden=\u62D2\u7EDD\u8BBF\u95EE\uFF0C\u6CA1\u6709\u6743\u9650
+Not_Found=\u65E0\u6CD5\u627E\u5230\u8BF7\u6C42\u7684\u8D44\u6E90
+Too_Many_Requests=\u8BF7\u6C42\u592A\u9891\u7E41
+Internal_Server_Error=\u670D\u52A1\u5668\u5185\u90E8\u9519\u8BEF\uFF0C\u65E0\u6CD5\u5B8C\u6210\u8BF7\u6C42
+Bad_Gateway=\u9519\u8BEF\u7F51\u5173
+Service_Unavailable=\u670D\u52A1\u6B63\u5728\u7EF4\u62A4
+S_Ip_Blacked=IP\u5DF2\u5217\u5165\u9ED1\u540D\u5355
+S_Ip_Restricted=IP\u88AB\u9650\u5236
+S_Gateway_RouterNotExist=\u8DEF\u7531\u4E0D\u5B58\u5728
+A_OAuth2_GenerateIdTokenFail=\u4EE4\u724C\u751F\u6210\u5668\u65E0\u6CD5\u751F\u6210\u6807\u8BC6\u4EE4\u724C
+A_OAuth2_GenerateRefreshTokenFail=\u4EE4\u724C\u751F\u6210\u5668\u65E0\u6CD5\u751F\u6210\u5237\u65B0\u4EE4\u724C
+A_OAuth2_GenerateAccessTokenFail=\u4EE4\u724C\u751F\u6210\u5668\u65E0\u6CD5\u751F\u6210\u8BBF\u95EE\u4EE4\u724C
+A_OAuth2_RegisteredClientNotExist=\u6CE8\u518C\u5BA2\u6237\u7AEF\u4E0D\u5B58\u5728
+A_OAuth2_InvalidClient=\u65E0\u6548\u5BA2\u6237\u7AEF
+A_OAuth2_InvalidScope=\u65E0\u6548\u4F5C\u7528\u57DF
+A_OAuth2_UserDisabled=\u7528\u6237\u5DF2\u7981\u7528
+A_OAuth2_CaptchaExpired=\u9A8C\u8BC1\u7801\u5DF2\u8FC7\u671F
+A_OAuth2_CaptchaError=\u9A8C\u8BC1\u7801\u9519\u8BEF
+A_OAuth2_UsernamePasswordError=\u7528\u6237\u540D\u6216\u5BC6\u7801\u9519\u8BEF
+S_Sentinel_Authority=\u6388\u6743\u89C4\u5219\u9519\u8BEF
+S_Sentinel_SystemBlocked=\u7CFB\u7EDF\u89C4\u5219\u9519\u8BEF
+S_Sentinel_ParamFlowed=\u70ED\u70B9\u53C2\u6570\u5DF2\u9650\u6D41
+S_Sentinel_Degraded=\u5DF2\u964D\u7EA7
+S_Sentinel_Flowed=\u5DF2\u9650\u6D41
+S_Seata_TransactionDowntime=\u5206\u5E03\u5F0F\u4E8B\u52A1\u5DF2\u5B95\u673A
+S_Seata_TransactionTimeout=\u5206\u5E03\u5F0F\u4E8B\u52A1\u5DF2\u8D85\u65F6
+S_DS_TableNotExist=\u8868 {0} \u4E0D\u5B58\u5728
+A_OAuth2_SourceNotExist=\u6570\u636E\u6E90\u4E0D\u5B58\u5728
+S_User_AESDecryptUsernameFail=\u7528\u6237\u540D\u89E3\u5BC6\u5931\u8D25
+S_User_AESDecryptMailFail=\u90AE\u7BB1\u89E3\u5BC6\u5931\u8D25
+S_User_AESDecryptMobileFail=\u624B\u673A\u53F7\u89E3\u5BC6\u5931\u8D25
+A_OAuth2_MobileNotRegistered=\u624B\u673A\u53F7\u672A\u6CE8\u518C
+A_OAuth2_MailNotRegistered=\u90AE\u7BB1\u672A\u6CE8\u518C
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/xss/Xss.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/xss/Xss.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/xss/Xss.java
new file mode 100644
--- /dev/null	(date 1726288143341)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/xss/Xss.java	(date 1726288143341)
@@ -0,0 +1,58 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.xss;
+
+import jakarta.validation.Constraint;
+import jakarta.validation.Payload;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * 自定义xss校验注解
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Retention(RetentionPolicy.RUNTIME)
+@Target(value = {ElementType.METHOD, ElementType.FIELD, ElementType.CONSTRUCTOR, ElementType.PARAMETER})
+@Constraint(validatedBy = XssValidator.class)
+public @interface Xss {
+
+    /**
+     * 提示消息
+     *
+     * @return 消息
+     */
+    String message() default "不允许任何脚本运行";
+
+    /**
+     * 验证组
+     *
+     * @return 验证组
+     */
+    Class<?>[] annotatedElement() default {};
+
+    /**
+     * 验证组
+     *
+     * @return 验证组
+     */
+    Class<?>[] groups() default {};
+
+    /**
+     * 负载
+     *
+     * @return 负载
+     */
+    Class<? extends Payload>[] payload() default {};
+}
Index: asc-java/asc-common/asc-common-base/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/pom.xml b/asc-java/asc-common/asc-common-base/pom.xml
new file mode 100644
--- /dev/null	(date 1726316356796)
+++ b/asc-java/asc-common/asc-common-base/pom.xml	(date 1726316356796)
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>leyramu.qinian</groupId>
+        <artifactId>asc-common</artifactId>
+        <version>1.0.0</version>
+    </parent>
+
+    <artifactId>asc-common-base</artifactId>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.fasterxml.jackson.datatype</groupId>
+            <artifactId>jackson-datatype-jsr310</artifactId>
+        </dependency>
+
+        <!--    MyBatis Plus    -->
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
+        </dependency>
+
+        <!--    ASC Common Core    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-core</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>cn.hutool</groupId>
+            <artifactId>hutool-all</artifactId>
+            <version>5.8.25</version>
+            <scope>compile</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>fastjson</artifactId>
+            <version>2.0.52</version>
+            <scope>compile</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>org.apache.httpcomponents</groupId>
+            <artifactId>httpclient</artifactId>
+            <version>4.5.14</version>
+            <scope>compile</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>com.vaadin.external.google</groupId>
+            <artifactId>android-json</artifactId>
+            <version>0.0.20131108.vaadin1</version>
+            <scope>compile</scope>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/Result.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/Result.java b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/domain/Result.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/Result.java
rename to asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/domain/Result.java
--- a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/Result.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/domain/Result.java	(date 1726288400937)
@@ -1,9 +1,16 @@
-package org.qinian.domain;
+package leyramu.qinian.asc.common.i18n.domain;
 
 import lombok.Data;
 
 import java.io.Serializable;
 
+/**
+ * Result 类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/13
+ */
 @Data
 public class Result implements Serializable {
 
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AIStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AIStatus.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AIStatus.java
new file mode 100644
--- /dev/null	(date 1726310283731)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AIStatus.java	(date 1726310283731)
@@ -0,0 +1,4 @@
+package leyramu.qinian.asc.common.base.enums;
+
+public enum AIStatus {
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/TableSupport.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/TableSupport.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/TableSupport.java
new file mode 100644
--- /dev/null	(date 1726288143344)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/TableSupport.java	(date 1726288143344)
@@ -0,0 +1,69 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.web.page;
+
+import leyramu.qinian.asc.common.core.text.Convert;
+import leyramu.qinian.asc.common.core.utils.ServletUtils;
+
+/**
+ * 表格数据处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class TableSupport {
+
+    /**
+     * 当前记录起始索引
+     */
+    public static final String PAGE_NUM = "pageNum";
+
+    /**
+     * 每页显示记录数
+     */
+    public static final String PAGE_SIZE = "pageSize";
+
+    /**
+     * 排序列
+     */
+    public static final String ORDER_BY_COLUMN = "orderByColumn";
+
+    /**
+     * 排序的方向 "desc" 或者 "asc".
+     */
+    public static final String IS_ASC = "isAsc";
+
+    /**
+     * 分页参数合理化
+     */
+    public static final String REASONABLE = "reasonable";
+
+    /**
+     * 封装分页对象
+     */
+    public static PageDomain getPageDomain() {
+        PageDomain pageDomain = new PageDomain();
+        pageDomain.setPageNum(Convert.toInt(ServletUtils.getParameter(PAGE_NUM), 1));
+        pageDomain.setPageSize(Convert.toInt(ServletUtils.getParameter(PAGE_SIZE), 10));
+        pageDomain.setOrderByColumn(ServletUtils.getParameter(ORDER_BY_COLUMN));
+        pageDomain.setIsAsc(ServletUtils.getParameter(IS_ASC));
+        pageDomain.setReasonable(ServletUtils.getParameterToBool(REASONABLE));
+        return pageDomain;
+    }
+
+    /**
+     * 构建前端所需要的分页数据
+     *
+     * @return 分页数据
+     */
+    public static PageDomain buildPageRequest() {
+        return getPageDomain();
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/PageDomain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/PageDomain.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/PageDomain.java
new file mode 100644
--- /dev/null	(date 1726288143584)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/PageDomain.java	(date 1726288143584)
@@ -0,0 +1,87 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.web.page;
+
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+import lombok.Data;
+
+/**
+ * 分页数据
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Data
+public class PageDomain {
+
+    /**
+     * 当前记录起始索引
+     */
+    private Integer pageNum;
+
+    /**
+     * 每页显示记录数
+     */
+    private Integer pageSize;
+
+    /**
+     * 排序列
+     */
+    private String orderByColumn;
+
+    /**
+     * 排序的方向desc或者asc
+     */
+    private String isAsc = "asc";
+
+    /**
+     * 分页参数合理化
+     */
+    private Boolean reasonable = true;
+
+    /**
+     * 获取排序参数
+     */
+    public String getOrderBy() {
+        if (StringUtils.isEmpty(orderByColumn)) {
+            return "";
+        }
+        return StringUtils.toUnderScoreCase(orderByColumn) + " " + isAsc;
+    }
+
+    /**
+     * 设置排序参数
+     *
+     * @param isAsc 排序类型
+     */
+    public void setIsAsc(String isAsc) {
+        if (StringUtils.isNotEmpty(isAsc)) {
+            // 兼容前端排序类型
+            if ("ascending".equals(isAsc)) {
+                isAsc = "asc";
+            } else if ("descending".equals(isAsc)) {
+                isAsc = "desc";
+            }
+            this.isAsc = isAsc;
+        }
+    }
+
+    /**
+     * 获取分页参数合理化
+     *
+     * @return 是否合理化
+     */
+    public Boolean getReasonable() {
+        if (StringUtils.isNull(reasonable)) {
+            return Boolean.TRUE;
+        }
+        return reasonable;
+    }
+}
Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
new file mode 100644
--- /dev/null	(date 1725948873817)
+++ b/.idea/dataSources.xml	(date 1725948873817)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
+    <data-source source="LOCAL" name="0@localhost" uuid="cd60ed14-606b-444f-8cee-789f1852515a">
+      <driver-ref>redis</driver-ref>
+      <synchronize>true</synchronize>
+      <jdbc-driver>jdbc.RedisDriver</jdbc-driver>
+      <jdbc-url>jdbc:redis://localhost:6379/0</jdbc-url>
+      <jdbc-additional-properties>
+        <property name="com.intellij.clouds.kubernetes.db.host.port" />
+        <property name="com.intellij.clouds.kubernetes.db.enabled" value="false" />
+        <property name="com.intellij.clouds.kubernetes.db.container.port" />
+      </jdbc-additional-properties>
+      <working-dir>$ProjectFileDir$</working-dir>
+    </data-source>
+  </component>
+</project>
\ No newline at end of file
Index: asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteBLOCRService.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteBLOCRService.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteBLOCRService.java
rename from asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteBLOCRService.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteBLOCRService.java
--- a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteBLOCRService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteBLOCRService.java	(date 1726288143221)
@@ -1,6 +1,6 @@
-package org.qinian.model;
+package org.qinian.domain.model;
 
-import org.qinian.domain.Result;
+import domain.Result;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestParam;
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/UUID.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/UUID.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/UUID.java
new file mode 100644
--- /dev/null	(date 1726288143255)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/UUID.java	(date 1726288143255)
@@ -0,0 +1,364 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.uuid;
+
+import leyramu.qinian.asc.common.core.exception.UtilException;
+
+import java.io.Serial;
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+import java.security.SecureRandom;
+import java.util.Random;
+import java.util.concurrent.ThreadLocalRandom;
+
+/**
+ * 提供通用唯一识别码（universally unique identifier）（UUID）实现
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public final class UUID implements java.io.Serializable, Comparable<UUID> {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * SecureRandom 的单例
+     */
+    private static class Holder {
+        static final SecureRandom NUMBER_GENERATOR = getSecureRandom();
+    }
+
+    /**
+     * 此UUID的最高64有效位
+     */
+    private final long mostSigBits;
+
+    /**
+     * 此UUID的最低64有效位
+     */
+    private final long leastSigBits;
+
+    /**
+     * 私有构造
+     *
+     * @param data 数据
+     */
+    private UUID(byte[] data) {
+        long msb = 0;
+        long lsb = 0;
+        assert data.length == 16 : "data must be 16 bytes in length";
+        for (int i = 0; i < 8; i++) {
+            msb = (msb << 8) | (data[i] & 0xff);
+        }
+        for (int i = 8; i < 16; i++) {
+            lsb = (lsb << 8) | (data[i] & 0xff);
+        }
+        this.mostSigBits = msb;
+        this.leastSigBits = lsb;
+    }
+
+    /**
+     * 使用指定的数据构造新的 UUID。
+     *
+     * @param mostSigBits  用于 {@code UUID} 的最高有效 64 位
+     * @param leastSigBits 用于 {@code UUID} 的最低有效 64 位
+     */
+    public UUID(long mostSigBits, long leastSigBits) {
+        this.mostSigBits = mostSigBits;
+        this.leastSigBits = leastSigBits;
+    }
+
+    /**
+     * 获取类型 4（伪随机生成的）UUID 的静态工厂。
+     *
+     * @return 随机生成的 {@code UUID}
+     */
+    public static UUID fastUUID() {
+        return randomUUID(false);
+    }
+
+    /**
+     * 获取类型 4（伪随机生成的）UUID 的静态工厂。 使用加密的强伪随机数生成器生成该 UUID。
+     *
+     * @return 随机生成的 {@code UUID}
+     */
+    public static UUID randomUUID() {
+        return randomUUID(true);
+    }
+
+    /**
+     * 获取类型 4（伪随机生成的）UUID 的静态工厂。 使用加密的强伪随机数生成器生成该 UUID。
+     *
+     * @param isSecure 是否使用{@link SecureRandom}如果是可以获得更安全的随机码，否则可以得到更好的性能
+     * @return 随机生成的 {@code UUID}
+     */
+    public static UUID randomUUID(boolean isSecure) {
+        final Random ng = isSecure ? Holder.NUMBER_GENERATOR : getRandom();
+
+        byte[] randomBytes = new byte[16];
+        ng.nextBytes(randomBytes);
+        randomBytes[6] &= 0x0f;
+        randomBytes[6] |= 0x40;
+        randomBytes[8] &= 0x3f;
+        randomBytes[8] |= (byte) 0x80;
+        return new UUID(randomBytes);
+    }
+
+    /**
+     * 根据指定的字节数组获取类型 3（基于名称的）UUID 的静态工厂。
+     *
+     * @param name 用于构造 UUID 的字节数组。
+     * @return 根据指定数组生成的 {@code UUID}
+     */
+    public static UUID nameUUIDFromBytes(byte[] name) {
+        MessageDigest md;
+        try {
+            md = MessageDigest.getInstance("MD5");
+        } catch (NoSuchAlgorithmException nsae) {
+            throw new InternalError("MD5 not supported");
+        }
+        byte[] md5Bytes = md.digest(name);
+        md5Bytes[6] &= 0x0f;
+        md5Bytes[6] |= 0x30;
+        md5Bytes[8] &= 0x3f;
+        md5Bytes[8] |= (byte) 0x80;
+        return new UUID(md5Bytes);
+    }
+
+    /**
+     * 根据 {@link #toString()} 方法中描述的字符串标准表示形式创建{@code UUID}。
+     *
+     * @param name 指定 {@code UUID} 字符串
+     * @return 具有指定值的 {@code UUID}
+     * @throws IllegalArgumentException 如果 name 与 {@link #toString} 中描述的字符串表示形式不符抛出此异常
+     */
+    public static UUID fromString(String name) {
+        String[] components = name.split("-");
+        if (components.length != 5) {
+            throw new IllegalArgumentException("Invalid UUID string: " + name);
+        }
+        for (int i = 0; i < 5; i++) {
+            components[i] = "0x" + components[i];
+        }
+
+        long mostSigBits = Long.decode(components[0]);
+        mostSigBits <<= 16;
+        mostSigBits |= Long.decode(components[1]);
+        mostSigBits <<= 16;
+        mostSigBits |= Long.decode(components[2]);
+
+        long leastSigBits = Long.decode(components[3]);
+        leastSigBits <<= 48;
+        leastSigBits |= Long.decode(components[4]);
+
+        return new UUID(mostSigBits, leastSigBits);
+    }
+
+    /**
+     * 返回此 UUID 的 128 位值中的最低有效 64 位。
+     *
+     * @return 此 UUID 的 128 位值中的最低有效 64 位。
+     */
+    public long getLeastSignificantBits() {
+        return leastSigBits;
+    }
+
+    /**
+     * 返回此 UUID 的 128 位值中的最高有效 64 位。
+     *
+     * @return 此 UUID 的 128 位值中最高有效 64 位。
+     */
+    public long getMostSignificantBits() {
+        return mostSigBits;
+    }
+
+    /**
+     * 与此 {@code UUID} 相关联的版本号. 版本号描述此 {@code UUID} 是如何生成的。
+     *
+     * @return 此 {@code UUID} 的版本号
+     */
+    public int version() {
+        // Version is bits masked by 0x000000000000F000 in MS long
+        return (int) ((mostSigBits >> 12) & 0x0f);
+    }
+
+    /**
+     * 与此 {@code UUID} 相关联的变体号。变体号描述 {@code UUID} 的布局。
+     *
+     * @return 此 {@code UUID} 相关联的变体号
+     */
+    public int variant() {
+        return (int) ((leastSigBits >>> (64 - (leastSigBits >>> 62))) & (leastSigBits >> 63));
+    }
+
+    /**
+     * 与此 UUID 相关联的时间戳值。
+     *
+     * @throws UnsupportedOperationException 如果此 {@code UUID} 不是 version 为 1 的 UUID。
+     */
+    public long timestamp() throws UnsupportedOperationException {
+        checkTimeBase();
+        return (mostSigBits & 0x0FFFL) << 48
+                | ((mostSigBits >> 16) & 0x0FFFFL) << 32
+                | mostSigBits >>> 32;
+    }
+
+    /**
+     * 与此 UUID 相关联的时钟序列值。
+     *
+     * @return 此 {@code UUID} 的时钟序列
+     * @throws UnsupportedOperationException 如果此 UUID 的 version 不为 1
+     */
+    public int clockSequence() throws UnsupportedOperationException {
+        checkTimeBase();
+        return (int) ((leastSigBits & 0x3FFF000000000000L) >>> 48);
+    }
+
+    /**
+     * 与此 UUID 相关的节点值。
+     *
+     * @return 此 {@code UUID} 的节点值
+     * @throws UnsupportedOperationException 如果此 UUID 的 version 不为 1
+     */
+    public long node() throws UnsupportedOperationException {
+        checkTimeBase();
+        return leastSigBits & 0x0000FFFFFFFFFFFFL;
+    }
+
+    /**
+     * 返回此{@code UUID} 的字符串表现形式。
+     *
+     * @return 此{@code UUID} 的字符串表现形式
+     * @see #toString(boolean)
+     */
+    @Override
+    public String toString() {
+        return toString(false);
+    }
+
+    /**
+     * 返回此{@code UUID} 的字符串表现形式。
+     *
+     * @param isSimple 是否简单模式，简单模式为不带'-'的UUID字符串
+     * @return 此{@code UUID} 的字符串表现形式
+     */
+    public String toString(boolean isSimple) {
+        final StringBuilder builder = new StringBuilder(isSimple ? 32 : 36);
+        // time_low
+        builder.append(digits(mostSigBits >> 32, 8));
+        if (!isSimple) {
+            builder.append('-');
+        }
+        // time_mid
+        builder.append(digits(mostSigBits >> 16, 4));
+        if (!isSimple) {
+            builder.append('-');
+        }
+        // time_high_and_version
+        builder.append(digits(mostSigBits, 4));
+        if (!isSimple) {
+            builder.append('-');
+        }
+        // variant_and_sequence
+        builder.append(digits(leastSigBits >> 48, 4));
+        if (!isSimple) {
+            builder.append('-');
+        }
+        // node
+        builder.append(digits(leastSigBits, 12));
+
+        return builder.toString();
+    }
+
+    /**
+     * 返回此 UUID 的哈希码。
+     *
+     * @return UUID 的哈希码值。
+     */
+    @Override
+    public int hashCode() {
+        long hilo = mostSigBits ^ leastSigBits;
+        return ((int) (hilo >> 32)) ^ (int) hilo;
+    }
+
+    /**
+     * 将此对象与指定对象比较。
+     *
+     * @param obj 要与之比较的对象
+     * @return 如果对象相同，则返回 {@code true}；否则返回 {@code false}
+     */
+    @Override
+    public boolean equals(Object obj) {
+        if ((null == obj) || (obj.getClass() != UUID.class)) {
+            return false;
+        }
+        UUID id = (UUID) obj;
+        return (mostSigBits == id.mostSigBits && leastSigBits == id.leastSigBits);
+    }
+
+    /**
+     * 将此 UUID 与指定的 UUID 比较。
+     *
+     * @param val 与此 UUID 比较的 UUID
+     * @return 在此 UUID 小于、等于或大于 val 时，分别返回 -1、0 或 1。
+     */
+    @Override
+    public int compareTo(UUID val) {
+        return (this.mostSigBits < val.mostSigBits ? -1 : (this.mostSigBits > val.mostSigBits ? 1 : (Long.compare(this.leastSigBits, val.leastSigBits))));
+    }
+
+    /**
+     * 返回指定数字对应的hex值
+     *
+     * @param val    值
+     * @param digits 位
+     * @return 值
+     */
+    private static String digits(long val, int digits) {
+        long hi = 1L << (digits * 4);
+        return Long.toHexString(hi | (val & (hi - 1))).substring(1);
+    }
+
+    /**
+     * 检查是否为time-based版本UUID
+     */
+    private void checkTimeBase() {
+        if (version() != 1) {
+            throw new UnsupportedOperationException("Not a time-based UUID");
+        }
+    }
+
+    /**
+     * 获取{@link SecureRandom}，类提供加密的强随机数生成器 (RNG)
+     *
+     * @return {@link SecureRandom}
+     */
+    public static SecureRandom getSecureRandom() {
+        try {
+            return SecureRandom.getInstance("SHA1PRNG");
+        } catch (NoSuchAlgorithmException e) {
+            throw new UtilException(e);
+        }
+    }
+
+    /**
+     * 获取随机数生成器对象<br>
+     * ThreadLocalRandom是JDK 7之后提供并发产生随机数，能够解决多个线程发生的竞争争夺。
+     *
+     * @return {@link ThreadLocalRandom}
+     */
+    public static ThreadLocalRandom getRandom() {
+        return ThreadLocalRandom.current();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteAlertService.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteAlertService.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteAlertService.java
rename from asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteAlertService.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteAlertService.java
--- a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteAlertService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteAlertService.java	(date 1726288143338)
@@ -1,6 +1,6 @@
-package org.qinian.model;
+package org.qinian.domain.model;
 
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.alert.AddAlertInfoDto;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.PostMapping;
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/Seq.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/Seq.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/Seq.java
new file mode 100644
--- /dev/null	(date 1726288143334)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/Seq.java	(date 1726288143334)
@@ -0,0 +1,103 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.uuid;
+
+import leyramu.qinian.asc.common.core.utils.DateUtils;
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+
+import java.util.concurrent.atomic.AtomicInteger;
+
+/**
+ * 序列生成类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class Seq {
+
+    /**
+     * 通用序列类型
+     */
+    public static final String COMM_SEQ_TYPE = "COMMON";
+
+    /**
+     * 上传序列类型
+     */
+    public static final String UPLOAD_SEQ_TYPE = "UPLOAD";
+
+    /**
+     * 通用接口序列数
+     */
+    private static final AtomicInteger COMM_SEQ = new AtomicInteger(1);
+
+    /**
+     * 上传接口序列数
+     */
+    private static final AtomicInteger UPLOAD_SEQ = new AtomicInteger(1);
+
+    /**
+     * 机器标识
+     */
+    private static final String MACHINE_CODE = "A";
+
+    /**
+     * 获取通用序列号
+     *
+     * @return 序列值
+     */
+    public static String getId() {
+        return getId(COMM_SEQ_TYPE);
+    }
+
+    /**
+     * 默认16位序列号 yyMMddHHmmss + 一位机器标识 + 3长度循环递增字符串
+     *
+     * @return 序列值
+     */
+    public static String getId(String type) {
+        AtomicInteger atomicInt = COMM_SEQ;
+        if (UPLOAD_SEQ_TYPE.equals(type)) {
+            atomicInt = UPLOAD_SEQ;
+        }
+        return getId(atomicInt, 3);
+    }
+
+    /**
+     * 通用接口序列号 yyMMddHHmmss + 一位机器标识 + length长度循环递增字符串
+     *
+     * @param atomicInt 序列数
+     * @param length    数值长度
+     * @return 序列值
+     */
+    public static String getId(AtomicInteger atomicInt, int length) {
+        String result = DateUtils.dateTimeNow();
+        result += MACHINE_CODE;
+        result += getSeq(atomicInt, length);
+        return result;
+    }
+
+    /**
+     * 序列循环递增字符串[1, 10 的 (length)幂次方), 用0左补齐length位数
+     *
+     * @return 序列值
+     */
+    private synchronized static String getSeq(AtomicInteger atomicInt, int length) {
+        // 先取值再+1
+        int value = atomicInt.getAndIncrement();
+
+        // 如果更新后值>=10 的 (length)幂次方则重置为1
+        int maxSeq = (int) Math.pow(10, length);
+        if (atomicInt.get() >= maxSeq) {
+            atomicInt.set(1);
+        }
+        // 转字符串，用0左补齐
+        return StringUtils.padl(value, length);
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteRaftService.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteRaftService.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteRaftService.java
rename from asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteRaftService.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteRaftService.java
--- a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteRaftService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteRaftService.java	(date 1726288143291)
@@ -1,6 +1,6 @@
-package org.qinian.model;
+package org.qinian.domain.model;
 
-import org.qinian.domain.Result;
+import domain.Result;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/sign/Base64.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/sign/Base64.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/sign/Base64.java
new file mode 100644
--- /dev/null	(date 1726288143572)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/sign/Base64.java	(date 1726288143572)
@@ -0,0 +1,333 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.sign;
+
+import java.util.Arrays;
+
+/**
+ * Base64工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public final class Base64 {
+
+    /**
+     * Base64 编码表
+     */
+    private static final int BASE_LENGTH = 128;
+
+    /**
+     * base64 编码的查找表
+     */
+    private static final int LOOKUP_LENGTH = 64;
+
+    /**
+     * 24 位
+     */
+    private static final int TWENTY_FOUR_BIT_GROUP = 24;
+
+    /**
+     * 8 位
+     */
+    private static final int EIGHT_BIT = 8;
+
+    /**
+     * 16 位
+     */
+    private static final int SIXTEEN_BIT = 16;
+
+    /**
+     * 4 位
+     */
+    private static final int FOUR_BYTE = 4;
+
+    /**
+     * 128 位
+     */
+    private static final int SIGN = -128;
+
+    /**
+     * pad
+     */
+    private static final char PAD = '=';
+
+    /**
+     * base64 编码表
+     */
+    private static final byte[] BASE64_ALPHABET = new byte[BASE_LENGTH];
+
+    /**
+     * base64 编码的查找表
+     */
+    private static final char[] LOOK_UP_BASE64_ALPHABET = new char[LOOKUP_LENGTH];
+
+    static {
+        Arrays.fill(BASE64_ALPHABET, (byte) -1);
+        for (int i = 'Z'; i >= 'A'; i--) {
+            BASE64_ALPHABET[i] = (byte) (i - 'A');
+        }
+        for (int i = 'z'; i >= 'a'; i--) {
+            BASE64_ALPHABET[i] = (byte) (i - 'a' + 26);
+        }
+
+        for (int i = '9'; i >= '0'; i--) {
+            BASE64_ALPHABET[i] = (byte) (i - '0' + 52);
+        }
+
+        BASE64_ALPHABET['+'] = 62;
+        BASE64_ALPHABET['/'] = 63;
+
+        for (int i = 0; i <= 25; i++) {
+            LOOK_UP_BASE64_ALPHABET[i] = (char) ('A' + i);
+        }
+
+        for (int i = 26, j = 0; i <= 51; i++, j++) {
+            LOOK_UP_BASE64_ALPHABET[i] = (char) ('a' + j);
+        }
+
+        for (int i = 52, j = 0; i <= 61; i++, j++) {
+            LOOK_UP_BASE64_ALPHABET[i] = (char) ('0' + j);
+        }
+        LOOK_UP_BASE64_ALPHABET[62] = '+';
+        LOOK_UP_BASE64_ALPHABET[63] = '/';
+    }
+
+    /**
+     * 确定字节值是否为空格
+     *
+     * @param octect 字符
+     * @return 是否空格
+     */
+    private static boolean isWhiteSpace(char octect) {
+        return (octect == 0x20 || octect == 0xd || octect == 0xa || octect == 0x9);
+    }
+
+    /**
+     * 确定字节值是否为等号
+     *
+     * @param octect 字符
+     * @return 是否等号
+     */
+    private static boolean isPad(char octect) {
+        return (octect == PAD);
+    }
+
+    /**
+     * 确定字节值是否为数据
+     *
+     * @param octect 字符
+     * @return 是否数据
+     */
+    private static boolean isData(char octect) {
+        return (octect >= BASE_LENGTH || BASE64_ALPHABET[octect] == -1);
+    }
+
+    /**
+     * 将十六进制八位字节编码为 Base64
+     *
+     * @param binaryData 包含 binaryData 的数组
+     * @return Encoded Base64 array
+     */
+    @SuppressWarnings("all")
+    public static String encode(byte[] binaryData) {
+        if (binaryData == null) {
+            return null;
+        }
+
+        int lengthDataBits = binaryData.length * EIGHT_BIT;
+        if (lengthDataBits == 0) {
+            return "";
+        }
+
+        int fewerThan24bits = lengthDataBits % TWENTY_FOUR_BIT_GROUP;
+        int numberTriplets = lengthDataBits / TWENTY_FOUR_BIT_GROUP;
+        int numberQuartet = fewerThan24bits != 0 ? numberTriplets + 1 : numberTriplets;
+        char[] encodedData;
+
+        encodedData = new char[numberQuartet * 4];
+
+        byte k, l, b1, b2, b3;
+
+        int encodedIndex = 0;
+        int dataIndex = 0;
+
+        for (int i = 0; i < numberTriplets; i++) {
+            b1 = binaryData[dataIndex++];
+            b2 = binaryData[dataIndex++];
+            b3 = binaryData[dataIndex++];
+
+            l = (byte) (b2 & 0x0f);
+            k = (byte) (b1 & 0x03);
+
+            byte val1 = ((b1 & SIGN) == 0) ? (byte) (b1 >> 2) : (byte) ((b1) >> 2 ^ 0xc0);
+            byte val2 = ((b2 & SIGN) == 0) ? (byte) (b2 >> 4) : (byte) ((b2) >> 4 ^ 0xf0);
+            byte val3 = ((b3 & SIGN) == 0) ? (byte) (b3 >> 6) : (byte) ((b3) >> 6 ^ 0xfc);
+
+            encodedData[encodedIndex++] = LOOK_UP_BASE64_ALPHABET[val1];
+            encodedData[encodedIndex++] = LOOK_UP_BASE64_ALPHABET[val2 | (k << 4)];
+            encodedData[encodedIndex++] = LOOK_UP_BASE64_ALPHABET[(l << 2) | val3];
+            encodedData[encodedIndex++] = LOOK_UP_BASE64_ALPHABET[b3 & 0x3f];
+        }
+
+        if (fewerThan24bits == EIGHT_BIT) {
+            b1 = binaryData[dataIndex];
+            k = (byte) (b1 & 0x03);
+            byte val1 = ((b1 & SIGN) == 0) ? (byte) (b1 >> 2) : (byte) ((b1) >> 2 ^ 0xc0);
+            encodedData[encodedIndex++] = LOOK_UP_BASE64_ALPHABET[val1];
+            encodedData[encodedIndex++] = LOOK_UP_BASE64_ALPHABET[k << 4];
+            encodedData[encodedIndex++] = PAD;
+            encodedData[encodedIndex++] = PAD;
+        } else if (fewerThan24bits == SIXTEEN_BIT) {
+            b1 = binaryData[dataIndex];
+            b2 = binaryData[dataIndex + 1];
+            l = (byte) (b2 & 0x0f);
+            k = (byte) (b1 & 0x03);
+
+            byte val1 = ((b1 & SIGN) == 0) ? (byte) (b1 >> 2) : (byte) ((b1) >> 2 ^ 0xc0);
+            byte val2 = ((b2 & SIGN) == 0) ? (byte) (b2 >> 4) : (byte) ((b2) >> 4 ^ 0xf0);
+
+            encodedData[encodedIndex++] = LOOK_UP_BASE64_ALPHABET[val1];
+            encodedData[encodedIndex++] = LOOK_UP_BASE64_ALPHABET[val2 | (k << 4)];
+            encodedData[encodedIndex++] = LOOK_UP_BASE64_ALPHABET[l << 2];
+            encodedData[encodedIndex++] = PAD;
+        }
+        return new String(encodedData);
+    }
+
+    /**
+     * 将 Base64 数据解码为八位字节
+     *
+     * @param encoded 包含 Base64 数据的字符串
+     * @return 包含解码数据的数组
+     */
+    @SuppressWarnings("all")
+    public static byte[] decode(String encoded) {
+        if (encoded == null) {
+            return null;
+        }
+
+        char[] base64Data = encoded.toCharArray();
+        int len = removeWhiteSpace(base64Data);
+
+        if (len % FOUR_BYTE != 0) {
+            return null;
+        }
+
+        int numberQuadruple = (len / FOUR_BYTE);
+
+        if (numberQuadruple == 0) {
+            return new byte[0];
+        }
+
+        byte[] decodedData;
+        byte b1, b2, b3;
+        char d1;
+        char d2;
+        char d3;
+        char d4;
+
+        int i = 0;
+        int encodedIndex = 0;
+        int dataIndex = 0;
+        decodedData = new byte[(numberQuadruple) * 3];
+
+        for (; i < numberQuadruple - 1; i++) {
+
+            if (isData((d1 = base64Data[dataIndex++])) || isData((d2 = base64Data[dataIndex++])) || isData((d3 = base64Data[dataIndex++])) || isData((d4 = base64Data[dataIndex++]))) {
+                return null;
+            }
+
+            b1 = BASE64_ALPHABET[d1];
+            b2 = BASE64_ALPHABET[d2];
+            encodedIndex = getEncodedIndex(decodedData, b1, b2, d3, d4, encodedIndex);
+        }
+
+        if (isData((d1 = base64Data[dataIndex++])) || isData((d2 = base64Data[dataIndex++]))) {
+            return null;
+        }
+
+        b1 = BASE64_ALPHABET[d1];
+        b2 = BASE64_ALPHABET[d2];
+
+        d3 = base64Data[dataIndex++];
+        d4 = base64Data[dataIndex++];
+        if (isData((d3)) || isData((d4))) {
+            if (isPad(d3) && isPad(d4)) {
+                if ((b2 & 0xf) != 0) {
+                    return null;
+                }
+                byte[] tmp = new byte[i * 3 + 1];
+                System.arraycopy(decodedData, 0, tmp, 0, i * 3);
+                tmp[encodedIndex] = (byte) (b1 << 2 | b2 >> 4);
+                return tmp;
+            } else if (!isPad(d3) && isPad(d4)) {
+                b3 = BASE64_ALPHABET[d3];
+                if ((b3 & 0x3) != 0) {
+                    return null;
+                }
+                byte[] tmp = new byte[i * 3 + 2];
+                System.arraycopy(decodedData, 0, tmp, 0, i * 3);
+                tmp[encodedIndex++] = (byte) (b1 << 2 | b2 >> 4);
+                tmp[encodedIndex] = (byte) (((b2 & 0xf) << 4) | ((b3 >> 2) & 0xf));
+                return tmp;
+            } else {
+                return null;
+            }
+        } else {
+            getEncodedIndex(decodedData, b1, b2, d3, d4, encodedIndex);
+        }
+        return decodedData;
+    }
+
+    /**
+     * 获取编码索引
+     *
+     * @param decodedData  解码数据
+     * @param b1           b1
+     * @param b2           b2
+     * @param d3           d3
+     * @param d4           d4
+     * @param encodedIndex 编码索引
+     * @return int 编码索引
+     */
+    private static int getEncodedIndex(byte[] decodedData, byte b1, byte b2, char d3, char d4, int encodedIndex) {
+        byte b3;
+        byte b4;
+        b3 = BASE64_ALPHABET[d3];
+        b4 = BASE64_ALPHABET[d4];
+
+        decodedData[encodedIndex++] = (byte) (b1 << 2 | b2 >> 4);
+        decodedData[encodedIndex++] = (byte) (((b2 & 0xf) << 4) | ((b3 >> 2) & 0xf));
+        decodedData[encodedIndex++] = (byte) (b3 << 6 | b4);
+        return encodedIndex;
+    }
+
+    /**
+     * 从包含编码的 Base64 数据的 MIME 中删除 WhiteSpace
+     *
+     * @param data base64 数据的字节数组（带 WS）
+     * @return 新长度
+     */
+    private static int removeWhiteSpace(char[] data) {
+        if (data == null) {
+            return 0;
+        }
+
+        int newSize = 0;
+        int len = data.length;
+        for (int i = 0; i < len; i++) {
+            if (!isWhiteSpace(data[i])) {
+                data[newSize++] = data[i];
+            }
+        }
+        return newSize;
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/UniqueInviteCodeUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/UniqueInviteCodeUtil.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/UniqueInviteCodeUtil.java
new file mode 100644
--- /dev/null	(date 1726310283700)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/UniqueInviteCodeUtil.java	(date 1726310283700)
@@ -0,0 +1,27 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import java.util.Random;
+
+public class UniqueInviteCodeUtil {
+    private static final char[] CHARPOOL = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".toCharArray();
+    private static final Integer STRING_LENGTH = 10;
+
+
+    public static String generateInviteCode(String username) {
+        Random random = new Random();
+
+        StringBuilder sb = new StringBuilder(STRING_LENGTH);
+        for (int i = 0; i < STRING_LENGTH; i++) {
+            int index = random.nextInt(CHARPOOL.length);
+            sb.append(CHARPOOL[index]);
+        }
+        String randomString = sb.toString();
+
+        return "INV" + randomString + Base64Util.encode(username.getBytes());
+    }
+
+    public static void main(String[] args) {
+        String inviteCode = generateInviteCode("admin");
+        System.out.println("Generated Invite Code: " + inviteCode);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/html/HTMLFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/html/HTMLFilter.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/html/HTMLFilter.java
new file mode 100644
--- /dev/null	(date 1726288143267)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/html/HTMLFilter.java	(date 1726288143267)
@@ -0,0 +1,605 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.html;
+
+import lombok.Getter;
+
+import java.util.*;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.ConcurrentMap;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/**
+ * HTML过滤器，用于去除XSS漏洞隐患。
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public final class HTMLFilter {
+
+    /**
+     * PHP 中表示 /si 修饰符的正则表达式标志联合
+     **/
+    private static final int REGEX_FLAGS_SI = Pattern.CASE_INSENSITIVE | Pattern.DOTALL;
+    private static final Pattern P_COMMENTS = Pattern.compile("<!--(.*?)-->", Pattern.DOTALL);
+    private static final Pattern P_COMMENT = Pattern.compile("^!--(.*)--$", REGEX_FLAGS_SI);
+    private static final Pattern P_TAGS = Pattern.compile("<(.*?)>", Pattern.DOTALL);
+    private static final Pattern P_END_TAG = Pattern.compile("^/([a-z0-9]+)", REGEX_FLAGS_SI);
+    private static final Pattern P_START_TAG = Pattern.compile("^([a-z0-9]+)(.*?)(/?)$", REGEX_FLAGS_SI);
+    private static final Pattern P_QUOTED_ATTRIBUTES = Pattern.compile("([a-z0-9]+)=([\"'])(.*?)\\2", REGEX_FLAGS_SI);
+    private static final Pattern P_UNQUOTED_ATTRIBUTES = Pattern.compile("([a-z0-9]+)(=)([^\"\\s']+)", REGEX_FLAGS_SI);
+    private static final Pattern P_PROTOCOL = Pattern.compile("^([^:]+):", REGEX_FLAGS_SI);
+    private static final Pattern P_ENTITY = Pattern.compile("&#(\\d+);?");
+    private static final Pattern P_ENTITY_UNICODE = Pattern.compile("&#x([0-9a-f]+);?");
+    private static final Pattern P_ENCODE = Pattern.compile("%([0-9a-f]{2});?");
+    private static final Pattern P_VALID_ENTITIES = Pattern.compile("&([^&;]*)(?=(;|&|$))");
+    private static final Pattern P_VALID_QUOTES = Pattern.compile("(>|^)([^<]+?)(<|$)", Pattern.DOTALL);
+    private static final Pattern P_END_ARROW = Pattern.compile("^>");
+    private static final Pattern P_BODY_TO_END = Pattern.compile("<([^>]*?)(?=<|$)");
+    private static final Pattern P_XML_CONTENT = Pattern.compile("(^|>)([^<]*?)(?=>)");
+    private static final Pattern P_STRAY_LEFT_ARROW = Pattern.compile("<([^>]*?)(?=<|$)");
+    private static final Pattern P_STRAY_RIGHT_ARROW = Pattern.compile("(^|>)([^<]*?)(?=>)");
+    private static final Pattern P_AMP = Pattern.compile("&");
+    private static final Pattern P_QUOTE = Pattern.compile("\"");
+    private static final Pattern P_LEFT_ARROW = Pattern.compile("<");
+    private static final Pattern P_RIGHT_ARROW = Pattern.compile(">");
+    private static final Pattern P_BOTH_ARROWS = Pattern.compile("<>");
+
+    private static final ConcurrentMap<String, Pattern> P_REMOVE_PAIR_BLANKS = new ConcurrentHashMap<>();
+    private static final ConcurrentMap<String, Pattern> P_REMOVE_SELF_BLANKS = new ConcurrentHashMap<>();
+
+    /**
+     * 允许的 HTML 元素集，以及每个元素的允许属性
+     **/
+    private final Map<String, List<String>> vAllowed;
+
+    /**
+     * 每个（允许的）HTML 元素的打开标记计数
+     **/
+    private final Map<String, Integer> vTagCounts = new HashMap<>();
+
+    /**
+     * 必须始终是自闭合的 HTML 元素（例如“<img />”）
+     **/
+    private final String[] vSelfClosingTags;
+
+    /**
+     * HTML 元素必须始终具有单独的开始和结束标记（例如“<b></b>”）
+     **/
+    private final String[] vNeedClosingTags;
+
+    /**
+     * set of disallowed html elements
+     **/
+    private final String[] vDisallowed;
+
+    /**
+     * 应检查有效协议的属性
+     **/
+    private final String[] vProtocolAtts;
+
+    /**
+     * 允许的协议
+     **/
+    private final String[] vAllowedProtocols;
+
+    /**
+     * 如果标签不包含任何内容，则应将其删除（例如“<b></b>”或“<b />”）
+     **/
+    private final String[] vRemoveBlanks;
+
+    /**
+     * HTML 标记中允许的实体
+     **/
+    private final String[] vAllowedEntities;
+
+    /**
+     * 标志确定输入字符串中是否允许注释
+     */
+    private final boolean stripComment;
+
+    /**
+     * 确定在出现“不平衡”尖括号时是否尝试制作标签的标志（例如“<B 文本</b>”变为“<b>文本</b>”）。如果设置为 false，则将对不平衡的尖括号进行 html 转义
+     */
+    private final boolean encodeQuotes;
+
+    /**
+     * 标志，确定在出现“不平衡”尖括号时是否尝试制作标签（例如，“<b 文本</b>”变为“<b>文本</b>”）。如果设置为 false，则将对不平衡的尖括号进行 html 转义
+     */
+    @Getter
+    private final boolean alwaysMakeTags;
+
+    /**
+     * 默认构造函数
+     */
+    public HTMLFilter() {
+
+        vAllowed = new HashMap<>();
+
+        final ArrayList<String> aAtts = new ArrayList<>();
+        aAtts.add("href");
+        aAtts.add("target");
+        vAllowed.put("a", aAtts);
+
+        final ArrayList<String> imgAtts = new ArrayList<>();
+        imgAtts.add("src");
+        imgAtts.add("width");
+        imgAtts.add("height");
+        imgAtts.add("alt");
+        vAllowed.put("img", imgAtts);
+
+        final ArrayList<String> noAtts = new ArrayList<>();
+        vAllowed.put("b", noAtts);
+        vAllowed.put("strong", noAtts);
+        vAllowed.put("i", noAtts);
+        vAllowed.put("em", noAtts);
+
+        vSelfClosingTags = new String[]{"img"};
+        vNeedClosingTags = new String[]{"a", "b", "strong", "i", "em"};
+        vDisallowed = new String[]{};
+        vAllowedProtocols = new String[]{"http", "mailto", "https"};
+        vProtocolAtts = new String[]{"src", "href"};
+        vRemoveBlanks = new String[]{"a", "b", "strong", "i", "em"};
+        vAllowedEntities = new String[]{"amp", "gt", "lt", "quot"};
+        stripComment = true;
+        encodeQuotes = true;
+        alwaysMakeTags = false;
+    }
+
+    /**
+     * Map-parameter 可配置构造函数
+     *
+     * @param conf 包含配置的映射，键与字段名称匹配
+     */
+    @SuppressWarnings("unchecked")
+    public HTMLFilter(final Map<String, Object> conf) {
+
+        assert conf.containsKey("vAllowed") : "configuration requires vAllowed";
+        assert conf.containsKey("vSelfClosingTags") : "configuration requires vSelfClosingTags";
+        assert conf.containsKey("vNeedClosingTags") : "configuration requires vNeedClosingTags";
+        assert conf.containsKey("vDisallowed") : "configuration requires vDisallowed";
+        assert conf.containsKey("vAllowedProtocols") : "configuration requires vAllowedProtocols";
+        assert conf.containsKey("vProtocolAtts") : "configuration requires vProtocolAtts";
+        assert conf.containsKey("vRemoveBlanks") : "configuration requires vRemoveBlanks";
+        assert conf.containsKey("vAllowedEntities") : "configuration requires vAllowedEntities";
+
+        vAllowed = Collections.unmodifiableMap((HashMap<String, List<String>>) conf.get("vAllowed"));
+        vSelfClosingTags = (String[]) conf.get("vSelfClosingTags");
+        vNeedClosingTags = (String[]) conf.get("vNeedClosingTags");
+        vDisallowed = (String[]) conf.get("vDisallowed");
+        vAllowedProtocols = (String[]) conf.get("vAllowedProtocols");
+        vProtocolAtts = (String[]) conf.get("vProtocolAtts");
+        vRemoveBlanks = (String[]) conf.get("vRemoveBlanks");
+        vAllowedEntities = (String[]) conf.get("vAllowedEntities");
+        stripComment = conf.containsKey("stripComment") ? (Boolean) conf.get("stripComment") : true;
+        encodeQuotes = conf.containsKey("encodeQuotes") ? (Boolean) conf.get("encodeQuotes") : true;
+        alwaysMakeTags = conf.containsKey("alwaysMakeTags") ? (Boolean) conf.get("alwaysMakeTags") : true;
+    }
+
+    /**
+     * 重置过滤器，以便重复使用
+     */
+    private void reset() {
+        vTagCounts.clear();
+    }
+
+    /**
+     * 将十进制数字转换为字符
+     *
+     * @param decimal 十进制数字
+     * @return 字符
+     */
+    public static String chr(final int decimal) {
+        return String.valueOf((char) decimal);
+    }
+
+    /**
+     * 将 HTML 实体转换为字符
+     *
+     * @param s HTML 实体
+     * @return 字符
+     */
+    public static String htmlSpecialChars(final String s) {
+        String result = s;
+        result = regexReplace(P_AMP, "&amp;", result);
+        result = regexReplace(P_QUOTE, "&quot;", result);
+        result = regexReplace(P_LEFT_ARROW, "&lt;", result);
+        result = regexReplace(P_RIGHT_ARROW, "&gt;", result);
+        return result;
+    }
+
+    /**
+     * 给定用户提交的输入字符串，过滤掉任何无效或受限制的 html
+     *
+     * @param input 可能包含HTML的文本（即由用户提交）
+     * @return 输入的“干净”版本，仅允许使用有效的白名单 HTML 元素
+     */
+    public String filter(final String input) {
+        reset();
+        String s = input;
+
+        s = escapeComments(s);
+
+        s = balanceHtml(s);
+
+        s = checkTags(s);
+
+        s = processRemoveBlanks(s);
+
+        // s = validateEntities(s);
+
+        return s;
+    }
+
+    /**
+     * 是否删除注释
+     *
+     * @return 是否删除注释
+     */
+    public boolean isStripComments() {
+        return stripComment;
+    }
+
+    /**
+     * 删除注释
+     *
+     * @param s 可能包含HTML的文本（即由用户提交）
+     * @return 输入的“干净”版本，删除了注释
+     */
+    private String escapeComments(final String s) {
+        final Matcher m = P_COMMENTS.matcher(s);
+        final StringBuilder buf = new StringBuilder();
+        if (m.find()) {
+            final String match = m.group(1);
+            m.appendReplacement(buf, Matcher.quoteReplacement("<!--" + htmlSpecialChars(match) + "-->"));
+        }
+        m.appendTail(buf);
+
+        return buf.toString();
+    }
+
+    /**
+     * 确保所有的标签都有结束标签
+     *
+     * @param s 可能包含HTML的文本（即由用户提交）
+     * @return 输入的“干净”版本，删除了注释
+     */
+    private String balanceHtml(String s) {
+        if (alwaysMakeTags) {
+            s = regexReplace(P_END_ARROW, "", s);
+            // 不追加结束标签
+            s = regexReplace(P_BODY_TO_END, "<$1>", s);
+            s = regexReplace(P_XML_CONTENT, "$1<$2", s);
+        } else {
+            s = regexReplace(P_STRAY_LEFT_ARROW, "&lt;$1", s);
+            s = regexReplace(P_STRAY_RIGHT_ARROW, "$1$2&gt;<", s);
+
+            s = regexReplace(P_BOTH_ARROWS, "", s);
+        }
+
+        return s;
+    }
+
+    /**
+     * 检查标签
+     *
+     * @param s 可能包含HTML的文本（即由用户提交）
+     * @return 输入的“干净”版本，删除了无效标签
+     */
+    private String checkTags(String s) {
+        Matcher m = P_TAGS.matcher(s);
+
+        final StringBuilder buf = new StringBuilder();
+        while (m.find()) {
+            String replaceStr = m.group(1);
+            replaceStr = processTag(replaceStr);
+            m.appendReplacement(buf, Matcher.quoteReplacement(replaceStr));
+        }
+        m.appendTail(buf);
+
+        final StringBuilder sBuilder = new StringBuilder(buf.toString());
+        for (String key : vTagCounts.keySet()) {
+            for (int ii = 0; ii < vTagCounts.get(key); ii++) {
+                sBuilder.append("</").append(key).append(">");
+            }
+        }
+        s = sBuilder.toString();
+
+        return s;
+    }
+
+    /**
+     * 处理单个标签
+     *
+     * @param s 可能包含HTML的文本（即由用户提交）
+     * @return 处理的标签
+     */
+    private String processRemoveBlanks(final String s) {
+        String result = s;
+        for (String tag : vRemoveBlanks) {
+            if (!P_REMOVE_PAIR_BLANKS.containsKey(tag)) {
+                P_REMOVE_PAIR_BLANKS.putIfAbsent(tag, Pattern.compile("<" + tag + "(\\s[^>]*)?></" + tag + ">"));
+            }
+            result = regexReplace(P_REMOVE_PAIR_BLANKS.get(tag), "", result);
+            if (!P_REMOVE_SELF_BLANKS.containsKey(tag)) {
+                P_REMOVE_SELF_BLANKS.putIfAbsent(tag, Pattern.compile("<" + tag + "(\\s[^>]*)?/>"));
+            }
+            result = regexReplace(P_REMOVE_SELF_BLANKS.get(tag), "", result);
+        }
+
+        return result;
+    }
+
+    /**
+     * 正则替换
+     *
+     * @param regexPattern 正则表达式
+     * @param replacement  替换
+     * @param s            可能包含HTML的文本（即由用户提交）
+     * @return 替换后的字符串
+     */
+    private static String regexReplace(final Pattern regexPattern, final String replacement, final String s) {
+        Matcher m = regexPattern.matcher(s);
+        return m.replaceAll(replacement);
+    }
+
+    /**
+     * 处理标签
+     *
+     * @param s 可能包含HTML的文本（即由用户提交）
+     * @return 处理的标签
+     */
+    private String processTag(final String s) {
+        Matcher m = P_END_TAG.matcher(s);
+        if (m.find()) {
+            final String name = m.group(1).toLowerCase();
+            if (allowed(name)) {
+                if (!inArray(name, vSelfClosingTags)) {
+                    if (vTagCounts.containsKey(name)) {
+                        vTagCounts.put(name, vTagCounts.get(name) - 1);
+                        return "</" + name + ">";
+                    }
+                }
+            }
+        }
+
+        m = P_START_TAG.matcher(s);
+        if (m.find()) {
+            final String name = m.group(1).toLowerCase();
+            final String body = m.group(2);
+            String ending = m.group(3);
+
+            if (allowed(name)) {
+                final StringBuilder params = new StringBuilder();
+
+                final Matcher m2 = P_QUOTED_ATTRIBUTES.matcher(body);
+                final Matcher m3 = P_UNQUOTED_ATTRIBUTES.matcher(body);
+                final List<String> paramNames = new ArrayList<>();
+                final List<String> paramValues = new ArrayList<>();
+                while (m2.find()) {
+                    paramNames.add(m2.group(1));
+                    paramValues.add(m2.group(3));
+                }
+                while (m3.find()) {
+                    paramNames.add(m3.group(1));
+                    paramValues.add(m3.group(3));
+                }
+
+                String paramName, paramValue;
+                for (int ii = 0; ii < paramNames.size(); ii++) {
+                    paramName = paramNames.get(ii).toLowerCase();
+                    paramValue = paramValues.get(ii);
+
+                    if (allowedAttribute(name, paramName)) {
+                        if (inArray(paramName, vProtocolAtts)) {
+                            paramValue = processParamProtocol(paramValue);
+                        }
+                        params.append(' ').append(paramName).append("=\\\"").append(paramValue).append("\\\"");
+                    }
+                }
+
+                if (inArray(name, vSelfClosingTags)) {
+                    ending = " /";
+                }
+
+                if (inArray(name, vNeedClosingTags)) {
+                    ending = "";
+                }
+
+                if (ending == null || ending.isEmpty()) {
+                    if (vTagCounts.containsKey(name)) {
+                        vTagCounts.put(name, vTagCounts.get(name) + 1);
+                    } else {
+                        vTagCounts.put(name, 1);
+                    }
+                } else {
+                    ending = " /";
+                }
+                return "<" + name + params + ending + ">";
+            } else {
+                return "";
+            }
+        }
+
+        m = P_COMMENT.matcher(s);
+        if (!stripComment && m.find()) {
+            return "<" + m.group() + ">";
+        }
+
+        return "";
+    }
+
+    /**
+     * 处理参数协议
+     *
+     * @param s 可能包含HTML的文本（即由用户提交）
+     * @return 处理的参数协议
+     */
+    private String processParamProtocol(String s) {
+        s = decodeEntities(s);
+        final Matcher m = P_PROTOCOL.matcher(s);
+        if (m.find()) {
+            final String protocol = m.group(1);
+            if (!inArray(protocol, vAllowedProtocols)) {
+                s = "#" + s.substring(protocol.length() + 1);
+                if (s.startsWith("#//")) {
+                    s = "#" + s.substring(3);
+                }
+            }
+        }
+
+        return s;
+    }
+
+    /**
+     * 处理实体
+     *
+     * @param s 可能包含HTML的文本（即由用户提交）
+     * @return 处理的实体
+     */
+    private String decodeEntities(String s) {
+        StringBuilder buf = new StringBuilder();
+
+        Matcher m = P_ENTITY.matcher(s);
+        while (m.find()) {
+            final String match = m.group(1);
+            final int decimal = Integer.decode(match);
+            m.appendReplacement(buf, Matcher.quoteReplacement(chr(decimal)));
+        }
+        m.appendTail(buf);
+        s = buf.toString();
+
+        buf = new StringBuilder();
+        m = P_ENTITY_UNICODE.matcher(s);
+        while (m.find()) {
+            final String match = m.group(1);
+            final int decimal = Integer.valueOf(match, 16);
+            m.appendReplacement(buf, Matcher.quoteReplacement(chr(decimal)));
+        }
+        m.appendTail(buf);
+        s = buf.toString();
+
+        buf = new StringBuilder();
+        m = P_ENCODE.matcher(s);
+        while (m.find()) {
+            final String match = m.group(1);
+            final int decimal = Integer.valueOf(match, 16);
+            m.appendReplacement(buf, Matcher.quoteReplacement(chr(decimal)));
+        }
+        m.appendTail(buf);
+        s = buf.toString();
+
+        s = validateEntities(s);
+        return s;
+    }
+
+    /**
+     * 验证实体
+     *
+     * @param s 可能包含HTML的文本（即由用户提交）
+     * @return 验证的实体
+     */
+    private String validateEntities(final String s) {
+        StringBuilder buf = new StringBuilder();
+
+        Matcher m = P_VALID_ENTITIES.matcher(s);
+        while (m.find()) {
+            final String one = m.group(1);
+            final String two = m.group(2);
+            m.appendReplacement(buf, Matcher.quoteReplacement(checkEntity(one, two)));
+        }
+        m.appendTail(buf);
+
+        return encodeQuotes(buf.toString());
+    }
+
+    /**
+     * 编码引号
+     *
+     * @param s 可能包含HTML的文本（即由用户提交）
+     * @return 编码引号的实体
+     */
+    private String encodeQuotes(final String s) {
+        if (encodeQuotes) {
+            StringBuilder buf = new StringBuilder();
+            Matcher m = P_VALID_QUOTES.matcher(s);
+            while (m.find()) {
+                final String one = m.group(1);
+                final String two = m.group(2);
+                final String three = m.group(3);
+                m.appendReplacement(buf, Matcher.quoteReplacement(one + two + three));
+            }
+            m.appendTail(buf);
+            return buf.toString();
+        } else {
+            return s;
+        }
+    }
+
+    /**
+     * 检查实体
+     *
+     * @param preamble 前言
+     * @param term     术语
+     * @return 检查的实体
+     */
+    private String checkEntity(final String preamble, final String term) {
+
+        return ";".equals(term) && isValidEntity(preamble) ? '&' + preamble : "&amp;" + preamble;
+    }
+
+    /**
+     * 验证实体
+     *
+     * @param entity 实体
+     * @return 验证的实体
+     */
+    private boolean isValidEntity(final String entity) {
+        return inArray(entity, vAllowedEntities);
+    }
+
+    /**
+     * 是否包含
+     *
+     * @param s     可能包含HTML的文本（即由用户提交）
+     * @param array 数组
+     * @return 是否包含
+     */
+    private static boolean inArray(final String s, final String[] array) {
+        for (String item : array) {
+            if (item != null && item.equals(s)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 是否允许
+     *
+     * @param name 名称
+     * @return 是否允许
+     */
+    private boolean allowed(final String name) {
+        return (vAllowed.isEmpty() || vAllowed.containsKey(name)) && !inArray(name, vDisallowed);
+    }
+
+    /**
+     * 是否允许属性
+     *
+     * @param name      名称
+     * @param paramName 参数名称
+     * @return 是否允许属性
+     */
+    private boolean allowedAttribute(final String name, final String paramName) {
+        return allowed(name) && (vAllowed.isEmpty() || vAllowed.get(name).contains(paramName));
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/ValidateIdCardUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/ValidateIdCardUtil.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/ValidateIdCardUtil.java
new file mode 100644
--- /dev/null	(date 1726310283621)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/ValidateIdCardUtil.java	(date 1726310283621)
@@ -0,0 +1,209 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import lombok.Data;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.regex.Pattern;
+
+@Data
+public class ValidateIdCardUtil {
+    /**
+     * 每一位的权重
+     */
+    private static final int[] WEIGHT = {7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2};
+    /**
+     * 校验码对应表
+     */
+    private static final char[] CHECK_CODE = {'1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'};
+
+    /**
+     * 正则表达式匹配澳门身份证号码
+     */
+    private static final Pattern MACAU_ID_PATTERN = Pattern.compile("[1|5|7][0-9]{6}\\(?[0-9A-Z]\\)?");
+
+    private static final Map<Character, Integer> LETTER_TO_NUMBER_MAP = new HashMap<>();
+
+    static {
+        LETTER_TO_NUMBER_MAP.put('A', 10);
+        LETTER_TO_NUMBER_MAP.put('B', 11);
+        LETTER_TO_NUMBER_MAP.put('C', 12);
+        LETTER_TO_NUMBER_MAP.put('D', 13);
+        LETTER_TO_NUMBER_MAP.put('E', 14);
+        LETTER_TO_NUMBER_MAP.put('F', 15);
+        LETTER_TO_NUMBER_MAP.put('G', 16);
+        LETTER_TO_NUMBER_MAP.put('H', 17);
+        LETTER_TO_NUMBER_MAP.put('J', 18);
+        LETTER_TO_NUMBER_MAP.put('K', 19);
+        LETTER_TO_NUMBER_MAP.put('L', 20);
+        LETTER_TO_NUMBER_MAP.put('M', 21);
+        LETTER_TO_NUMBER_MAP.put('N', 22);
+        LETTER_TO_NUMBER_MAP.put('P', 23);
+        LETTER_TO_NUMBER_MAP.put('Q', 24);
+        LETTER_TO_NUMBER_MAP.put('R', 25);
+        LETTER_TO_NUMBER_MAP.put('S', 26);
+        LETTER_TO_NUMBER_MAP.put('T', 27);
+        LETTER_TO_NUMBER_MAP.put('U', 28);
+        LETTER_TO_NUMBER_MAP.put('V', 29);
+        LETTER_TO_NUMBER_MAP.put('W', 30);
+        LETTER_TO_NUMBER_MAP.put('X', 31);
+        LETTER_TO_NUMBER_MAP.put('Y', 32);
+        LETTER_TO_NUMBER_MAP.put('Z', 33);
+    }
+
+    /**
+     * 大陆居民身份证号码为18位数字，前17位为出生日期、地区代码等信息，第18位为校验码。校验码根据前17位数字计算得出
+     *
+     * @param idCard17
+     * @return
+     */
+    private static char getCheckCode(String idCard17) {
+        int sum = 0;
+        for (int i = 0; i < 17; i++) {
+            sum += (idCard17.charAt(i) - '0') * WEIGHT[i];
+        }
+        return CHECK_CODE[sum % 11];
+    }
+
+    public static boolean validateMainlandId(String idCard) {
+        if (idCard == null || !idCard.matches("[1-9][0-9]{5}(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])[0-9]{3}[0-9Xx]")) {
+            return false;
+        }
+
+        String idCard17 = idCard.substring(0, 17);
+        char checkCode = getCheckCode(idCard17);
+
+        // 大陆身份证校验码为最后一位
+        return Character.toUpperCase(idCard.charAt(17)) == checkCode;
+    }
+
+    public static boolean validateTaiwanId(String id) {
+        if (id == null || !id.matches("[A-Z][0-9]{9}")) {
+            return false;
+        }
+
+        char letter = id.charAt(0);
+        int letterValue = LETTER_TO_NUMBER_MAP.get(letter);
+
+        int letter1 = letterValue / 10;
+        int letter2 = letterValue % 10;
+
+        int sum = letter1 + letter2 * 9;
+        int[] weights = {8, 7, 6, 5, 4, 3, 2, 1};
+        for (int i = 0; i < 8; i++) {
+            sum += Character.getNumericValue(id.charAt(i + 1)) * weights[i];
+        }
+        sum += Character.getNumericValue(id.charAt(9));
+        return sum % 10 == 0;
+    }
+
+    public static boolean validateMacauId(String id) {
+        if (id == null || !MACAU_ID_PATTERN.matcher(id).matches()) {
+            return false;
+        }
+
+        int[] weights = {8, 7, 6, 5, 4, 3, 2, 1};
+        int sum = 0;
+        for (int i = 0; i < 7; i++) {
+            char c = id.charAt(i);
+            sum += Character.getNumericValue(c) * weights[i];
+        }
+
+        char checkChar = id.charAt(7);
+        int checkCode;
+        if (checkChar == 'A') {
+            checkCode = 10;
+        } else {
+            checkCode = Character.getNumericValue(checkChar);
+        }
+
+        return (sum + checkCode) % 11 == 0;
+    }
+
+    public static boolean validateHongKongId(String id) {
+        if (id == null || !id.matches("[A-Z]{1,2}[0-9]{6}\\(?[0-9A]\\)?")) {
+            return false;
+        }
+        id = id.replace("(", "").replace(")", "");
+
+        if (id.length() == 8) {
+            id = " " + id;
+        }
+
+        if (id.length() != 9) {
+            return false;
+        }
+
+        int[] weights = {9, 8, 7, 6, 5, 4, 3, 2, 1};
+        int total = 0;
+        for (int i = 0; i < 9; i++) {
+            total += charToValue(id.charAt(i)) * weights[i];
+        }
+
+        int remainder = total % 11;
+        char checkDigit = id.charAt(id.length() - 1);
+
+        if (remainder == 0) {
+            return checkDigit == '0';
+        } else if (remainder == 1) {
+            return Character.toUpperCase(checkDigit) == 'A';
+        } else {
+            return checkDigit == Character.forDigit(11 - remainder, 10);
+        }
+    }
+
+    private static int charToValue(char c) {
+        if (c == ' ') {
+            return 36;
+        } else if (Character.isLetter(c)) {
+            return Character.toUpperCase(c) - 55;
+        } else {
+            return Character.getNumericValue(c);
+        }
+    }
+
+    private static IDCardType determineIdCardType(String idCard) {
+        if (idCard.matches("[1-9][0-9]{5}(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])[0-9]{3}[0-9Xx]")) {
+            return IDCardType.MAINLAND;
+        } else if (idCard.matches("[A-Z][0-9]{9}")) {
+            return IDCardType.TAIWAN;
+        } else if (idCard.matches("[1|5|7][0-9]{6}\\(?[0-9A-Z]\\)?")) {
+            return IDCardType.MACAU;
+        } else if (idCard.matches("[A-Z]{1,2}[0-9]{6}\\(?[0-9A]\\)?")) {
+            return IDCardType.HONGKONG;
+        } else {
+            return IDCardType.UNKNOWN;
+        }
+    }
+
+    public static Boolean doMain(String idCard) {
+        IDCardType idCardType = determineIdCardType(idCard);
+        System.out.println("idCardType = " + idCardType);
+        switch (idCardType) {
+            case MAINLAND:
+                return validateMainlandId(idCard);
+            case TAIWAN:
+                return validateTaiwanId(idCard);
+            case MACAU:
+                return validateMacauId(idCard);
+            case HONGKONG:
+                return validateHongKongId(idCard);
+            default:
+                return Boolean.FALSE;
+        }
+    }
+
+    public static void main(String[] args) {
+        System.out.println(doMain("37131220020802673x"));
+        System.out.println(doMain("X219100167"));
+//        System.out.println(doMain("37131220020802673x"));
+    }
+
+    enum IDCardType {
+        MAINLAND,
+        TAIWAN,
+        MACAU,
+        HONGKONG,
+        UNKNOWN
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/HttpRequestSender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/HttpRequestSender.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/HttpRequestSender.java
new file mode 100644
--- /dev/null	(date 1726310283654)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/HttpRequestSender.java	(date 1726310283654)
@@ -0,0 +1,85 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import com.fasterxml.jackson.databind.ObjectMapper;
+
+import java.io.*;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.nio.charset.StandardCharsets;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+
+public class HttpRequestSender {
+    private static final ObjectMapper objectMapper = new ObjectMapper();
+
+    private static final Map<String, String> requestHeaders = new ConcurrentHashMap<>();
+
+    static {
+        requestHeaders.put("Content-Type", "application/json");
+    }
+
+    private static void setRequestHeaders(HttpURLConnection connection) {
+        for (Map.Entry<String, String> header : requestHeaders.entrySet()) {
+            connection.setRequestProperty(header.getKey(), header.getValue());
+        }
+    }
+
+    private static String readInputStream(InputStream inputStream) throws IOException {
+        try (BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream, StandardCharsets.UTF_8))) {
+            String line;
+            StringBuilder response = new StringBuilder();
+            while ((line = bufferedReader.readLine()) != null) {
+                response.append(line);
+            }
+            return response.toString();
+        }
+    }
+
+    public static String sendGetRequest(String urlString) throws IOException {
+        URL url = new URL(urlString);
+        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
+        connection.setRequestMethod("GET");
+        setRequestHeaders(connection);
+
+        int responseCode = connection.getResponseCode();
+        if (responseCode == HttpURLConnection.HTTP_OK) {
+            return readInputStream(connection.getInputStream());
+        } else {
+            throw new RuntimeException("Failed : HTTP error code : " + responseCode);
+        }
+    }
+
+    public static String sendPostRequest(String urlString, Object requestBody) throws IOException {
+        String jsonInputString = convertObjectToJson(requestBody);
+        return sendPostRequest(urlString, jsonInputString);
+    }
+
+    public static String sendPostRequest(String urlString, String jsonInputString) throws IOException {
+        URL url = new URL(urlString);
+        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
+        connection.setRequestMethod("POST");
+        connection.setDoOutput(true);
+        setRequestHeaders(connection);
+
+        try (OutputStream os = connection.getOutputStream()) {
+            byte[] input = jsonInputString.getBytes(StandardCharsets.UTF_8);
+            os.write(input, 0, input.length);
+        }
+
+        int responseCode = connection.getResponseCode();
+        if (responseCode == HttpURLConnection.HTTP_OK) {
+            return readInputStream(connection.getInputStream());
+        } else {
+            throw new RuntimeException("Failed : HTTP error code : " + responseCode);
+        }
+    }
+
+    private static String convertObjectToJson(Object object) {
+        try {
+            return objectMapper.writeValueAsString(object);
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/html/EscapeUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/html/EscapeUtil.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/html/EscapeUtil.java
new file mode 100644
--- /dev/null	(date 1726288143305)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/html/EscapeUtil.java	(date 1726288143305)
@@ -0,0 +1,157 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.html;
+
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+
+/**
+ * 转义和反转义工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class EscapeUtil {
+
+    /**
+     * 正则表达式：HTML
+     */
+    public static final String RE_HTML_MARK = "(<[^<]*?>)|(<[\\s]*?/[^<]*?>)|(<[^<]*?/[\\s]*?>)";
+
+    /**
+     * HTML特殊字符实体
+     */
+    private static final char[][] TEXT = new char[64][];
+
+    static {
+        for (int i = 0; i < 64; i++) {
+            TEXT[i] = new char[]{(char) i};
+        }
+
+        // special HTML characters
+        TEXT['\''] = "&#039;".toCharArray();
+        TEXT['"'] = "&#34;".toCharArray();
+        TEXT['&'] = "&#38;".toCharArray();
+        TEXT['<'] = "&#60;".toCharArray();
+        TEXT['>'] = "&#62;".toCharArray();
+    }
+
+    /**
+     * 转义文本中的HTML字符为安全的字符
+     *
+     * @param text 被转义的文本
+     * @return 转义后的文本
+     */
+    public static String escape(String text) {
+        return encode(text);
+    }
+
+    /**
+     * 还原被转义的HTML特殊字符
+     *
+     * @param content 包含转义符的HTML内容
+     * @return 转换后的字符串
+     */
+    public static String unescape(String content) {
+        return decode(content);
+    }
+
+    /**
+     * 清除所有HTML标签，但是不删除标签内的内容
+     *
+     * @param content 文本
+     * @return 清除标签后的文本
+     */
+    public static String clean(String content) {
+        return new HTMLFilter().filter(content);
+    }
+
+    /**
+     * Escape编码
+     *
+     * @param text 被编码的文本
+     * @return 编码后的字符
+     */
+    private static String encode(String text) {
+        if (StringUtils.isEmpty(text)) {
+            return StringUtils.EMPTY;
+        }
+
+        final StringBuilder tmp = new StringBuilder(text.length() * 6);
+        char c;
+        for (int i = 0; i < text.length(); i++) {
+            c = text.charAt(i);
+            if (c < 256) {
+                tmp.append("%");
+                if (c < 16) {
+                    tmp.append("0");
+                }
+                tmp.append(Integer.toString(c, 16));
+            } else {
+                tmp.append("%u");
+                if (c <= 0xfff) {
+                    // issue#I49JU8@Gitee
+                    tmp.append("0");
+                }
+                tmp.append(Integer.toString(c, 16));
+            }
+        }
+        return tmp.toString();
+    }
+
+    /**
+     * Escape解码
+     *
+     * @param content 被转义的内容
+     * @return 解码后的字符串
+     */
+    public static String decode(String content) {
+        if (StringUtils.isEmpty(content)) {
+            return content;
+        }
+
+        StringBuilder tmp = new StringBuilder(content.length());
+        int lastPos = 0, pos = 0;
+        char ch;
+        while (lastPos < content.length()) {
+            pos = content.indexOf("%", lastPos);
+            if (pos == lastPos) {
+                if (content.charAt(pos + 1) == 'u') {
+                    ch = (char) Integer.parseInt(content.substring(pos + 2, pos + 6), 16);
+                    tmp.append(ch);
+                    lastPos = pos + 6;
+                } else {
+                    ch = (char) Integer.parseInt(content.substring(pos + 1, pos + 3), 16);
+                    tmp.append(ch);
+                    lastPos = pos + 3;
+                }
+            } else {
+                if (pos == -1) {
+                    tmp.append(content.substring(lastPos));
+                    lastPos = content.length();
+                } else {
+                    tmp.append(content, lastPos, pos);
+                    lastPos = pos;
+                }
+            }
+        }
+        return tmp.toString();
+    }
+
+    public static void main(String[] args) {
+        String html = "<script>alert(1);</script>";
+        String escape = EscapeUtil.escape(html);
+        // String html = "<scr<script>ipt>alert(\"XSS\")</scr<script>ipt>";
+        // String html = "<123";
+        // String html = "123>";
+        System.out.println("clean: " + EscapeUtil.clean(html));
+        System.out.println("escape: " + escape);
+        System.out.println("unescape: " + EscapeUtil.unescape(escape));
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/CookieBuilder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/CookieBuilder.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/CookieBuilder.java
new file mode 100644
--- /dev/null	(date 1726310283723)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/CookieBuilder.java	(date 1726310283723)
@@ -0,0 +1,68 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import cn.hutool.core.util.StrUtil;
+import jakarta.servlet.http.Cookie;
+import jakarta.servlet.http.HttpServletRequest;
+import jakarta.servlet.http.HttpServletResponse;
+import lombok.Data;
+import lombok.experimental.Accessors;
+import lombok.extern.slf4j.Slf4j;
+
+import java.net.URLDecoder;
+import java.net.URLEncoder;
+import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
+
+@Slf4j
+@Data
+@Accessors(chain = true, fluent = true)
+public class CookieBuilder {
+    private final HttpServletRequest request;
+    private final HttpServletResponse response;
+    private Charset charset = StandardCharsets.UTF_8;
+    private int maxAge = -1;
+    private String path = "/";
+    private boolean httpOnly;
+    private String name;
+    private String value;
+    private String domain;
+
+    public CookieBuilder(HttpServletRequest request, HttpServletResponse response) {
+        this.request = request;
+        this.response = response;
+    }
+
+    /**
+     * 构建cookie，会对cookie值用UTF-8做URL编码，避免中文乱码
+     */
+    public void build() {
+        if (response == null) {
+            log.error("response为null，无法写入cookie");
+            return;
+        }
+        Cookie cookie = new Cookie(name, URLEncoder.encode(value, charset));
+        if (StrUtil.isNotBlank(domain)) {
+            cookie.setDomain(domain);
+        } else if (request != null) {
+            String serverName = request.getServerName();
+            serverName = StrUtil.subAfter(serverName, ".", false);
+            cookie.setDomain("." + serverName);
+        }
+        cookie.setHttpOnly(httpOnly);
+        cookie.setMaxAge(maxAge);
+        cookie.setPath(path);
+        log.debug("生成cookie，编码方式:{}，【{}={}，domain:{};maxAge={};path={};httpOnly={}】",
+                charset.name(), name, value, domain, maxAge, path, httpOnly);
+        response.addCookie(cookie);
+    }
+
+    /**
+     * 利用UTF-8对cookie值解码，避免中文乱码问题
+     *
+     * @param cookieValue cookie原始值
+     * @return 解码后的值
+     */
+    public String decode(String cookieValue) {
+        return URLDecoder.decode(cookieValue, charset);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/StringUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/StringUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/StringUtils.java
new file mode 100644
--- /dev/null	(date 1726288143318)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/StringUtils.java	(date 1726288143318)
@@ -0,0 +1,519 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils;
+
+import leyramu.qinian.asc.common.core.constant.Constants;
+import leyramu.qinian.asc.common.core.text.StrFormatter;
+import org.springframework.util.AntPathMatcher;
+
+import java.util.Collection;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * 字符串工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class StringUtils extends org.apache.commons.lang3.StringUtils {
+
+    /**
+     * 空字符串
+     */
+    private static final String NULLPTR = "";
+
+    /**
+     * 下划线
+     */
+    private static final char SEPARATOR = '_';
+
+    /**
+     * 星号
+     */
+    private static final char ASTERISK = '*';
+
+    /**
+     * 获取参数不为空值
+     *
+     * @param value defaultValue 要判断的value
+     * @return value 返回值
+     */
+    public static <T> T nvl(T value, T defaultValue) {
+        return value != null ? value : defaultValue;
+    }
+
+    /**
+     * 判断一个Collection是否为空， 包含List，Set，Queue
+     *
+     * @param coll 要判断的Collection
+     * @return true：为空 false：非空
+     */
+    public static boolean isEmpty(Collection<?> coll) {
+        return isNull(coll) || coll.isEmpty();
+    }
+
+    /**
+     * 判断一个Collection是否非空，包含List，Set，Queue
+     *
+     * @param coll 要判断的Collection
+     * @return true：非空 false：空
+     */
+    public static boolean isNotEmpty(Collection<?> coll) {
+        return !isEmpty(coll);
+    }
+
+    /**
+     * 判断一个对象数组是否为空
+     *
+     * @param objects 要判断的对象数组
+     *                * @return true：为空 false：非空
+     */
+    public static boolean isEmpty(Object[] objects) {
+        return isNull(objects) || (objects.length == 0);
+    }
+
+    /**
+     * 判断一个对象数组是否非空
+     *
+     * @param objects 要判断的对象数组
+     * @return true：非空 false：空
+     */
+    public static boolean isNotEmpty(Object[] objects) {
+        return !isEmpty(objects);
+    }
+
+    /**
+     * 判断一个Map是否为空
+     *
+     * @param map 要判断的Map
+     * @return true：为空 false：非空
+     */
+    public static boolean isEmpty(Map<?, ?> map) {
+        return isNull(map) || map.isEmpty();
+    }
+
+    /**
+     * 判断一个Map是否为空
+     *
+     * @param map 要判断的Map
+     * @return true：非空 false：空
+     */
+    public static boolean isNotEmpty(Map<?, ?> map) {
+        return !isEmpty(map);
+    }
+
+    /**
+     * 判断一个字符串是否为空串
+     *
+     * @param str String
+     * @return true：为空 false：非空
+     */
+    public static boolean isEmpty(String str) {
+        return isNull(str) || NULLPTR.equals(str.trim());
+    }
+
+    /**
+     * 判断一个字符串是否为非空串
+     *
+     * @param str String
+     * @return true：非空串 false：空串
+     */
+    public static boolean isNotEmpty(String str) {
+        return !isEmpty(str);
+    }
+
+    /**
+     * 判断一个对象是否为空
+     *
+     * @param object Object
+     * @return true：为空 false：非空
+     */
+    public static boolean isNull(Object object) {
+        return object == null;
+    }
+
+    /**
+     * 判断一个对象是否非空
+     *
+     * @param object Object
+     * @return true：非空 false：空
+     */
+    public static boolean isNotNull(Object object) {
+        return !isNull(object);
+    }
+
+    /**
+     * 判断一个对象是否是数组类型（Java基本型别的数组）
+     *
+     * @param object 对象
+     * @return true：是数组 false：不是数组
+     */
+    public static boolean isArray(Object object) {
+        return isNotNull(object) && object.getClass().isArray();
+    }
+
+    /**
+     * 去空格
+     *
+     * @param str 要处理的字符串
+     * @return 去空格后的字符串
+     */
+    public static String trim(String str) {
+        return (str == null ? "" : str.trim());
+    }
+
+    /**
+     * 替换指定字符串的指定区间内字符为"*"
+     *
+     * @param str          字符串
+     * @param startInclude 开始位置（包含）
+     * @param endExclude   结束位置（不包含）
+     * @return 替换后的字符串
+     */
+    public static String hide(CharSequence str, int startInclude, int endExclude) {
+        if (isEmpty(str)) {
+            return NULLPTR;
+        }
+        final int strLength = str.length();
+        if (startInclude > strLength) {
+            return NULLPTR;
+        }
+        if (endExclude > strLength) {
+            endExclude = strLength;
+        }
+        if (startInclude > endExclude) {
+            // 如果起始位置大于结束位置，不替换
+            return NULLPTR;
+        }
+        final char[] chars = new char[strLength];
+        for (int i = 0; i < strLength; i++) {
+            if (i >= startInclude && i < endExclude) {
+                chars[i] = ASTERISK;
+            } else {
+                chars[i] = str.charAt(i);
+            }
+        }
+        return new String(chars);
+    }
+
+    /**
+     * 截取字符串
+     *
+     * @param str   字符串
+     * @param start 开始
+     * @return 结果
+     */
+    public static String substring(final String str, int start) {
+        if (str == null) {
+            return NULLPTR;
+        }
+
+        if (start < 0) {
+            start = str.length() + start;
+        }
+
+        if (start < 0) {
+            start = 0;
+        }
+        if (start > str.length()) {
+            return NULLPTR;
+        }
+
+        return str.substring(start);
+    }
+
+    /**
+     * 截取字符串
+     *
+     * @param str   字符串
+     * @param start 开始
+     * @param end   结束
+     * @return 结果
+     */
+    public static String substring(final String str, int start, int end) {
+        if (str == null) {
+            return NULLPTR;
+        }
+
+        if (end < 0) {
+            end = str.length() + end;
+        }
+        if (start < 0) {
+            start = str.length() + start;
+        }
+
+        if (end > str.length()) {
+            end = str.length();
+        }
+
+        if (start > end) {
+            return NULLPTR;
+        }
+
+        if (start < 0) {
+            start = 0;
+        }
+        if (end < 0) {
+            end = 0;
+        }
+
+        return str.substring(start, end);
+    }
+
+    /**
+     * 判断是否为空，并且不是空白字符
+     *
+     * @param str 要判断的value
+     * @return 结果
+     */
+    public static boolean hasText(String str) {
+        return (str != null && !str.isEmpty() && containsText(str));
+    }
+
+    private static boolean containsText(CharSequence str) {
+        int strLen = str.length();
+        for (int i = 0; i < strLen; i++) {
+            if (!Character.isWhitespace(str.charAt(i))) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 格式化文本, {} 表示占位符
+     *
+     * @param template 文本模板，被替换的部分用 {} 表示
+     * @param params   参数值
+     * @return 格式化后的文本
+     */
+    public static String format(String template, Object... params) {
+        if (isEmpty(params) || isEmpty(template)) {
+            return template;
+        }
+        return StrFormatter.format(template, params);
+    }
+
+    /**
+     * 是否为http(s)://开头
+     *
+     * @param link 链接
+     * @return 结果
+     */
+    public static boolean isHttp(String link) {
+        return StringUtils.startsWithAny(link, Constants.HTTP, Constants.HTTPS);
+    }
+
+    /**
+     * 判断给定的collection列表中是否包含数组array 判断给定的数组array中是否包含给定的元素value
+     *
+     * @param collection 给定的集合
+     * @param array      给定的数组
+     * @return boolean 结果
+     */
+    public static boolean containsAny(Collection<String> collection, String... array) {
+        if (!isEmpty(collection) && !isEmpty(array)) {
+            for (String str : array) {
+                if (collection.contains(str)) {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 驼峰转下划线命名
+     */
+    public static String toUnderScoreCase(String str) {
+        if (str == null) {
+            return null;
+        }
+        StringBuilder sb = new StringBuilder();
+        // 前置字符是否大写
+        boolean preCharIsUpperCase;
+        // 当前字符是否大写
+        boolean curreCharIsUpperCase;
+        // 下一个字符是否大写
+        boolean nexteCharIsUpperCase = true;
+        for (int i = 0; i < str.length(); i++) {
+            char c = str.charAt(i);
+            if (i > 0) {
+                preCharIsUpperCase = Character.isUpperCase(str.charAt(i - 1));
+            } else {
+                preCharIsUpperCase = false;
+            }
+
+            curreCharIsUpperCase = Character.isUpperCase(c);
+
+            if (i < (str.length() - 1)) {
+                nexteCharIsUpperCase = Character.isUpperCase(str.charAt(i + 1));
+            }
+
+            if (preCharIsUpperCase && curreCharIsUpperCase && !nexteCharIsUpperCase) {
+                sb.append(SEPARATOR);
+            } else if ((i != 0 && !preCharIsUpperCase) && curreCharIsUpperCase) {
+                sb.append(SEPARATOR);
+            }
+            sb.append(Character.toLowerCase(c));
+        }
+
+        return sb.toString();
+    }
+
+    /**
+     * 是否包含字符串
+     *
+     * @param str  验证字符串
+     * @param strs 字符串组
+     * @return 包含返回true
+     */
+    public static boolean inStringIgnoreCase(String str, String... strs) {
+        if (str != null && strs != null) {
+            for (String s : strs) {
+                if (str.equalsIgnoreCase(trim(s))) {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 将下划线大写方式命名的字符串转换为驼峰式
+     *
+     * @param name 转换前的下划线大写方式命名的字符串
+     * @return 转换后的驼峰式命名的字符串
+     */
+    public static String convertToCamelCase(String name) {
+        StringBuilder result = new StringBuilder();
+        // 快速检查
+        if (name == null || name.isEmpty()) {
+            // 没必要转换
+            return "";
+        } else if (!name.contains("_")) {
+            // 不含下划线，仅将首字母大写
+            return name.substring(0, 1).toUpperCase() + name.substring(1);
+        }
+        // 用下划线将原始字符串分割
+        String[] camels = name.split("_");
+        for (String camel : camels) {
+            // 跳过原始字符串中开头、结尾的下换线或双重下划线
+            if (camel.isEmpty()) {
+                continue;
+            }
+            // 首字母大写
+            result.append(camel.substring(0, 1).toUpperCase());
+            result.append(camel.substring(1).toLowerCase());
+        }
+        return result.toString();
+    }
+
+    /**
+     * 驼峰式命名法
+     * 例如：user_name->userName
+     */
+    public static String toCamelCase(String s) {
+        if (s == null) {
+            return null;
+        }
+        if (s.indexOf(SEPARATOR) == -1) {
+            return s;
+        }
+        s = s.toLowerCase();
+        StringBuilder sb = new StringBuilder(s.length());
+        boolean upperCase = false;
+        for (int i = 0; i < s.length(); i++) {
+            char c = s.charAt(i);
+
+            if (c == SEPARATOR) {
+                upperCase = true;
+            } else if (upperCase) {
+                sb.append(Character.toUpperCase(c));
+                upperCase = false;
+            } else {
+                sb.append(c);
+            }
+        }
+        return sb.toString();
+    }
+
+    /**
+     * 查找指定字符串是否匹配指定字符串列表中的任意一个字符串
+     *
+     * @param str  指定字符串
+     * @param strs 需要检查的字符串数组
+     * @return 是否匹配
+     */
+    public static boolean matches(String str, List<String> strs) {
+        if (isEmpty(str) || isEmpty(strs)) {
+            return false;
+        }
+        for (String pattern : strs) {
+            if (isMatch(pattern, str)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 判断url是否与规则配置
+     *
+     * @param pattern 匹配规则
+     * @param url     需要匹配的url
+     * @return 是否匹配
+     */
+    public static boolean isMatch(String pattern, String url) {
+        AntPathMatcher matcher = new AntPathMatcher();
+        return matcher.match(pattern, url);
+    }
+
+    @SuppressWarnings("unchecked")
+    public static <T> T cast(Object obj) {
+        return (T) obj;
+    }
+
+    /**
+     * 数字左边补齐0
+     *
+     * @param num  数字对象
+     * @param size 字符串指定长度
+     * @return 返回数字的字符串格式，该字符串为指定长度。
+     */
+    public static String padl(final Number num, final int size) {
+        return padl(num.toString(), size, '0');
+    }
+
+    /**
+     * 字符串左补齐。如果原始字符串s长度大于size，则只保留最后size个字符。
+     *
+     * @param s    原始字符串
+     * @param size 字符串指定长度
+     * @param c    用于补齐的字符
+     * @return 返回指定长度的字符串，由原字符串左补齐或截取得到。
+     */
+    public static String padl(final String s, final int size, final char c) {
+        final StringBuilder sb = new StringBuilder(size);
+        if (s != null) {
+            final int len = s.length();
+            if (s.length() <= size) {
+                sb.append(String.valueOf(c).repeat(size - len));
+                sb.append(s);
+            } else {
+                return s.substring(len - size, len);
+            }
+        } else {
+            sb.append(String.valueOf(c).repeat(Math.max(0, size)));
+        }
+        return sb.toString();
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/SpringUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/SpringUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/SpringUtils.java
new file mode 100644
--- /dev/null	(date 1726288143391)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/SpringUtils.java	(date 1726288143391)
@@ -0,0 +1,113 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils;
+
+import jakarta.annotation.Nonnull;
+import org.springframework.aop.framework.AopContext;
+import org.springframework.beans.BeansException;
+import org.springframework.beans.factory.NoSuchBeanDefinitionException;
+import org.springframework.beans.factory.config.BeanFactoryPostProcessor;
+import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
+import org.springframework.stereotype.Component;
+
+/**
+ * spring工具类 方便在非spring管理环境中获取bean
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Component
+public final class SpringUtils implements BeanFactoryPostProcessor {
+
+    /**
+     * Spring应用上下文环境
+     */
+    private static ConfigurableListableBeanFactory beanFactory;
+
+    @Override
+    public void postProcessBeanFactory(@Nonnull ConfigurableListableBeanFactory beanFactory) throws BeansException {
+        SpringUtils.beanFactory = beanFactory;
+    }
+
+    /**
+     * 获取对象
+     *
+     * @param name 名称
+     * @return Object 一个以所给名字注册的bean的实例
+     * @throws org.springframework.beans.BeansException Bean 异常
+     */
+    @SuppressWarnings("unchecked")
+    public static <T> T getBean(String name) throws BeansException {
+        return (T) beanFactory.getBean(name);
+    }
+
+    /**
+     * 获取类型为requiredType的对象
+     *
+     * @param clz 类
+     * @return 对象
+     * @throws org.springframework.beans.BeansException Bean 异常
+     */
+    public static <T> T getBean(Class<T> clz) throws BeansException {
+        return beanFactory.getBean(clz);
+    }
+
+    /**
+     * 如果BeanFactory包含一个与所给名称匹配的bean定义，则返回true
+     *
+     * @param name 名称
+     * @return boolean
+     */
+    public static boolean containsBean(String name) {
+        return beanFactory.containsBean(name);
+    }
+
+    /**
+     * 判断以给定名字注册的bean定义是一个singleton还是一个prototype
+     *
+     * @param name 名称
+     * @return boolean 是否是singleton
+     * @throws org.springframework.beans.factory.NoSuchBeanDefinitionException 没有找到Bean定义异常
+     */
+    public static boolean isSingleton(String name) throws NoSuchBeanDefinitionException {
+        return beanFactory.isSingleton(name);
+    }
+
+    /**
+     * @param name 名称
+     * @return Class 注册对象的类型
+     * @throws org.springframework.beans.factory.NoSuchBeanDefinitionException 没有找到Bean定义异常
+     */
+    public static Class<?> getType(String name) throws NoSuchBeanDefinitionException {
+        return beanFactory.getType(name);
+    }
+
+    /**
+     * 如果给定的bean名字在bean定义中有别名，则返回这些别名
+     *
+     * @param name 名称
+     * @return String[] 别名
+     * @throws org.springframework.beans.factory.NoSuchBeanDefinitionException 没有找到Bean定义异常
+     */
+    public static String[] getAliases(String name) throws NoSuchBeanDefinitionException {
+        return beanFactory.getAliases(name);
+    }
+
+    /**
+     * 获取aop代理对象
+     *
+     * @param invoker 被代理对象
+     * @return 代理对象
+     */
+    @SuppressWarnings("unchecked")
+    public static <T> T getAopProxy(T invoker) {
+        return (T) AopContext.currentProxy();
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/PageUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/PageUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/PageUtils.java
new file mode 100644
--- /dev/null	(date 1726288143487)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/PageUtils.java	(date 1726288143487)
@@ -0,0 +1,65 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils;
+
+import com.baomidou.mybatisplus.core.metadata.IPage;
+import com.baomidou.mybatisplus.core.metadata.OrderItem;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import leyramu.qinian.asc.common.core.utils.sql.SqlUtil;
+import leyramu.qinian.asc.common.core.web.page.PageDomain;
+import leyramu.qinian.asc.common.core.web.page.TableSupport;
+import lombok.extern.slf4j.Slf4j;
+
+/**
+ * 分页工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Slf4j
+public class PageUtils extends Page<Object> {
+
+    /**
+     * 设置请求分页数据
+     */
+    public static IPage<?> startPage() {
+        PageDomain pageDomain = TableSupport.buildPageRequest();
+        Integer pageNum = pageDomain.getPageNum();
+        Integer pageSize = pageDomain.getPageSize();
+        String orderBy = SqlUtil.escapeOrderBySql(pageDomain.getOrderBy());
+        boolean reasonable = pageDomain.getReasonable();
+
+        Page<?> page = new Page<>(pageNum, pageSize, reasonable);
+        page.setSearchCount(true);
+
+        if (StringUtils.isNotBlank(orderBy)) {
+            String[] orderBys = orderBy.split(",");
+            for (String ob : orderBys) {
+                String[] orderInfo = ob.trim().split(" ");
+                if (orderInfo.length == 2) {
+                    String column = orderInfo[0];
+                    boolean isAsc = "asc".equalsIgnoreCase(orderInfo[1]);
+                    if (isAsc) {
+                        page.addOrder(OrderItem.asc(column));
+                    } else {
+                        page.addOrder(OrderItem.desc(column));
+                    }
+                }
+            }
+        }
+        return page;
+    }
+
+    /**
+     * 清理分页的线程变量
+     */
+    public static void clearPage() {
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/properties/JwtProperties.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/properties/JwtProperties.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/properties/JwtProperties.java
new file mode 100644
--- /dev/null	(date 1726310283647)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/properties/JwtProperties.java	(date 1726310283647)
@@ -0,0 +1,21 @@
+package leyramu.qinian.asc.common.base.properties;
+
+import lombok.Data;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.core.io.Resource;
+import org.springframework.stereotype.Component;
+
+import java.time.Duration;
+
+@Data
+@Component
+public class JwtProperties {
+    @Value("classpath:asc.jks")
+    private Resource location;
+
+    private String password = "asc123";
+
+    private String alias = "asc";
+
+    private Duration tokenTTL = Duration.ofMinutes(3000);
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/DateUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/DateUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/DateUtils.java
new file mode 100644
--- /dev/null	(date 1726288143360)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/DateUtils.java	(date 1726288143360)
@@ -0,0 +1,235 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils;
+
+import org.apache.commons.lang3.time.DateFormatUtils;
+
+import java.lang.management.ManagementFactory;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.time.*;
+import java.util.Date;
+
+/**
+ * 时间工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class DateUtils extends org.apache.commons.lang3.time.DateUtils {
+
+    /**
+     * 时间格式(yyyy-MM-dd)
+     */
+    public static String YYYY = "yyyy";
+
+    /**
+     * 时间格式(yyyy-MM-dd HH:mm:ss)
+     */
+    public static String YYYY_MM = "yyyy-MM";
+
+    /**
+     * 时间格式(yyyy-MM-dd HH:mm:ss)
+     */
+    public static String YYYY_MM_DD = "yyyy-MM-dd";
+
+    /**
+     * 时间格式(yyyyMMddHHmmss)
+     */
+    public static String YYYYMMDDHHMMSS = "yyyyMMddHHmmss";
+
+    /**
+     * 时间格式(yyyy-MM-dd HH:mm:ss)
+     */
+    public static String YYYY_MM_DD_HH_MM_SS = "yyyy-MM-dd HH:mm:ss";
+
+    /**
+     * 格式化日期
+     */
+    private static final String[] PARSE_PATTERNS = {
+            "yyyy-MM-dd", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm", "yyyy-MM",
+            "yyyy/MM/dd", "yyyy/MM/dd HH:mm:ss", "yyyy/MM/dd HH:mm", "yyyy/MM",
+            "yyyy.MM.dd", "yyyy.MM.dd HH:mm:ss", "yyyy.MM.dd HH:mm", "yyyy.MM"};
+
+    /**
+     * 获取当前Date型日期
+     *
+     * @return Date() 当前日期
+     */
+    public static Date getNowDate() {
+        return new Date();
+    }
+
+    /**
+     * 获取当前日期, 默认格式为yyyy-MM-dd
+     *
+     * @return String
+     */
+    public static String getDate() {
+        return dateTimeNow(YYYY_MM_DD);
+    }
+
+    /**
+     * 获取当前日期
+     *
+     * @return Date() 当前日期
+     */
+    public static String getTime() {
+        return dateTimeNow(YYYY_MM_DD_HH_MM_SS);
+    }
+
+    /**
+     * 获取当前日期, 默认格式为yyyyMMdd
+     *
+     * @return String
+     */
+    public static String dateTimeNow() {
+        return dateTimeNow(YYYYMMDDHHMMSS);
+    }
+
+    /**
+     * 获取当前日期
+     *
+     * @param format 时间格式
+     * @return Date() 当前日期
+     */
+    public static String dateTimeNow(final String format) {
+        return parseDateToStr(format, new Date());
+    }
+
+    /**
+     * 日期型字符串转化为日期
+     *
+     * @param date 时间字符串
+     * @return Date
+     */
+    public static String dateTime(final Date date) {
+        return parseDateToStr(YYYY_MM_DD, date);
+    }
+
+    /**
+     * 日期型字符串转化为日期
+     *
+     * @param format 时间格式
+     * @return Date
+     */
+    public static String parseDateToStr(final String format, final Date date) {
+        return new SimpleDateFormat(format).format(date);
+    }
+
+    /**
+     * 日期型字符串转化为日期
+     *
+     * @param format 时间格式
+     * @param ts     时间字符串
+     * @return Date
+     */
+    public static Date dateTime(final String format, final String ts) {
+        try {
+            return new SimpleDateFormat(format).parse(ts);
+        } catch (ParseException e) {
+            throw new RuntimeException(e);
+        }
+    }
+
+    /**
+     * 日期路径 即年/月/日 如2018/08/08
+     *
+     * @return String
+     */
+    public static String datePath() {
+        Date now = new Date();
+        return DateFormatUtils.format(now, "yyyy/MM/dd");
+    }
+
+    /**
+     * 日期路径 即年/月/日 如20180808
+     *
+     * @return String
+     */
+    public static String dateTime() {
+        Date now = new Date();
+        return DateFormatUtils.format(now, "yyyyMMdd");
+    }
+
+    /**
+     * 日期型字符串转化为日期 格式
+     *
+     * @param str 时间字符串
+     * @return Date
+     */
+    public static Date parseDate(Object str) {
+        if (str == null) {
+            return null;
+        }
+        try {
+            return parseDate(str.toString(), PARSE_PATTERNS);
+        } catch (ParseException e) {
+            return null;
+        }
+    }
+
+    /**
+     * 获取服务器启动时间
+     *
+     * @return Date
+     */
+    public static Date getServerStartDate() {
+        long time = ManagementFactory.getRuntimeMXBean().getStartTime();
+        return new Date(time);
+    }
+
+    /**
+     * 计算时间差
+     *
+     * @param endDate   最后时间
+     * @param startTime 开始时间
+     * @return 时间差（天/小时/分钟）
+     */
+    public static String timeDistance(Date endDate, Date startTime) {
+        long nd = 1000 * 24 * 60 * 60;
+        long nh = 1000 * 60 * 60;
+        long nm = 1000 * 60;
+        // long ns = 1000;
+        // 获得两个时间的毫秒时间差异
+        long diff = endDate.getTime() - startTime.getTime();
+        // 计算差多少天
+        long day = diff / nd;
+        // 计算差多少小时
+        long hour = diff % nd / nh;
+        // 计算差多少分钟
+        long min = diff % nd % nh / nm;
+        // 计算差多少秒//输出结果
+        // long sec = diff % nd % nh % nm / ns;
+        return day + "天" + hour + "小时" + min + "分钟";
+    }
+
+    /**
+     * 增加 LocalDateTime ==> Date
+     *
+     * @param temporalAccessor LocalDateTime
+     * @return Date
+     */
+    public static Date toDate(LocalDateTime temporalAccessor) {
+        ZonedDateTime zdt = temporalAccessor.atZone(ZoneId.systemDefault());
+        return Date.from(zdt.toInstant());
+    }
+
+    /**
+     * 增加 LocalDate ==> Date
+     *
+     * @param temporalAccessor LocalDate
+     * @return Date
+     */
+    public static Date toDate(LocalDate temporalAccessor) {
+        LocalDateTime localDateTime = LocalDateTime.of(temporalAccessor, LocalTime.of(0, 0, 0));
+        return toDate(localDateTime);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/JwtUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/JwtUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/JwtUtils.java
new file mode 100644
--- /dev/null	(date 1726288143535)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/JwtUtils.java	(date 1726288143535)
@@ -0,0 +1,128 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils;
+
+import io.jsonwebtoken.Claims;
+import io.jsonwebtoken.Jwts;
+import io.jsonwebtoken.security.Keys;
+import leyramu.qinian.asc.common.core.constant.SecurityConstants;
+import leyramu.qinian.asc.common.core.constant.TokenConstants;
+import leyramu.qinian.asc.common.core.text.Convert;
+
+import javax.crypto.SecretKey;
+import java.util.Map;
+
+/**
+ * Jwt 工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class JwtUtils {
+
+    /**
+     * 默认密钥
+     */
+    public static final SecretKey SECRET = Keys.hmacShaKeyFor(TokenConstants.SECRET.getBytes());
+
+    /**
+     * 从数据声明生成令牌
+     *
+     * @param claims 数据声明
+     * @return 令牌
+     */
+    public static String createToken(Map<String, Object> claims) {
+        return Jwts.builder().claims(claims).signWith(SECRET).compact();
+    }
+
+    /**
+     * 从令牌中获取数据声明
+     *
+     * @param token 令牌
+     * @return 数据声明
+     */
+    public static Claims parseToken(String token) {
+        return Jwts.parser().verifyWith(SECRET).build().parseSignedClaims(token).getPayload();
+    }
+
+    /**
+     * 根据令牌获取用户标识
+     *
+     * @param token 令牌
+     * @return 用户ID
+     */
+    public static String getUserKey(String token) {
+        Claims claims = parseToken(token);
+        return getValue(claims, SecurityConstants.USER_KEY);
+    }
+
+    /**
+     * 根据令牌获取用户标识
+     *
+     * @param claims 身份信息
+     * @return 用户ID
+     */
+    public static String getUserKey(Claims claims) {
+        return getValue(claims, SecurityConstants.USER_KEY);
+    }
+
+    /**
+     * 根据令牌获取用户ID
+     *
+     * @param token 令牌
+     * @return 用户ID
+     */
+    public static String getUserId(String token) {
+        Claims claims = parseToken(token);
+        return getValue(claims, SecurityConstants.DETAILS_USER_ID);
+    }
+
+    /**
+     * 根据身份信息获取用户ID
+     *
+     * @param claims 身份信息
+     * @return 用户ID
+     */
+    public static String getUserId(Claims claims) {
+        return getValue(claims, SecurityConstants.DETAILS_USER_ID);
+    }
+
+    /**
+     * 根据令牌获取用户名
+     *
+     * @param token 令牌
+     * @return 用户名
+     */
+    public static String getUserName(String token) {
+        Claims claims = parseToken(token);
+        return getValue(claims, SecurityConstants.DETAILS_USERNAME);
+    }
+
+    /**
+     * 根据身份信息获取用户名
+     *
+     * @param claims 身份信息
+     * @return 用户名
+     */
+    public static String getUserName(Claims claims) {
+        return getValue(claims, SecurityConstants.DETAILS_USERNAME);
+    }
+
+    /**
+     * 根据身份信息获取键值
+     *
+     * @param claims 身份信息
+     * @param key    键
+     * @return 值
+     */
+    public static String getValue(Claims claims, String key) {
+        return Convert.toStr(claims.get(key), "");
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/reflect/ReflectUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/reflect/ReflectUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/reflect/ReflectUtils.java
new file mode 100644
--- /dev/null	(date 1726288143484)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/reflect/ReflectUtils.java	(date 1726288143484)
@@ -0,0 +1,396 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.reflect;
+
+import java.lang.reflect.Field;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.lang.reflect.Modifier;
+import java.lang.reflect.ParameterizedType;
+import java.lang.reflect.Type;
+import java.util.Arrays;
+import java.util.Date;
+
+import org.apache.commons.lang3.StringUtils;
+import org.apache.commons.lang3.Validate;
+import org.apache.poi.ss.usermodel.DateUtil;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import leyramu.qinian.asc.common.core.text.Convert;
+import leyramu.qinian.asc.common.core.utils.DateUtils;
+
+/**
+ * 反射工具类. 提供调用getter/setter方法, 访问私有变量, 调用私有方法, 获取泛型类型Class, 被AOP过的真实类等工具函数
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@SuppressWarnings("rawtypes")
+public class ReflectUtils {
+
+    /**
+     * 获取泛型
+     */
+    private static final String SETTER_PREFIX = "set";
+
+    /**
+     * 获取泛型
+     */
+    private static final String GETTER_PREFIX = "get";
+
+    /**
+     * CGLIB方法名后缀
+     */
+    private static final String CGLIB_CLASS_SEPARATOR = "$$";
+
+    /**
+     * 日志对象
+     */
+    private static final Logger logger = LoggerFactory.getLogger(ReflectUtils.class);
+
+    /**
+     * 调用Getter方法
+     *
+     * @param obj 对象
+     * @param propertyName 属性名
+     * @return 调用结果
+     */
+    @SuppressWarnings("unchecked")
+    public static <E> E invokeGetter(Object obj, String propertyName) {
+        Object object = obj;
+        for (String name : StringUtils.split(propertyName, ".")) {
+            String getterMethodName = GETTER_PREFIX + StringUtils.capitalize(name);
+            object = invokeMethod(object, getterMethodName, new Class[]{}, new Object[]{});
+        }
+        return (E) object;
+    }
+
+    /**
+     * 调用Setter方法, 仅匹配方法名
+     *
+     * @param obj 对象
+     * @param value 值
+     */
+    public static <E> void invokeSetter(Object obj, String propertyName, E value) {
+        Object object = obj;
+        String[] names = StringUtils.split(propertyName, ".");
+        for (int i = 0; i < names.length; i++) {
+            if (i < names.length - 1) {
+                String getterMethodName = GETTER_PREFIX + StringUtils.capitalize(names[i]);
+                object = invokeMethod(object, getterMethodName, new Class[]{}, new Object[]{});
+            } else {
+                String setterMethodName = SETTER_PREFIX + StringUtils.capitalize(names[i]);
+                invokeMethodByName(object, setterMethodName, new Object[]{value});
+            }
+        }
+    }
+
+    /**
+     * 直接读取对象属性值, 无视private/protected修饰符, 不经过getter函数
+     *
+     * @param obj 对象
+     * @param fieldName 字段名
+     * @return 值
+     */
+    @SuppressWarnings("unchecked")
+    public static <E> E getFieldValue(final Object obj, final String fieldName) {
+        Field field = getAccessibleField(obj, fieldName);
+        if (field == null) {
+            getDebug("在 [" + obj.getClass() + "] 中，没有找到 [" + fieldName + "] 字段 ");
+            return null;
+        }
+        E result = null;
+        try {
+            result = (E) field.get(obj);
+        } catch (IllegalAccessException e) {
+            logger.error("对象属性值错误，不可能抛出的异常{}", e.getMessage());
+        }
+        return result;
+    }
+
+    private static void getDebug(String obj) {
+        logger.debug(obj);
+    }
+
+    /**
+     * 直接设置对象属性值, 无视private/protected修饰符, 不经过setter函数
+     *
+     * @param obj 对象
+     * @param fieldName 字段名
+     * @param value 值
+     */
+    public static <E> void setFieldValue(final Object obj, final String fieldName, final E value) {
+        Field field = getAccessibleField(obj, fieldName);
+        if (field == null) {
+            logger.debug("在 [{}] 中，没有找到 [{}] 字段 ", obj.getClass(), fieldName);
+            return;
+        }
+        try {
+            field.set(obj, value);
+        } catch (IllegalAccessException e) {
+            logger.error("不可能抛出的异常: {}", e.getMessage());
+        }
+    }
+
+    /**
+     * 直接调用对象方法, 无视private/protected修饰符
+     *
+     * @param obj 对象
+     * @param methodName 方法名
+     * @param parameterTypes 参数类型
+     * @param args 参数
+     * @return 调用结果
+     */
+    @SuppressWarnings("unchecked")
+    public static <E> E invokeMethod(final Object obj, final String methodName, final Class<?>[] parameterTypes, final Object[] args) {
+        if (obj == null || methodName == null) {
+            return null;
+        }
+        Method method = getAccessibleMethod(obj, methodName, parameterTypes);
+        if (method == null) {
+            logger.debug("对象方法错误，在 [{}] 中，没有找到 [{}] 方法 ", obj.getClass(), methodName);
+            return null;
+        }
+        try {
+            return (E) method.invoke(obj, args);
+        } catch (Exception e) {
+            String msg = "method: " + method + ", obj: " + obj + ", args: " + Arrays.toString(args);
+            throw convertReflectionExceptionToUnchecked(msg, e);
+        }
+    }
+
+    /**
+     * 直接调用对象方法, 无视private/protected修饰符
+     *
+     * @param obj 对象
+     * @param methodName 方法名
+     * @param args 参数
+     * @return 调用结果
+     */
+    @SuppressWarnings("unchecked")
+    public static <E> E invokeMethodByName(final Object obj, final String methodName, final Object[] args) {
+        Method method = getAccessibleMethodByName(obj, methodName, args.length);
+        if (method == null) {
+            // 如果为空不报错，直接返回空
+            logger.debug("在 [{}] 中，没有找到 [{}] 方法 ", obj.getClass(), methodName);
+            return null;
+        }
+        try {
+            // 类型转换（将参数数据类型转换为目标方法参数类型）
+            Class<?>[] cs = method.getParameterTypes();
+            for (int i = 0; i < cs.length; i++) {
+                if (args[i] != null && !args[i].getClass().equals(cs[i])) {
+                    if (cs[i] == String.class) {
+                        args[i] = Convert.toStr(args[i]);
+                        if (StringUtils.endsWith((String) args[i], ".0")) {
+                            args[i] = StringUtils.substringBefore((String) args[i], ".0");
+                        }
+                    } else if (cs[i] == Integer.class) {
+                        args[i] = Convert.toInt(args[i]);
+                    } else if (cs[i] == Long.class) {
+                        args[i] = Convert.toLong(args[i]);
+                    } else if (cs[i] == Double.class) {
+                        args[i] = Convert.toDouble(args[i]);
+                    } else if (cs[i] == Float.class) {
+                        args[i] = Convert.toFloat(args[i]);
+                    } else if (cs[i] == Date.class) {
+                        if (args[i] instanceof String) {
+                            args[i] = DateUtils.parseDate(args[i]);
+                        } else {
+                            args[i] = DateUtil.getJavaDate((Double) args[i]);
+                        }
+                    } else if (cs[i] == boolean.class || cs[i] == Boolean.class) {
+                        args[i] = Convert.toBool(args[i]);
+                    }
+                }
+            }
+            return (E) method.invoke(obj, args);
+        } catch (Exception e) {
+            String msg = "method: " + method + ", obj: " + obj + ", args: " + Arrays.toString(args);
+            throw convertReflectionExceptionToUnchecked(msg, e);
+        }
+    }
+
+    /**
+     * 循环向上转型, 获取对象的DeclaredField, 并强制设置为可访问
+     *
+     * @param obj 对象
+     * @param fieldName 字段名
+     * @return 字段
+     */
+    public static Field getAccessibleField(final Object obj, final String fieldName) {
+        // 为空不报错。直接返回 null
+        if (obj == null) {
+            return null;
+        }
+        Validate.notBlank(fieldName, "fieldName can't be blank");
+        for (Class<?> superClass = obj.getClass(); superClass != Object.class; superClass = superClass.getSuperclass()) {
+            try {
+                Field field = superClass.getDeclaredField(fieldName);
+                makeAccessible(field);
+                return field;
+            } catch (NoSuchFieldException ignored) {
+            }
+        }
+        return null;
+    }
+
+    /**
+     * 循环向上转型, 获取对象的DeclaredMethod,并强制设置为可访问
+     *
+     * @param obj 对象
+     * @param methodName 方法名
+     * @param parameterTypes 参数类型
+     * @return 方法
+     */
+    public static Method getAccessibleMethod(final Object obj, final String methodName, final Class<?>... parameterTypes) {
+        // 为空不报错。直接返回 null
+        if (obj == null) {
+            return null;
+        }
+        Validate.notBlank(methodName, "methodName can't be blank");
+        for (Class<?> searchType = obj.getClass(); searchType != Object.class; searchType = searchType.getSuperclass()) {
+            try {
+                Method method = searchType.getDeclaredMethod(methodName, parameterTypes);
+                makeAccessible(method);
+                return method;
+            } catch (NoSuchMethodException ignored) {
+            }
+        }
+        return null;
+    }
+
+    /**
+     * 循环向上转型, 获取对象的DeclaredMethod，并强制设置为可访问
+     *
+     * @param obj 对象
+     * @param methodName 方法名
+     * @param argsNum 参数个数
+     * @return 方法
+     */
+    public static Method getAccessibleMethodByName(final Object obj, final String methodName, int argsNum) {
+        // 为空不报错。直接返回 null
+        if (obj == null) {
+            return null;
+        }
+        Validate.notBlank(methodName, "methodName can't be blank");
+        for (Class<?> searchType = obj.getClass(); searchType != Object.class; searchType = searchType.getSuperclass()) {
+            Method[] methods = searchType.getDeclaredMethods();
+            for (Method method : methods) {
+                if (method.getName().equals(methodName) && method.getParameterTypes().length == argsNum) {
+                    makeAccessible(method);
+                    return method;
+                }
+            }
+        }
+        return null;
+    }
+
+    /**
+     * 改变private/protected的方法为public
+     *
+     * @param method 待改变的方法
+     */
+    public static void makeAccessible(Method method) {
+        if ((!Modifier.isPublic(method.getModifiers()) || !Modifier.isPublic(method.getDeclaringClass().getModifiers()))
+                && !method.isAccessible()) {
+            method.setAccessible(true);
+        }
+    }
+
+    /**
+     * 改变private/protected的成员变量为public
+     *
+     * @param field 待改变的成员变量
+     */
+    public static void makeAccessible(Field field) {
+        if ((!Modifier.isPublic(field.getModifiers()) || !Modifier.isPublic(field.getDeclaringClass().getModifiers())
+                || Modifier.isFinal(field.getModifiers())) && !field.isAccessible()) {
+            field.setAccessible(true);
+        }
+    }
+
+    /**
+     * 通过反射, 获得Class定义中声明的泛型参数的类型, 注意泛型必须定义在父类处
+     *
+     * @param clazz clazz 对象
+     * @return 泛型参数的类型
+     */
+    @SuppressWarnings("unchecked")
+    public static <T> Class<T> getClassGenericType(final Class clazz) {
+        return getClassGenericType(clazz, 0);
+    }
+
+    /**
+     * 通过反射, 获得Class定义中声明的父类的泛型参数的类型
+     *
+     * @param clazz clazz 对象
+     * @param index 泛型参数所在索引
+     * @return 泛型参数的类型
+     */
+    public static Class getClassGenericType(final Class clazz, final int index) {
+        Type genType = clazz.getGenericSuperclass();
+
+        if (!(genType instanceof ParameterizedType)) {
+            logger.debug("{}'s superclass not ParameterizedType", clazz.getSimpleName());
+            return Object.class;
+        }
+
+        Type[] params = ((ParameterizedType) genType).getActualTypeArguments();
+
+        if (index >= params.length || index < 0) {
+            logger.debug("Index: {}, Size of {}'s Parameterized Type: {}", index, clazz.getSimpleName(), params.length);
+            return Object.class;
+        }
+        if (!(params[index] instanceof Class)) {
+            logger.debug("{} not set the actual class on superclass generic parameter", clazz.getSimpleName());
+            return Object.class;
+        }
+
+        return (Class) params[index];
+    }
+
+    /**
+     * 获取泛型类型
+     *
+     * @param instance 实例
+     * @return 泛型类型
+     */
+    public static Class<?> getUserClass(Object instance) {
+        if (instance == null) {
+            throw new RuntimeException("Instance must not be null");
+        }
+        Class clazz = instance.getClass();
+        if (clazz.getName().contains(CGLIB_CLASS_SEPARATOR)) {
+            Class<?> superClass = clazz.getSuperclass();
+            if (superClass != null && !Object.class.equals(superClass)) {
+                return superClass;
+            }
+        }
+        return clazz;
+    }
+
+    /**
+     * 将反射时的checked exception转换为unchecked exception
+     *
+     * @param msg 错误信息
+     * @param e 异常
+     * @return 运行时异常
+     */
+    public static RuntimeException convertReflectionExceptionToUnchecked(String msg, Exception e) {
+        if (e instanceof IllegalAccessException || e instanceof IllegalArgumentException
+                || e instanceof NoSuchMethodException) {
+            return new IllegalArgumentException(msg, e);
+        } else if (e instanceof InvocationTargetException) {
+            return new RuntimeException(msg, ((InvocationTargetException) e).getTargetException());
+        }
+        return new RuntimeException(msg, e);
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteLocationService.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteLocationService.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteLocationService.java
rename from asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteLocationService.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteLocationService.java
--- a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteLocationService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteLocationService.java	(date 1726288143315)
@@ -1,6 +1,6 @@
-package org.qinian.model;
+package org.qinian.domain.model;
 
-import org.qinian.domain.Result;
+import domain.Result;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
Index: asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteWeatherService.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteWeatherService.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteWeatherService.java
rename from asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteWeatherService.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteWeatherService.java
--- a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteWeatherService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteWeatherService.java	(date 1726288143413)
@@ -1,6 +1,6 @@
-package org.qinian.model;
+package org.qinian.domain.model;
 
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.weather.WeatherAddDto;
 import org.qinian.domain.dto.weather.WeatherLoopAddDto;
 import org.springframework.cloud.openfeign.FeignClient;
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/IdUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/IdUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/IdUtils.java
new file mode 100644
--- /dev/null	(date 1726288143532)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/uuid/IdUtils.java	(date 1726288143532)
@@ -0,0 +1,55 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.uuid;
+
+/**
+ * ID生成器工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class IdUtils {
+
+    /**
+     * 获取随机UUID
+     *
+     * @return 随机UUID
+     */
+    public static String randomUuid() {
+        return UUID.randomUUID().toString();
+    }
+
+    /**
+     * 简化的UUID，去掉了横线
+     *
+     * @return 简化的UUID，去掉了横线
+     */
+    public static String simpleUuid() {
+        return UUID.randomUUID().toString(true);
+    }
+
+    /**
+     * 获取随机UUID，使用性能更好的ThreadLocalRandom生成UUID
+     *
+     * @return 随机UUID
+     */
+    public static String fastUuid() {
+        return UUID.fastUUID().toString();
+    }
+
+    /**
+     * 简化的UUID，去掉了横线，使用性能更好的ThreadLocalRandom生成UUID
+     *
+     * @return 简化的UUID，去掉了横线
+     */
+    public static String fastSimpleUuid() {
+        return UUID.fastUUID().toString(true);
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteEmailService.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteEmailService.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteEmailService.java
rename from asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteEmailService.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteEmailService.java
--- a/asc-java/asc-api/asc-api-system/src/main/java/org/qinian/model/RemoteEmailService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/model/RemoteEmailService.java	(date 1726288143609)
@@ -1,6 +1,6 @@
-package org.qinian.model;
+package org.qinian.domain.model;
 
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.email.SendEmailWithAttachmentDto;
 import org.qinian.domain.dto.email.SendSimpleEmailDto;
 import org.qinian.domain.dto.email.SendVerificationCodeDto;
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/sql/SqlUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/sql/SqlUtil.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/sql/SqlUtil.java
new file mode 100644
--- /dev/null	(date 1726288143513)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/sql/SqlUtil.java	(date 1726288143513)
@@ -0,0 +1,80 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.sql;
+
+import leyramu.qinian.asc.common.core.exception.UtilException;
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+
+/**
+ * sql操作工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class SqlUtil {
+
+    /**
+     * 定义常用的 sql关键字
+     */
+    public static String SQL_REGEX = "and |extractvalue|updatexml|exec |insert |select |delete |update |drop |count |chr |mid |master |truncate |char |declare |or |+|user()";
+
+    /**
+     * 仅支持字母、数字、下划线、空格、逗号、小数点（支持多个字段排序）
+     */
+    public static String SQL_PATTERN = "[a-zA-Z0-9_ ,.]+";
+
+    /**
+     * 限制orderBy最大长度
+     */
+    private static final int ORDER_BY_MAX_LENGTH = 500;
+
+    /**
+     * 检查字符，防止注入绕过
+     *
+     * @param value 需要被检查的字符串
+     * @return 检查结果，若不符合规范，则返回false，符合规范返回true
+     */
+    public static String escapeOrderBySql(String value) {
+        if (StringUtils.isNotEmpty(value) && !isValidOrderBySql(value)) {
+            throw new UtilException("参数不符合规范，不能进行查询");
+        }
+        if (StringUtils.length(value) > ORDER_BY_MAX_LENGTH) {
+            throw new UtilException("参数已超过最大限制，不能进行查询");
+        }
+        return value;
+    }
+
+    /**
+     * 验证 order by 语法是否符合规范
+     *
+     * @param value 需要被检查的字符串
+     * @return 检查结果，若不符合规范，则返回false，符合规范返回true
+     */
+    public static boolean isValidOrderBySql(String value) {
+        return value.matches(SQL_PATTERN);
+    }
+
+    /**
+     * SQL关键字检查
+     *
+     * @param value 需要被检查的字符串
+     */
+    public static void filterKeyword(String value) {
+        if (StringUtils.isEmpty(value)) {
+            return;
+        }
+        String[] sqlKeywords = StringUtils.split(SQL_REGEX, "\\|");
+        for (String sqlKeyword : sqlKeywords) {
+            if (StringUtils.indexOfIgnoreCase(value, sqlKeyword) > -1) {
+                throw new UtilException("参数存在SQL注入风险");
+            }
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/JwtTool.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/JwtTool.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/JwtTool.java
new file mode 100644
--- /dev/null	(date 1726310283709)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/JwtTool.java	(date 1726310283709)
@@ -0,0 +1,87 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import cn.hutool.core.exceptions.ValidateException;
+import cn.hutool.jwt.JWT;
+import cn.hutool.jwt.JWTValidator;
+import cn.hutool.jwt.signers.JWTSigner;
+import cn.hutool.jwt.signers.JWTSignerUtil;
+import leyramu.qinian.asc.common.core.exception.UnauthorizedException;
+import org.springframework.stereotype.Component;
+
+import java.security.KeyPair;
+import java.time.Duration;
+import java.util.Date;
+
+/**
+ * jwt不会保存到redis
+ */
+@Component
+public class JwtTool {
+    private final JWTSigner jwtSigner;
+
+    public JwtTool(KeyPair keyPair) {
+        this.jwtSigner = JWTSignerUtil.createSigner("rs256", keyPair);
+    }
+
+    /**
+     * 创建 access-token
+     */
+    public String createToken(Long userId, Duration ttl) {
+        // 1.生成jws
+        return JWT.create()
+                .setPayload("user", userId)
+                .setExpiresAt(new Date(System.currentTimeMillis() + ttl.toMillis()))
+                .setSigner(jwtSigner)
+                .sign();
+    }
+
+    /**
+     * 解析token
+     *
+     * @param token token
+     * @return 解析刷新token得到的用户信息
+     */
+    public Long parseToken(String token) {
+        // 1.校验token是否为空
+        if (token == null) {
+            System.out.println("1未登录");
+            throw new UnauthorizedException("未登录");
+        }
+        // 2.校验并解析jwt
+        JWT jwt;
+        try {
+            jwt = JWT.of(token).setSigner(jwtSigner);
+        } catch (Exception e) {
+            System.out.println("2.1无效的token");
+            throw new UnauthorizedException("无效的token", e);
+        }
+        // 2.校验jwt是否有效
+        if (!jwt.verify()) {
+            // 验证失败
+            System.out.println("2.2无效的token");
+            throw new UnauthorizedException("无效的token");
+        }
+        // 3.校验是否过期
+        try {
+            JWTValidator.of(jwt).validateDate();
+        } catch (ValidateException e) {
+            System.out.println("3.token已经过期");
+            throw new UnauthorizedException("token已经过期");
+        }
+        // 4.数据格式校验
+        Object userPayload = jwt.getPayload("user");
+        if (userPayload == null) {
+            // 数据为空
+            System.out.println("4.无效的token");
+            throw new UnauthorizedException("无效的token");
+        }
+
+        // 5.数据解析
+        try {
+            return Long.valueOf(userPayload.toString());
+        } catch (RuntimeException e) {
+            // 数据格式有误
+            throw new UnauthorizedException("无效的token");
+        }
+    }
+}
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/AscAlgorithmServiceApplication.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/AscAlgorithmServiceApplication.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/AscAlgorithmServiceApplication.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/AscAlgorithmServiceApplication.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/AscAlgorithmServiceApplication.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/AscAlgorithmServiceApplication.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/AscAlgorithmServiceApplication.java	(date 1726316993329)
@@ -1,4 +1,4 @@
-package org.qinian;
+package org.leyramu;
 
 import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.boot.SpringApplication;
@@ -9,7 +9,7 @@
 @SpringBootApplication
 @EnableFeignClients
 @EnableDiscoveryClient
-@MapperScan(basePackages = {"org.qinian.dao"})
+@MapperScan(basePackages = {"org.qinian.mapper"})
 public class AscAlgorithmServiceApplication {
     public static void main(String[] args) {
         SpringApplication.run(AscAlgorithmServiceApplication.class, args);
Index: asc-java/asc-common/asc-common-core/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-core/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1726288143477)
+++ b/asc-java/asc-common/asc-common-core/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1726288143477)
@@ -0,0 +1,9 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.qinian.asc.common.core.utils.SpringUtils
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/Convert.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/Convert.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/Convert.java
new file mode 100644
--- /dev/null	(date 1726310283716)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/Convert.java	(date 1726310283716)
@@ -0,0 +1,8 @@
+package leyramu.qinian.asc.common.base.utils;
+
+/**
+ * 对原对象进行计算，设置到目标对象中
+ **/
+public interface Convert<R, T> {
+    void convert(R origin, T target);
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/AESUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/AESUtil.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/AESUtil.java
new file mode 100644
--- /dev/null	(date 1726310283673)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/AESUtil.java	(date 1726310283673)
@@ -0,0 +1,42 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import org.bouncycastle.jce.provider.BouncyCastleProvider;
+
+import javax.crypto.Cipher;
+import javax.crypto.spec.SecretKeySpec;
+import java.nio.charset.StandardCharsets;
+import java.security.Security;
+
+
+public class AESUtil {
+    private static String appsecret = MD5.md5("mashuo@dzu@12");
+
+    /****
+     * AES加密/解密
+     * @param buffer:密文/明文
+     * @param mode:加密/解密模式  1 加密  2 解密
+     * @return
+     */
+    public static byte[] encryptAndDecrypt(byte[] buffer, Integer mode) throws Exception {
+        //1:加载加密解密算法处理对象（包含算法、秘钥管理）
+        Security.addProvider(new BouncyCastleProvider());
+
+        //2:根据不同算法创建秘钥   1）秘钥的字节数组   2）加密算法
+        SecretKeySpec secretKeySpec = new SecretKeySpec(appsecret.getBytes(StandardCharsets.UTF_8), "AES");
+
+        //3:设置加密模式（无论是加密还是解析，模式一致）
+        // 1): AES/ECB/KPS7Padding 设置算法
+        // 2):指定算法库对象
+        Cipher cipher = Cipher.getInstance("AES/ECB/PKCS7Padding", "BC");
+        //4:初始化加密配置
+        cipher.init(mode, secretKeySpec);
+        //5:执行加密/解密
+        return cipher.doFinal(buffer);
+    }
+
+    public static void main(String[] args) throws Exception {
+        String password = "123456";
+        String encode = Base64Util.encode(AESUtil.encryptAndDecrypt(password.getBytes(StandardCharsets.UTF_8), 1));
+        System.out.println(encode);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/poi/ExcelHandlerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/poi/ExcelHandlerAdapter.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/poi/ExcelHandlerAdapter.java
new file mode 100644
--- /dev/null	(date 1726288143384)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/poi/ExcelHandlerAdapter.java	(date 1726288143384)
@@ -0,0 +1,33 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.poi;
+
+import org.apache.poi.ss.usermodel.Cell;
+import org.apache.poi.ss.usermodel.Workbook;
+
+/**
+ * Excel数据格式处理适配器
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public interface ExcelHandlerAdapter {
+
+    /**
+     * 格式化
+     *
+     * @param value 单元格数据值
+     * @param args  excel注解args参数组
+     * @param cell  单元格对象
+     * @param wb    工作簿对象
+     * @return 处理后的值
+     */
+    Object format(Object value, String[] args, Cell cell, Workbook wb);
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/poi/ExcelUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/poi/ExcelUtil.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/poi/ExcelUtil.java
new file mode 100644
--- /dev/null	(date 1726288143350)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/poi/ExcelUtil.java	(date 1726288143350)
@@ -0,0 +1,1268 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.poi;
+
+import jakarta.servlet.http.HttpServletResponse;
+import leyramu.qinian.asc.common.core.annotation.Excel;
+import leyramu.qinian.asc.common.core.annotation.Excel.ColumnType;
+import leyramu.qinian.asc.common.core.annotation.Excel.Type;
+import leyramu.qinian.asc.common.core.annotation.Excels;
+import leyramu.qinian.asc.common.core.exception.UtilException;
+import leyramu.qinian.asc.common.core.text.Convert;
+import leyramu.qinian.asc.common.core.utils.DateUtils;
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+import leyramu.qinian.asc.common.core.utils.file.FileTypeUtils;
+import leyramu.qinian.asc.common.core.utils.file.ImageUtils;
+import leyramu.qinian.asc.common.core.utils.reflect.ReflectUtils;
+import org.apache.commons.lang3.ArrayUtils;
+import org.apache.commons.lang3.RegExUtils;
+import org.apache.commons.lang3.reflect.FieldUtils;
+import org.apache.poi.ss.usermodel.*;
+import org.apache.poi.ss.util.CellRangeAddress;
+import org.apache.poi.ss.util.CellRangeAddressList;
+import org.apache.poi.util.IOUtils;
+import org.apache.poi.xssf.streaming.SXSSFWorkbook;
+import org.apache.poi.xssf.usermodel.XSSFClientAnchor;
+import org.apache.poi.xssf.usermodel.XSSFDataValidation;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.lang.reflect.Field;
+import java.lang.reflect.Method;
+import java.lang.reflect.ParameterizedType;
+import java.math.BigDecimal;
+import java.math.RoundingMode;
+import java.text.DecimalFormat;
+import java.time.LocalDate;
+import java.time.LocalDateTime;
+import java.util.*;
+import java.util.stream.Collectors;
+
+/**
+ * Excel相关处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class ExcelUtil<T> {
+
+    /**
+     * 缓存数据
+     */
+    private static final Logger log = LoggerFactory.getLogger(ExcelUtil.class);
+
+    /**
+     * 导出excel的列头样式
+     */
+    public static final String FORMULA_REGEX_STR = "=|-|\\+|@";
+
+    /**
+     * 导出excel的列头样式
+     */
+    public static final String[] FORMULA_STR = {"=", "-", "+", "@"};
+
+    /**
+     * Excel sheet最大行数，默认65536
+     */
+    public static final int SHEET_SIZE = 65536;
+
+    /**
+     * 工作表名称
+     */
+    private String sheetName;
+
+    /**
+     * 导出类型（EXPORT:导出数据；IMPORT：导入模板）
+     */
+    private Type type;
+
+    /**
+     * 工作薄对象
+     */
+    private Workbook wb;
+
+    /**
+     * 工作表对象
+     */
+    private Sheet sheet;
+
+    /**
+     * 样式列表
+     */
+    private Map<String, CellStyle> styles;
+
+    /**
+     * 导入导出数据列表
+     */
+    private List<T> list;
+
+    /**
+     * 注解列表
+     */
+    private List<Object[]> fields;
+
+    /**
+     * 当前行号
+     */
+    private int rowNum;
+
+    /**
+     * 标题
+     */
+    private String title;
+
+    /**
+     * 最大高度
+     */
+    private short maxHeight;
+
+    /**
+     * 合并后最后行数
+     */
+    private int subMergedLastRowNum = 0;
+
+    /**
+     * 合并后开始行数
+     */
+    private int subMergedFirstRowNum = 1;
+
+    /**
+     * 对象的子列表方法
+     */
+    private Method subMethod;
+
+    /**
+     * 对象的子列表属性
+     */
+    private List<Field> subFields;
+
+    /**
+     * 统计列表
+     */
+    private final Map<Integer, Double> statistics = new HashMap<>();
+
+    /**
+     * 数字格式
+     */
+    private static final DecimalFormat DOUBLE_FORMAT = new DecimalFormat("######0.00");
+
+    /**
+     * 实体对象
+     */
+    public Class<T> clazz;
+
+    /**
+     * 需要排除列属性
+     */
+    public String[] excludeFields;
+
+    public ExcelUtil(Class<T> clazz) {
+        this.clazz = clazz;
+    }
+
+    /**
+     * 隐藏Excel中列属性
+     *
+     * @param fields 列属性名 示例[单个"name"/多个"id","name"]
+     */
+    public void hideColumn(String... fields) {
+        this.excludeFields = fields;
+    }
+
+    public void init(List<T> list, String sheetName, String title, Type type) {
+        if (list == null) {
+            list = new ArrayList<>();
+        }
+        this.list = list;
+        this.sheetName = sheetName;
+        this.type = type;
+        this.title = title;
+        createExcelField();
+        createWorkbook();
+        createTitle();
+        createSubHead();
+    }
+
+    /**
+     * 创建excel第一行标题
+     */
+    public void createTitle() {
+        if (StringUtils.isNotEmpty(title)) {
+            subMergedFirstRowNum++;
+            subMergedLastRowNum++;
+            int titleLastCol = this.fields.size() - 1;
+            if (isSubList()) {
+                titleLastCol = titleLastCol + subFields.size() - 1;
+            }
+            Row titleRow = sheet.createRow(rowNum == 0 ? rowNum++ : 0);
+            titleRow.setHeightInPoints(30);
+            Cell titleCell = titleRow.createCell(0);
+            titleCell.setCellStyle(styles.get("title"));
+            titleCell.setCellValue(title);
+            sheet.addMergedRegion(new CellRangeAddress(titleRow.getRowNum(), titleRow.getRowNum(), titleRow.getRowNum(), titleLastCol));
+        }
+    }
+
+    /**
+     * 创建对象的子列表名称
+     */
+    public void createSubHead() {
+        if (isSubList()) {
+            subMergedFirstRowNum++;
+            subMergedLastRowNum++;
+            Row subRow = sheet.createRow(rowNum);
+            int excelNum = 0;
+            for (Object[] objects : fields) {
+                Excel attr = (Excel) objects[1];
+                Cell headCell1 = subRow.createCell(excelNum);
+                headCell1.setCellValue(attr.name());
+                headCell1.setCellStyle(styles.get(StringUtils.format("header_{}_{}", attr.headerColor(), attr.headerBackgroundColor())));
+                excelNum++;
+            }
+            int headFirstRow = excelNum - 1;
+            int headLastRow = headFirstRow + subFields.size() - 1;
+            if (headLastRow > headFirstRow) {
+                sheet.addMergedRegion(new CellRangeAddress(rowNum, rowNum, headFirstRow, headLastRow));
+            }
+            rowNum++;
+        }
+    }
+
+    /**
+     * 对excel表单默认第一个索引名转换成list
+     *
+     * @param is 输入流
+     * @return 转换后集合
+     */
+    public List<T> importExcel(InputStream is) {
+        List<T> list;
+        try {
+            list = importExcel(is, 0);
+        } catch (Exception e) {
+            log.error("导入Excel异常{}", e.getMessage());
+            throw new UtilException(e.getMessage());
+        } finally {
+            IOUtils.closeQuietly(is);
+        }
+        return list;
+    }
+
+    /**
+     * 对excel表单默认第一个索引名转换成list
+     *
+     * @param is       输入流
+     * @param titleNum 标题占用行数
+     * @return 转换后集合
+     */
+    public List<T> importExcel(InputStream is, int titleNum) throws Exception {
+        return importExcel(StringUtils.EMPTY, is, titleNum);
+    }
+
+    /**
+     * 对excel表单指定表格索引名转换成list
+     *
+     * @param sheetName 表格索引名
+     * @param titleNum  标题占用行数
+     * @param is        输入流
+     * @return 转换后集合
+     */
+    public List<T> importExcel(String sheetName, InputStream is, int titleNum) throws Exception {
+        this.type = Type.IMPORT;
+        this.wb = WorkbookFactory.create(is);
+        List<T> list = new ArrayList<>();
+        // 如果指定sheet名,则取指定sheet中的内容 否则默认指向第1个sheet
+        Sheet sheet = StringUtils.isNotEmpty(sheetName) ? wb.getSheet(sheetName) : wb.getSheetAt(0);
+        if (sheet == null) {
+            throw new IOException("文件sheet不存在");
+        }
+
+        // 获取最后一个非空行的行下标，比如总行数为n，则返回的为n-1
+        int rows = sheet.getLastRowNum();
+        if (rows > 0) {
+            // 定义一个map用于存放excel列的序号和field.
+            Map<String, Integer> cellMap = new HashMap<>();
+            // 获取表头
+            Row heard = sheet.getRow(titleNum);
+            for (int i = 0; i < heard.getPhysicalNumberOfCells(); i++) {
+                Cell cell = heard.getCell(i);
+                if (StringUtils.isNotNull(cell)) {
+                    String value = this.getCellValue(heard, i).toString();
+                    cellMap.put(value, i);
+                } else {
+                    cellMap.put(null, i);
+                }
+            }
+            // 有数据时才处理 得到类的所有field.
+            List<Object[]> fields = this.getFields();
+            Map<Integer, Object[]> fieldsMap = new HashMap<>();
+            for (Object[] objects : fields) {
+                Excel attr = (Excel) objects[1];
+                Integer column = cellMap.get(attr.name());
+                if (column != null) {
+                    fieldsMap.put(column, objects);
+                }
+            }
+            for (int i = titleNum + 1; i <= rows; i++) {
+                // 从第2行开始取数据,默认第一行是表头.
+                Row row = sheet.getRow(i);
+                // 判断当前行是否是空行
+                if (isRowEmpty(row)) {
+                    continue;
+                }
+                T entity = null;
+                for (Map.Entry<Integer, Object[]> entry : fieldsMap.entrySet()) {
+                    Object val = this.getCellValue(row, entry.getKey());
+
+                    // 如果不存在实例则新建.
+                    entity = (entity == null ? clazz.getDeclaredConstructor().newInstance() : entity);
+                    // 从map中得到对应列的field.
+                    Field field = (Field) entry.getValue()[0];
+                    Excel attr = (Excel) entry.getValue()[1];
+                    // 取得类型,并根据对象类型设置值.
+                    Class<?> fieldType = field.getType();
+                    if (String.class == fieldType) {
+                        String s = Convert.toStr(val);
+                        if (StringUtils.endsWith(s, ".0")) {
+                            val = StringUtils.substringBefore(s, ".0");
+                        } else {
+                            String dateFormat = field.getAnnotation(Excel.class).dateFormat();
+                            if (StringUtils.isNotEmpty(dateFormat)) {
+                                val = parseDateToStr(dateFormat, val);
+                            } else {
+                                val = Convert.toStr(val);
+                            }
+                        }
+                    } else if ((Integer.TYPE == fieldType || Integer.class == fieldType) && StringUtils.isNumeric(Convert.toStr(val))) {
+                        val = Convert.toInt(val);
+                    } else if ((Long.TYPE == fieldType || Long.class == fieldType) && StringUtils.isNumeric(Convert.toStr(val))) {
+                        val = Convert.toLong(val);
+                    } else if (Double.TYPE == fieldType || Double.class == fieldType) {
+                        val = Convert.toDouble(val);
+                    } else if (Float.TYPE == fieldType || Float.class == fieldType) {
+                        val = Convert.toFloat(val);
+                    } else if (BigDecimal.class == fieldType) {
+                        val = Convert.toBigDecimal(val);
+                    } else if (Date.class == fieldType) {
+                        if (val instanceof String) {
+                            val = DateUtils.parseDate(val);
+                        } else if (val instanceof Double) {
+                            val = DateUtil.getJavaDate((Double) val);
+                        }
+                    } else if (Boolean.TYPE == fieldType || Boolean.class == fieldType) {
+                        val = Convert.toBool(val, false);
+                    }
+                    String propertyName = field.getName();
+                    if (StringUtils.isNotEmpty(attr.targetAttr())) {
+                        propertyName = field.getName() + "." + attr.targetAttr();
+                    }
+                    if (StringUtils.isNotEmpty(attr.readConverterExp())) {
+                        val = reverseByExp(Convert.toStr(val), attr.readConverterExp(), attr.separator());
+                    } else if (!attr.handler().equals(ExcelHandlerAdapter.class)) {
+                        val = dataFormatHandlerAdapter(val, attr, null);
+                    }
+                    ReflectUtils.invokeSetter(entity, propertyName, val);
+                }
+                list.add(entity);
+            }
+        }
+        return list;
+    }
+
+    /**
+     * 对list数据源将其里面的数据导入到excel表单
+     *
+     * @param response  返回数据
+     * @param list      导出数据集合
+     * @param sheetName 工作表的名称
+     */
+    public void exportExcel(HttpServletResponse response, List<T> list, String sheetName) {
+        exportExcel(response, list, sheetName, StringUtils.EMPTY);
+    }
+
+    /**
+     * 对list数据源将其里面的数据导入到excel表单
+     *
+     * @param response  返回数据
+     * @param list      导出数据集合
+     * @param sheetName 工作表的名称
+     * @param title     标题
+     */
+    public void exportExcel(HttpServletResponse response, List<T> list, String sheetName, String title) {
+        response.setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
+        response.setCharacterEncoding("utf-8");
+        this.init(list, sheetName, title, Type.EXPORT);
+        exportExcel(response);
+    }
+
+    /**
+     * 对list数据源将其里面的数据导入到excel表单
+     *
+     * @param sheetName 工作表的名称
+     */
+    public void importTemplateExcel(HttpServletResponse response, String sheetName) {
+        importTemplateExcel(response, sheetName, StringUtils.EMPTY);
+    }
+
+    /**
+     * 对list数据源将其里面的数据导入到excel表单
+     *
+     * @param sheetName 工作表的名称
+     * @param title     标题
+     */
+    public void importTemplateExcel(HttpServletResponse response, String sheetName, String title) {
+        response.setContentType("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
+        response.setCharacterEncoding("utf-8");
+        this.init(null, sheetName, title, Type.IMPORT);
+        exportExcel(response);
+    }
+
+    /**
+     * 对list数据源将其里面的数据导入到excel表单
+     */
+    public void exportExcel(HttpServletResponse response) {
+        try {
+            writeSheet();
+            wb.write(response.getOutputStream());
+        } catch (Exception e) {
+            log.error("导出Excel异常{}", e.getMessage());
+        } finally {
+            IOUtils.closeQuietly(wb);
+        }
+    }
+
+    /**
+     * 创建写入数据到Sheet
+     */
+    public void writeSheet() {
+        // 取出一共有多少个sheet.
+        int sheetNo = Math.max(1, (int) Math.ceil(list.size() * 1.0 / SHEET_SIZE));
+        for (int index = 0; index < sheetNo; index++) {
+            createSheet(sheetNo, index);
+
+            // 产生一行
+            Row row = sheet.createRow(rowNum);
+            int column = 0;
+            // 写入各个字段的列头名称
+            for (Object[] os : fields) {
+                Field field = (Field) os[0];
+                Excel excel = (Excel) os[1];
+                if (Collection.class.isAssignableFrom(field.getType())) {
+                    for (Field subField : subFields) {
+                        Excel subExcel = subField.getAnnotation(Excel.class);
+                        this.createHeadCell(subExcel, row, column++);
+                    }
+                } else {
+                    this.createHeadCell(excel, row, column++);
+                }
+            }
+            if (Type.EXPORT.equals(type)) {
+                fillExcelData(index);
+                addStatisticsRow();
+            }
+        }
+    }
+
+    /**
+     * 填充excel数据
+     *
+     * @param index 序号
+     */
+    @SuppressWarnings("unchecked")
+    public void fillExcelData(int index) {
+        int startNo = index * SHEET_SIZE;
+        int endNo = Math.min(startNo + SHEET_SIZE, list.size());
+        int rowNo = (1 + rowNum) - startNo;
+        for (int i = startNo; i < endNo; i++) {
+            rowNo = isSubList() ? (i > 1 ? rowNo + 1 : rowNo + i) : i + 1 + rowNum - startNo;
+            Row row = sheet.createRow(rowNo);
+            // 得到导出对象.
+            T vo = list.get(i);
+            Collection<?> subList = null;
+            if (isSubList()) {
+                if (isSubListValue(vo)) {
+                    subList = getListCellValue(vo);
+                    subMergedLastRowNum = subMergedLastRowNum + subList.size();
+                } else {
+                    subMergedFirstRowNum++;
+                    subMergedLastRowNum++;
+                }
+            }
+            int column = 0;
+            for (Object[] os : fields) {
+                Field field = (Field) os[0];
+                Excel excel = (Excel) os[1];
+                if (Collection.class.isAssignableFrom(field.getType()) && StringUtils.isNotNull(subList)) {
+                    boolean subFirst = false;
+                    for (Object obj : subList) {
+                        if (subFirst) {
+                            rowNo++;
+                            row = sheet.createRow(rowNo);
+                        }
+                        List<Field> subFields = FieldUtils.getFieldsListWithAnnotation(obj.getClass(), Excel.class);
+                        int subIndex = 0;
+                        for (Field subField : subFields) {
+                            if (subField.isAnnotationPresent(Excel.class)) {
+                                subField.setAccessible(true);
+                                Excel attr = subField.getAnnotation(Excel.class);
+                                this.addCell(attr, row, (T) obj, subField, column + subIndex);
+                            }
+                            subIndex++;
+                        }
+                        subFirst = true;
+                    }
+                    this.subMergedFirstRowNum = this.subMergedFirstRowNum + subList.size();
+                } else {
+                    this.addCell(excel, row, vo, field, column++);
+                }
+            }
+        }
+    }
+
+    /**
+     * 创建表格样式
+     *
+     * @param wb 工作薄对象
+     * @return 样式列表
+     */
+    private Map<String, CellStyle> createStyles(Workbook wb) {
+        // 写入各条记录,每条记录对应excel表中的一行
+        Map<String, CellStyle> styles = new HashMap<>();
+        CellStyle style = wb.createCellStyle();
+        style.setAlignment(HorizontalAlignment.CENTER);
+        style.setVerticalAlignment(VerticalAlignment.CENTER);
+        Font titleFont = wb.createFont();
+        titleFont.setFontName("Arial");
+        titleFont.setFontHeightInPoints((short) 16);
+        titleFont.setBold(true);
+        style.setFont(titleFont);
+        DataFormat dataFormat = wb.createDataFormat();
+        style.setDataFormat(dataFormat.getFormat("@"));
+        styles.put("title", style);
+
+        style = wb.createCellStyle();
+        style.setAlignment(HorizontalAlignment.CENTER);
+        style.setVerticalAlignment(VerticalAlignment.CENTER);
+        style.setBorderRight(BorderStyle.THIN);
+        style.setRightBorderColor(IndexedColors.GREY_50_PERCENT.getIndex());
+        style.setBorderLeft(BorderStyle.THIN);
+        style.setLeftBorderColor(IndexedColors.GREY_50_PERCENT.getIndex());
+        style.setBorderTop(BorderStyle.THIN);
+        style.setTopBorderColor(IndexedColors.GREY_50_PERCENT.getIndex());
+        style.setBorderBottom(BorderStyle.THIN);
+        style.setBottomBorderColor(IndexedColors.GREY_50_PERCENT.getIndex());
+        Font dataFont = wb.createFont();
+        dataFont.setFontName("Arial");
+        dataFont.setFontHeightInPoints((short) 10);
+        style.setFont(dataFont);
+        styles.put("data", style);
+
+        style = wb.createCellStyle();
+        style.setAlignment(HorizontalAlignment.CENTER);
+        style.setVerticalAlignment(VerticalAlignment.CENTER);
+        Font totalFont = wb.createFont();
+        totalFont.setFontName("Arial");
+        totalFont.setFontHeightInPoints((short) 10);
+        style.setFont(totalFont);
+        styles.put("total", style);
+
+        styles.putAll(annotationHeaderStyles(wb, styles));
+
+        styles.putAll(annotationDataStyles());
+
+        return styles;
+    }
+
+    /**
+     * 根据Excel注解创建表格头样式
+     *
+     * @param wb 工作薄对象
+     * @return 自定义样式列表
+     */
+    private Map<String, CellStyle> annotationHeaderStyles(Workbook wb, Map<String, CellStyle> styles) {
+        Map<String, CellStyle> headerStyles = new HashMap<>();
+        for (Object[] os : fields) {
+            Excel excel = (Excel) os[1];
+            String key = StringUtils.format("header_{}_{}", excel.headerColor(), excel.headerBackgroundColor());
+            if (!headerStyles.containsKey(key)) {
+                CellStyle style = wb.createCellStyle();
+                style.cloneStyleFrom(styles.get("data"));
+                style.setAlignment(HorizontalAlignment.CENTER);
+                style.setVerticalAlignment(VerticalAlignment.CENTER);
+                style.setFillForegroundColor(excel.headerBackgroundColor().index);
+                style.setFillPattern(FillPatternType.SOLID_FOREGROUND);
+                Font headerFont = wb.createFont();
+                headerFont.setFontName("Arial");
+                headerFont.setFontHeightInPoints((short) 10);
+                headerFont.setBold(true);
+                headerFont.setColor(excel.headerColor().index);
+                style.setFont(headerFont);
+                // 设置表格头单元格文本形式
+                DataFormat dataFormat = wb.createDataFormat();
+                style.setDataFormat(dataFormat.getFormat("@"));
+                headerStyles.put(key, style);
+            }
+        }
+        return headerStyles;
+    }
+
+    /**
+     * 根据Excel注解创建表格列样式
+     *
+     * @return 自定义样式列表
+     */
+    private Map<String, CellStyle> annotationDataStyles() {
+        Map<String, CellStyle> styles = new HashMap<>();
+        for (Object[] os : fields) {
+            Field field = (Field) os[0];
+            Excel excel = (Excel) os[1];
+            if (Collection.class.isAssignableFrom(field.getType())) {
+                ParameterizedType pt = (ParameterizedType) field.getGenericType();
+                Class<?> subClass = (Class<?>) pt.getActualTypeArguments()[0];
+                List<Field> subFields = FieldUtils.getFieldsListWithAnnotation(subClass, Excel.class);
+                for (Field subField : subFields) {
+                    Excel subExcel = subField.getAnnotation(Excel.class);
+                    annotationDataStyles(styles, subExcel);
+                }
+            } else {
+                annotationDataStyles(styles, excel);
+            }
+        }
+        return styles;
+    }
+
+    /**
+     * 根据Excel注解创建表格列样式
+     *
+     * @param styles 自定义样式列表
+     * @param excel  注解信息
+     */
+    public void annotationDataStyles(Map<String, CellStyle> styles, Excel excel) {
+        String key = StringUtils.format("data_{}_{}_{}_{}", excel.align(), excel.color(), excel.backgroundColor(), excel.cellType());
+        if (!styles.containsKey(key)) {
+            CellStyle style = wb.createCellStyle();
+            style.setAlignment(excel.align());
+            style.setVerticalAlignment(VerticalAlignment.CENTER);
+            style.setBorderRight(BorderStyle.THIN);
+            style.setRightBorderColor(IndexedColors.GREY_50_PERCENT.getIndex());
+            style.setBorderLeft(BorderStyle.THIN);
+            style.setLeftBorderColor(IndexedColors.GREY_50_PERCENT.getIndex());
+            style.setBorderTop(BorderStyle.THIN);
+            style.setTopBorderColor(IndexedColors.GREY_50_PERCENT.getIndex());
+            style.setBorderBottom(BorderStyle.THIN);
+            style.setBottomBorderColor(IndexedColors.GREY_50_PERCENT.getIndex());
+            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);
+            style.setFillForegroundColor(excel.backgroundColor().getIndex());
+            Font dataFont = wb.createFont();
+            dataFont.setFontName("Arial");
+            dataFont.setFontHeightInPoints((short) 10);
+            dataFont.setColor(excel.color().index);
+            style.setFont(dataFont);
+            if (ColumnType.TEXT == excel.cellType()) {
+                DataFormat dataFormat = wb.createDataFormat();
+                style.setDataFormat(dataFormat.getFormat("@"));
+            }
+            styles.put(key, style);
+        }
+    }
+
+    /**
+     * 创建单元格
+     */
+    public Cell createHeadCell(Excel attr, Row row, int column) {
+        // 创建列
+        Cell cell = row.createCell(column);
+        // 写入列信息
+        cell.setCellValue(attr.name());
+        setDataValidation(attr, column);
+        cell.setCellStyle(styles.get(StringUtils.format("header_{}_{}", attr.headerColor(), attr.headerBackgroundColor())));
+        if (isSubList()) {
+            // 填充默认样式，防止合并单元格样式失效
+            sheet.setDefaultColumnStyle(column, styles.get(StringUtils.format("data_{}_{}_{}_{}", attr.align(), attr.color(), attr.backgroundColor(), attr.cellType())));
+            if (attr.needMerge()) {
+                sheet.addMergedRegion(new CellRangeAddress(rowNum - 1, rowNum, column, column));
+            }
+        }
+        return cell;
+    }
+
+    /**
+     * 设置单元格信息
+     *
+     * @param value 单元格值
+     * @param attr  注解相关
+     * @param cell  单元格信息
+     */
+    public void setCellVo(Object value, Excel attr, Cell cell) {
+        if (ColumnType.STRING == attr.cellType() || ColumnType.TEXT == attr.cellType()) {
+            String cellValue = Convert.toStr(value);
+            // 对于任何以表达式触发字符 =-+@开头的单元格，直接使用tab字符作为前缀，防止CSV注入。
+            if (StringUtils.startsWithAny(cellValue, FORMULA_STR)) {
+                cellValue = RegExUtils.replaceFirst(cellValue, FORMULA_REGEX_STR, "\t$0");
+            }
+            if (value instanceof Collection && StringUtils.equals("[]", cellValue)) {
+                cellValue = StringUtils.EMPTY;
+            }
+            cell.setCellValue(StringUtils.isNull(cellValue) ? attr.defaultValue() : cellValue + attr.suffix());
+        } else if (ColumnType.NUMERIC == attr.cellType()) {
+            if (StringUtils.isNotNull(value)) {
+                cell.setCellValue(StringUtils.contains(Convert.toStr(value), ".") ? Convert.toDouble(value) : Convert.toInt(value));
+            }
+        } else if (ColumnType.IMAGE == attr.cellType()) {
+            ClientAnchor anchor = new XSSFClientAnchor(0, 0, 0, 0, (short) cell.getColumnIndex(), cell.getRow().getRowNum(), (short) (cell.getColumnIndex() + 1), cell.getRow().getRowNum() + 1);
+            String imagePath = Convert.toStr(value);
+            if (StringUtils.isNotEmpty(imagePath)) {
+                byte[] data = ImageUtils.getImage(imagePath);
+                getDrawingPatriarch(cell.getSheet()).createPicture(anchor,
+                        cell.getSheet().getWorkbook().addPicture(data, getImageType(data)));
+            }
+        }
+    }
+
+    /**
+     * 获取画布
+     */
+    public static Drawing<?> getDrawingPatriarch(Sheet sheet) {
+        if (sheet.getDrawingPatriarch() == null) {
+            sheet.createDrawingPatriarch();
+        }
+        return sheet.getDrawingPatriarch();
+    }
+
+    /**
+     * 获取图片类型,设置图片插入类型
+     */
+    public int getImageType(byte[] value) {
+        String type = FileTypeUtils.getFileExtendName(value);
+        if ("JPG".equalsIgnoreCase(type)) {
+            return Workbook.PICTURE_TYPE_JPEG;
+        } else if ("PNG".equalsIgnoreCase(type)) {
+            return Workbook.PICTURE_TYPE_PNG;
+        }
+        return Workbook.PICTURE_TYPE_JPEG;
+    }
+
+    /**
+     * 创建表格样式
+     */
+    public void setDataValidation(Excel attr, int column) {
+        if (attr.name().contains("注：")) {
+            sheet.setColumnWidth(column, 6000);
+        } else {
+            // 设置列宽
+            sheet.setColumnWidth(column, (int) ((attr.width() + 0.72) * 256));
+        }
+        if (StringUtils.isNotEmpty(attr.prompt()) || attr.combo().length > 0) {
+            if (attr.combo().length > 15 || StringUtils.join(attr.combo()).length() > 255) {
+                // 如果下拉数大于15或字符串长度大于255，则使用一个新sheet存储，避免生成的模板下拉值获取不到
+                setXSSFValidationWithHidden(sheet, attr.combo(), attr.prompt(), 1, 100, column, column);
+            } else {
+                // 提示信息或只能选择不能输入的列内容.
+                setPromptOrValidation(sheet, attr.combo(), attr.prompt(), 1, 100, column, column);
+            }
+        }
+    }
+
+    /**
+     * 添加单元格
+     */
+    public Cell addCell(Excel attr, Row row, T vo, Field field, int column) {
+        Cell cell = null;
+        try {
+            // 设置行高
+            row.setHeight(maxHeight);
+            // 根据Excel中设置情况决定是否导出,有些情况需要保持为空,希望用户填写这一列.
+            if (attr.isExport()) {
+                // 创建cell
+                cell = row.createCell(column);
+                if (isSubListValue(vo) && getListCellValue(vo).size() > 1 && attr.needMerge()) {
+                    CellRangeAddress cellAddress = new CellRangeAddress(subMergedFirstRowNum, subMergedLastRowNum, column, column);
+                    sheet.addMergedRegion(cellAddress);
+                }
+                cell.setCellStyle(styles.get(StringUtils.format("data_{}_{}_{}_{}", attr.align(), attr.color(), attr.backgroundColor(), attr.cellType())));
+
+                // 用于读取对象中的属性
+                Object value = getTargetValue(vo, field, attr);
+                String dateFormat = attr.dateFormat();
+                String readConverterExp = attr.readConverterExp();
+                String separator = attr.separator();
+                if (StringUtils.isNotEmpty(dateFormat) && StringUtils.isNotNull(value)) {
+                    cell.setCellValue(parseDateToStr(dateFormat, value));
+                } else if (StringUtils.isNotEmpty(readConverterExp) && StringUtils.isNotNull(value)) {
+                    cell.setCellValue(convertByExp(Convert.toStr(value), readConverterExp, separator));
+                } else if (value instanceof BigDecimal && -1 != attr.scale()) {
+                    cell.setCellValue(((BigDecimal) value).setScale(attr.scale(), RoundingMode.HALF_EVEN).doubleValue());
+                } else if (!attr.handler().equals(ExcelHandlerAdapter.class)) {
+                    cell.setCellValue(dataFormatHandlerAdapter(value, attr, cell));
+                } else {
+                    // 设置列类型
+                    setCellVo(value, attr, cell);
+                }
+                addStatisticsData(column, Convert.toStr(value), attr);
+            }
+        } catch (Exception e) {
+            log.error("导出Excel失败", e);
+        }
+        return cell;
+    }
+
+    /**
+     * 设置 POI XSSFSheet 单元格提示或选择框
+     *
+     * @param sheet         表单
+     * @param textlist      下拉框显示的内容
+     * @param promptContent 提示内容
+     * @param firstRow      开始行
+     * @param endRow        结束行
+     * @param firstCol      开始列
+     * @param endCol        结束列
+     */
+    public void setPromptOrValidation(Sheet sheet, String[] textlist, String promptContent, int firstRow, int endRow,
+                                      int firstCol, int endCol) {
+        DataValidationHelper helper = sheet.getDataValidationHelper();
+        DataValidationConstraint constraint = textlist.length > 0 ? helper.createExplicitListConstraint(textlist) : helper.createCustomConstraint("DD1");
+        CellRangeAddressList regions = new CellRangeAddressList(firstRow, endRow, firstCol, endCol);
+        DataValidation dataValidation = helper.createValidation(constraint, regions);
+        if (StringUtils.isNotEmpty(promptContent)) {
+            // 如果设置了提示信息则鼠标放上去提示
+            dataValidation.createPromptBox("", promptContent);
+            dataValidation.setShowPromptBox(true);
+        }
+        // 处理Excel兼容性问题
+        if (dataValidation instanceof XSSFDataValidation) {
+            dataValidation.setSuppressDropDownArrow(true);
+            dataValidation.setShowErrorBox(true);
+        } else {
+            dataValidation.setSuppressDropDownArrow(false);
+        }
+        sheet.addValidationData(dataValidation);
+    }
+
+    /**
+     * 设置某些列的值只能输入预制的数据,显示下拉框（兼容超出一定数量的下拉框）.
+     *
+     * @param sheet         要设置的sheet.
+     * @param textlist      下拉框显示的内容
+     * @param promptContent 提示内容
+     * @param firstRow      开始行
+     * @param endRow        结束行
+     * @param firstCol      开始列
+     * @param endCol        结束列
+     */
+    public void setXSSFValidationWithHidden(Sheet sheet, String[] textlist, String promptContent, int firstRow, int endRow, int firstCol, int endCol) {
+        String hideSheetName = "combo_" + firstCol + "_" + endCol;
+        Sheet hideSheet = wb.createSheet(hideSheetName);
+        for (int i = 0; i < textlist.length; i++) {
+            hideSheet.createRow(i).createCell(0).setCellValue(textlist[i]);
+        }
+        // 创建名称，可被其他单元格引用
+        Name name = wb.createName();
+        name.setNameName(hideSheetName + "_data");
+        name.setRefersToFormula(hideSheetName + "!$A$1:$A$" + textlist.length);
+        DataValidationHelper helper = sheet.getDataValidationHelper();
+        // 加载下拉列表内容
+        DataValidationConstraint constraint = helper.createFormulaListConstraint(hideSheetName + "_data");
+        // 设置数据有效性加载在哪个单元格上,四个参数分别是：起始行、终止行、起始列、终止列
+        CellRangeAddressList regions = new CellRangeAddressList(firstRow, endRow, firstCol, endCol);
+        // 数据有效性对象
+        DataValidation dataValidation = helper.createValidation(constraint, regions);
+        if (StringUtils.isNotEmpty(promptContent)) {
+            // 如果设置了提示信息则鼠标放上去提示
+            dataValidation.createPromptBox("", promptContent);
+            dataValidation.setShowPromptBox(true);
+        }
+        // 处理Excel兼容性问题
+        if (dataValidation instanceof XSSFDataValidation) {
+            dataValidation.setSuppressDropDownArrow(true);
+            dataValidation.setShowErrorBox(true);
+        } else {
+            dataValidation.setSuppressDropDownArrow(false);
+        }
+
+        sheet.addValidationData(dataValidation);
+        // 设置hiddenSheet隐藏
+        wb.setSheetHidden(wb.getSheetIndex(hideSheet), true);
+    }
+
+    /**
+     * 解析导出值 0=男,1=女,2=未知
+     *
+     * @param propertyValue 参数值
+     * @param converterExp  翻译注解
+     * @param separator     分隔符
+     * @return 解析后值
+     */
+    public static String convertByExp(String propertyValue, String converterExp, String separator) {
+        StringBuilder propertyString = new StringBuilder();
+        String[] convertSource = converterExp.split(",");
+        for (String item : convertSource) {
+            String[] itemArray = item.split("=");
+            if (StringUtils.containsAny(propertyValue, separator)) {
+                for (String value : propertyValue.split(separator)) {
+                    if (itemArray[0].equals(value)) {
+                        propertyString.append(itemArray[1]).append(separator);
+                        break;
+                    }
+                }
+            } else {
+                if (itemArray[0].equals(propertyValue)) {
+                    return itemArray[1];
+                }
+            }
+        }
+        return StringUtils.stripEnd(propertyString.toString(), separator);
+    }
+
+    /**
+     * 反向解析值 男=0,女=1,未知=2
+     *
+     * @param propertyValue 参数值
+     * @param converterExp  翻译注解
+     * @param separator     分隔符
+     * @return 解析后值
+     */
+    public static String reverseByExp(String propertyValue, String converterExp, String separator) {
+        StringBuilder propertyString = new StringBuilder();
+        String[] convertSource = converterExp.split(",");
+        for (String item : convertSource) {
+            String[] itemArray = item.split("=");
+            if (StringUtils.containsAny(propertyValue, separator)) {
+                for (String value : propertyValue.split(separator)) {
+                    if (itemArray[1].equals(value)) {
+                        propertyString.append(itemArray[0]).append(separator);
+                        break;
+                    }
+                }
+            } else {
+                if (itemArray[1].equals(propertyValue)) {
+                    return itemArray[0];
+                }
+            }
+        }
+        return StringUtils.stripEnd(propertyString.toString(), separator);
+    }
+
+    /**
+     * 数据处理器
+     *
+     * @param value 数据值
+     * @param excel 数据注解
+     * @return 处理后的值
+     */
+    public String dataFormatHandlerAdapter(Object value, Excel excel, Cell cell) {
+        try {
+            Object instance = excel.handler().getDeclaredConstructor().newInstance();
+            Method formatMethod = excel.handler().getMethod("format", Object.class, String[].class, Cell.class, Workbook.class);
+            value = formatMethod.invoke(instance, value, excel.args(), cell, this.wb);
+        } catch (Exception e) {
+            log.error("不能格式化数据 {}，{}", excel.handler(), e.getMessage());
+        }
+        return Convert.toStr(value);
+    }
+
+    /**
+     * 合计统计信息
+     */
+    private void addStatisticsData(Integer index, String text, Excel entity) {
+        if (entity != null && entity.isStatistics()) {
+            Double temp = 0D;
+            if (!statistics.containsKey(index)) {
+                statistics.put(index, temp);
+            }
+            try {
+                temp = Double.valueOf(text);
+            } catch (NumberFormatException ignored) {
+            }
+            statistics.put(index, statistics.get(index) + temp);
+        }
+    }
+
+    /**
+     * 创建统计行
+     */
+    public void addStatisticsRow() {
+        if (!statistics.isEmpty()) {
+            Row row = sheet.createRow(sheet.getLastRowNum() + 1);
+            Set<Integer> keys = statistics.keySet();
+            Cell cell = row.createCell(0);
+            cell.setCellStyle(styles.get("total"));
+            cell.setCellValue("合计");
+
+            for (Integer key : keys) {
+                cell = row.createCell(key);
+                cell.setCellStyle(styles.get("total"));
+                cell.setCellValue(DOUBLE_FORMAT.format(statistics.get(key)));
+            }
+            statistics.clear();
+        }
+    }
+
+    /**
+     * 获取bean中的属性值
+     *
+     * @param vo    实体对象
+     * @param field 字段
+     * @param excel 注解
+     * @return 最终的属性值
+     * @throws Exception 获取值异常
+     */
+    private Object getTargetValue(T vo, Field field, Excel excel) throws Exception {
+        Object o = field.get(vo);
+        if (StringUtils.isNotEmpty(excel.targetAttr())) {
+            String target = excel.targetAttr();
+            if (target.contains(".")) {
+                String[] targets = target.split("[.]");
+                for (String name : targets) {
+                    o = getValue(o, name);
+                }
+            } else {
+                o = getValue(o, target);
+            }
+        }
+        return o;
+    }
+
+    /**
+     * 以类的属性的get方法方法形式获取值
+     *
+     * @param o    对象
+     * @param name 名称
+     * @return value
+     * @throws Exception 获取值异常
+     */
+    private Object getValue(Object o, String name) throws Exception {
+        if (StringUtils.isNotNull(o) && StringUtils.isNotEmpty(name)) {
+            Class<?> clazz = o.getClass();
+            Field field = clazz.getDeclaredField(name);
+            field.setAccessible(true);
+            o = field.get(o);
+        }
+        return o;
+    }
+
+    /**
+     * 得到所有定义字段
+     */
+    private void createExcelField() {
+        this.fields = getFields();
+        this.fields = this.fields.stream().sorted(Comparator.comparing(objects -> ((Excel) objects[1]).sort())).collect(Collectors.toList());
+        this.maxHeight = getRowHeight();
+    }
+
+    /**
+     * 获取字段注解信息
+     */
+    public List<Object[]> getFields() {
+        List<Object[]> fields = new ArrayList<>();
+        List<Field> tempFields = new ArrayList<>();
+        tempFields.addAll(Arrays.asList(clazz.getSuperclass().getDeclaredFields()));
+        tempFields.addAll(Arrays.asList(clazz.getDeclaredFields()));
+        for (Field field : tempFields) {
+            if (!ArrayUtils.contains(this.excludeFields, field.getName())) {
+                // 单注解
+                if (field.isAnnotationPresent(Excel.class)) {
+                    Excel attr = field.getAnnotation(Excel.class);
+                    if (attr != null && (attr.type() == Type.ALL || attr.type() == type)) {
+                        field.setAccessible(true);
+                        fields.add(new Object[]{field, attr});
+                    }
+                    if (Collection.class.isAssignableFrom(field.getType())) {
+                        subMethod = getSubMethod(field.getName(), clazz);
+                        ParameterizedType pt = (ParameterizedType) field.getGenericType();
+                        Class<?> subClass = (Class<?>) pt.getActualTypeArguments()[0];
+                        this.subFields = FieldUtils.getFieldsListWithAnnotation(subClass, Excel.class);
+                    }
+                }
+
+                // 多注解
+                if (field.isAnnotationPresent(Excels.class)) {
+                    Excels attrs = field.getAnnotation(Excels.class);
+                    var excels = attrs.value();
+                    for (Excel attr : excels) {
+                        if (!ArrayUtils.contains(this.excludeFields, field.getName() + "." + attr.targetAttr()) && (attr.type() == Type.ALL || attr.type() == type)) {
+                            field.setAccessible(true);
+                            fields.add(new Object[]{field, attr});
+                        }
+                    }
+                }
+            }
+        }
+        return fields;
+    }
+
+    /**
+     * 根据注解获取最大行高
+     */
+    public short getRowHeight() {
+        double maxHeight = 0;
+        for (Object[] os : this.fields) {
+            Excel excel = (Excel) os[1];
+            maxHeight = Math.max(maxHeight, excel.height());
+        }
+        return (short) (maxHeight * 20);
+    }
+
+    /**
+     * 创建一个工作簿
+     */
+    public void createWorkbook() {
+        this.wb = new SXSSFWorkbook(500);
+        this.sheet = wb.createSheet();
+        wb.setSheetName(0, sheetName);
+        this.styles = createStyles(wb);
+    }
+
+    /**
+     * 创建工作表
+     *
+     * @param sheetNo sheet数量
+     * @param index   序号
+     */
+    public void createSheet(int sheetNo, int index) {
+        // 设置工作表的名称.
+        if (sheetNo > 1 && index > 0) {
+            this.sheet = wb.createSheet();
+            this.createTitle();
+            wb.setSheetName(index, sheetName + index);
+        }
+    }
+
+    /**
+     * 获取单元格值
+     *
+     * @param row    获取的行
+     * @param column 获取单元格列号
+     * @return 单元格值
+     */
+    public Object getCellValue(Row row, int column) {
+        if (row == null) {
+            return null;
+        }
+        Object val = "";
+        try {
+            Cell cell = row.getCell(column);
+            if (StringUtils.isNotNull(cell)) {
+                if (cell.getCellType() == CellType.NUMERIC || cell.getCellType() == CellType.FORMULA) {
+                    val = cell.getNumericCellValue();
+                    if (DateUtil.isCellDateFormatted(cell)) {
+                        val = DateUtil.getJavaDate((Double) val); // POI Excel 日期格式转换
+                    } else {
+                        if ((Double) val % 1 != 0) {
+                            val = new BigDecimal(val.toString());
+                        } else {
+                            val = new DecimalFormat("0").format(val);
+                        }
+                    }
+                } else if (cell.getCellType() == CellType.STRING) {
+                    val = cell.getStringCellValue();
+                } else if (cell.getCellType() == CellType.BOOLEAN) {
+                    val = cell.getBooleanCellValue();
+                } else if (cell.getCellType() == CellType.ERROR) {
+                    val = cell.getErrorCellValue();
+                }
+
+            }
+        } catch (Exception e) {
+            return val;
+        }
+        return val;
+    }
+
+    /**
+     * 判断是否是空行
+     *
+     * @param row 判断的行
+     * @return 是否为空行
+     */
+    private boolean isRowEmpty(Row row) {
+        if (row == null) {
+            return true;
+        }
+        for (int i = row.getFirstCellNum(); i < row.getLastCellNum(); i++) {
+            Cell cell = row.getCell(i);
+            if (cell != null && cell.getCellType() != CellType.BLANK) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    /**
+     * 格式化不同类型的日期对象
+     *
+     * @param dateFormat 日期格式
+     * @param val        被格式化的日期对象
+     * @return 格式化后的日期字符
+     */
+    public String parseDateToStr(String dateFormat, Object val) {
+        if (val == null) {
+            return "";
+        }
+        String str;
+        if (val instanceof Date) {
+            str = DateUtils.parseDateToStr(dateFormat, (Date) val);
+        } else if (val instanceof LocalDateTime) {
+            str = DateUtils.parseDateToStr(dateFormat, DateUtils.toDate((LocalDateTime) val));
+        } else if (val instanceof LocalDate) {
+            str = DateUtils.parseDateToStr(dateFormat, DateUtils.toDate((LocalDate) val));
+        } else {
+            str = val.toString();
+        }
+        return str;
+    }
+
+    /**
+     * 是否有对象的子列表
+     */
+    public boolean isSubList() {
+        return StringUtils.isNotNull(subFields) && !subFields.isEmpty();
+    }
+
+    /**
+     * 是否有对象的子列表，集合不为空
+     */
+    public boolean isSubListValue(T vo) {
+        return StringUtils.isNotNull(subFields) && !subFields.isEmpty() && StringUtils.isNotNull(getListCellValue(vo)) && !getListCellValue(vo).isEmpty();
+    }
+
+    /**
+     * 获取集合的值
+     */
+    public Collection<?> getListCellValue(Object obj) {
+        Object value;
+        try {
+            value = subMethod.invoke(obj);
+        } catch (Exception e) {
+            return new ArrayList<>();
+        }
+        return (Collection<?>) value;
+    }
+
+    /**
+     * 获取对象的子列表方法
+     *
+     * @param name      名称
+     * @param pojoClass 类对象
+     * @return 子列表方法
+     */
+    public Method getSubMethod(String name, Class<?> pojoClass) {
+        StringBuilder getMethodName = new StringBuilder("get");
+        getMethodName.append(name.substring(0, 1).toUpperCase());
+        getMethodName.append(name.substring(1));
+        Method method = null;
+        try {
+            method = pojoClass.getMethod(getMethodName.toString());
+        } catch (Exception e) {
+            log.error("获取对象异常{}", e.getMessage());
+        }
+        return method;
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/IpUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/IpUtil.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/IpUtil.java
new file mode 100644
--- /dev/null	(date 1726310283728)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/IpUtil.java	(date 1726310283728)
@@ -0,0 +1,59 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.base.utils;
+
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.server.reactive.ServerHttpRequest;
+
+import java.util.Objects;
+
+/**
+ * IP 工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/6/8
+ */
+public class IpUtil {
+
+    /**
+     * 获取 IP 地址
+     *
+     * @param request 请求
+     * @return IP 地址
+     */
+    public static String getIp(ServerHttpRequest request) {
+        HttpHeaders headers = request.getHeaders();
+        String ip = headers.getFirst("x-forwarded-for");
+        if (ip != null && !ip.isEmpty() && !"unknown".equalsIgnoreCase(ip)) {
+            if (ip.contains(",")) {
+                ip = ip.split(",")[0];
+            }
+        }
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = headers.getFirst("Proxy-Client-IP");
+        }
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = headers.getFirst("WL-Proxy-Client-IP");
+        }
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = headers.getFirst("HTTP_CLIENT_IP");
+        }
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = headers.getFirst("HTTP_X_FORWARDED_FOR");
+        }
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = headers.getFirst("X-Real-IP");
+        }
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = Objects.requireNonNull(request.getRemoteAddress()).getAddress().getHostAddress();
+        }
+        return ip;
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/MD5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/MD5.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/MD5.java
new file mode 100644
--- /dev/null	(date 1726310283741)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/MD5.java	(date 1726310283741)
@@ -0,0 +1,48 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.base.utils;
+
+import org.apache.commons.codec.digest.DigestUtils;
+
+public class MD5 {
+
+    /**
+     * MD5 方法
+     *
+     * @param text 明文
+     * @return 密文
+     */
+    public static String md5(String text) {
+        return DigestUtils.md5Hex(text);
+    }
+
+    /**
+     * MD5 方法
+     *
+     * @param text 明文
+     * @param key  盐
+     * @return 密文
+     */
+    public static String md5(String text, String key) {
+        return DigestUtils.md5Hex(text + key);
+    }
+
+    /**
+     * MD5验证方法
+     *
+     * @param text 明文
+     * @param key  密钥/盐
+     * @param md5  密文
+     * @return 验证结果
+     */
+    public static boolean verify(String text, String key, String md5) {
+        String md5Text = md5(text, key);
+        return md5Text.equalsIgnoreCase(md5);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ip/IpUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ip/IpUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ip/IpUtils.java
new file mode 100644
--- /dev/null	(date 1726288143548)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ip/IpUtils.java	(date 1726288143548)
@@ -0,0 +1,347 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.ip;
+
+import jakarta.servlet.http.HttpServletRequest;
+import leyramu.qinian.asc.common.core.utils.ServletUtils;
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+
+import java.net.InetAddress;
+import java.net.UnknownHostException;
+
+/**
+ * 获取IP方法
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class IpUtils {
+
+    /**
+     * 0-255
+     */
+    public final static String REGX_0_255 = "(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)";
+
+    /**
+     * 匹配 ip
+     */
+    public final static String REGX_IP = "((" + REGX_0_255 + "\\.){3}" + REGX_0_255 + ")";
+
+    /**
+     * 匹配 ip 段
+     */
+    public final static String REGX_IP_WILDCARD = "(((\\*\\.){3}\\*)|(" + REGX_0_255 + "(\\.\\*){3})|(" + REGX_0_255 + "\\." + REGX_0_255 + ")(\\.\\*){2}" + "|((" + REGX_0_255 + "\\.){3}\\*))";
+
+    /**
+     * 匹配网段
+     */
+    public final static String REGX_IP_SEG = "(" + REGX_IP + "-" + REGX_IP + ")";
+
+    /**
+     * 获取客户端IP
+     *
+     * @return IP地址
+     */
+    public static String getIpAddr() {
+        return getIpAddr(ServletUtils.getRequest());
+    }
+
+    /**
+     * 获取客户端IP
+     *
+     * @param request 请求对象
+     * @return IP地址
+     */
+    public static String getIpAddr(HttpServletRequest request) {
+        if (request == null) {
+            return "unknown";
+        }
+        String ip = request.getHeader("x-forwarded-for");
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = request.getHeader("Proxy-Client-IP");
+        }
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = request.getHeader("X-Forwarded-For");
+        }
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = request.getHeader("WL-Proxy-Client-IP");
+        }
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = request.getHeader("X-Real-IP");
+        }
+
+        if (ip == null || ip.isEmpty() || "unknown".equalsIgnoreCase(ip)) {
+            ip = request.getRemoteAddr();
+        }
+
+        return "0:0:0:0:0:0:0:1".equals(ip) ? "127.0.0.1" : getMultistageReverseProxyIp(ip);
+    }
+
+    /**
+     * 检查是否为内部IP地址
+     *
+     * @param ip IP地址
+     * @return 结果
+     */
+    public static boolean internalIp(String ip) {
+        byte[] addr = textToNumericFormatV4(ip);
+        return internalIp(addr) || "127.0.0.1".equals(ip);
+    }
+
+    /**
+     * 检查是否为内部IP地址
+     *
+     * @param addr byte地址
+     * @return 结果
+     */
+    private static boolean internalIp(byte[] addr) {
+        if (StringUtils.isNull(addr) || addr.length < 2) {
+            return true;
+        }
+        final byte b0 = addr[0];
+        final byte b1 = addr[1];
+        // 10.x.x.x/8
+        final byte section1 = 0x0A;
+        // 172.16.x.x/12
+        final byte section2 = (byte) 0xAC;
+        final byte section3 = (byte) 0x10;
+        final byte section4 = (byte) 0x1F;
+        // 192.168.x.x/16
+        final byte section5 = (byte) 0xC0;
+        final byte section6 = (byte) 0xA8;
+        switch (b0) {
+            case section1:
+                return true;
+            case section2:
+                if (b1 >= section3 && b1 <= section4) {
+                    return true;
+                }
+            case section5:
+                if (b1 == section6) {
+                    return true;
+                }
+            default:
+                return false;
+        }
+    }
+
+    /**
+     * 将IPv4地址转换成字节
+     *
+     * @param text IPv4地址
+     * @return byte 字节
+     */
+    public static byte[] textToNumericFormatV4(String text) {
+        if (text.isEmpty()) {
+            return null;
+        }
+
+        byte[] bytes = new byte[4];
+        String[] elements = text.split("\\.", -1);
+        try {
+            long l;
+            int i;
+            switch (elements.length) {
+                case 1:
+                    l = Long.parseLong(elements[0]);
+                    if ((l < 0L) || (l > 4294967295L)) {
+                        return null;
+                    }
+                    bytes[0] = (byte) (int) (l >> 24 & 0xFF);
+                    bytes[1] = (byte) (int) ((l & 0xFFFFFF) >> 16 & 0xFF);
+                    bytes[2] = (byte) (int) ((l & 0xFFFF) >> 8 & 0xFF);
+                    bytes[3] = (byte) (int) (l & 0xFF);
+                    break;
+                case 2:
+                    l = Integer.parseInt(elements[0]);
+                    if ((l < 0L) || (l > 255L)) {
+                        return null;
+                    }
+                    bytes[0] = (byte) (int) (l & 0xFF);
+                    l = Integer.parseInt(elements[1]);
+                    if ((l < 0L) || (l > 16777215L)) {
+                        return null;
+                    }
+                    bytes[1] = (byte) (int) (l >> 16 & 0xFF);
+                    bytes[2] = (byte) (int) ((l & 0xFFFF) >> 8 & 0xFF);
+                    bytes[3] = (byte) (int) (l & 0xFF);
+                    break;
+                case 3:
+                    for (i = 0; i < 2; ++i) {
+                        l = Integer.parseInt(elements[i]);
+                        if ((l < 0L) || (l > 255L)) {
+                            return null;
+                        }
+                        bytes[i] = (byte) (int) (l & 0xFF);
+                    }
+                    l = Integer.parseInt(elements[2]);
+                    if ((l < 0L) || (l > 65535L)) {
+                        return null;
+                    }
+                    bytes[2] = (byte) (int) (l >> 8 & 0xFF);
+                    bytes[3] = (byte) (int) (l & 0xFF);
+                    break;
+                case 4:
+                    for (i = 0; i < 4; ++i) {
+                        l = Integer.parseInt(elements[i]);
+                        if ((l < 0L) || (l > 255L)) {
+                            return null;
+                        }
+                        bytes[i] = (byte) (int) (l & 0xFF);
+                    }
+                    break;
+                default:
+                    return null;
+            }
+        } catch (NumberFormatException e) {
+            return null;
+        }
+        return bytes;
+    }
+
+    /**
+     * 获取IP地址
+     *
+     * @return 本地IP地址
+     */
+    public static String getHostIp() {
+        try {
+            return InetAddress.getLocalHost().getHostAddress();
+        } catch (UnknownHostException ignored) {
+        }
+        return "127.0.0.1";
+    }
+
+    /**
+     * 获取主机名
+     *
+     * @return 本地主机名
+     */
+    public static String getHostName() {
+        try {
+            return InetAddress.getLocalHost().getHostName();
+        } catch (UnknownHostException ignored) {
+        }
+        return "未知";
+    }
+
+    /**
+     * 从多级反向代理中获得第一个非unknown IP地址
+     *
+     * @param ip 获得的IP地址
+     * @return 第一个非unknown IP地址
+     */
+    public static String getMultistageReverseProxyIp(String ip) {
+        // 多级反向代理检测
+        if (ip != null && ip.indexOf(",") > 0) {
+            final String[] ips = ip.trim().split(",");
+            for (String subIp : ips) {
+                if (!isUnknown(subIp)) {
+                    ip = subIp;
+                    break;
+                }
+            }
+        }
+        return StringUtils.substring(ip, 0, 255);
+    }
+
+    /**
+     * 检测给定字符串是否为未知，多用于检测HTTP请求相关
+     *
+     * @param checkString 被检测的字符串
+     * @return 是否未知
+     */
+    public static boolean isUnknown(String checkString) {
+        return StringUtils.isBlank(checkString) || "unknown".equalsIgnoreCase(checkString);
+    }
+
+    /**
+     * 是否为IP
+     */
+    public static boolean isIP(String ip) {
+        return StringUtils.isNotBlank(ip) && ip.matches(REGX_IP);
+    }
+
+    /**
+     * 是否为IP，或 *为间隔的通配符地址
+     */
+    public static boolean isIpWildCard(String ip) {
+        return StringUtils.isNotBlank(ip) && ip.matches(REGX_IP_WILDCARD);
+    }
+
+    /**
+     * 检测参数是否在ip通配符里
+     */
+    public static boolean ipIsInWildCardNoCheck(String ipWildCard, String ip) {
+        String[] s1 = ipWildCard.split("\\.");
+        String[] s2 = ip.split("\\.");
+        boolean isMatchedSeg = true;
+        for (int i = 0; i < s1.length && !"*".equals(s1[i]); i++) {
+            if (!s1[i].equals(s2[i])) {
+                isMatchedSeg = false;
+                break;
+            }
+        }
+        return isMatchedSeg;
+    }
+
+    /**
+     * 是否为特定格式如:“10.10.10.1-10.10.10.99”的ip段字符串
+     */
+    public static boolean isIpSegment(String ipSeg) {
+        return StringUtils.isNotBlank(ipSeg) && ipSeg.matches(REGX_IP_SEG);
+    }
+
+    /**
+     * 判断ip是否在指定网段中
+     */
+    public static boolean ipIsInNetNoCheck(String ipArea, String ip) {
+        int idx = ipArea.indexOf('-');
+        String[] sips = ipArea.substring(0, idx).split("\\.");
+        String[] sipe = ipArea.substring(idx + 1).split("\\.");
+        String[] sipt = ip.split("\\.");
+        long ips = 0L, ipe = 0L, ipt = 0L;
+        for (int i = 0; i < 4; ++i) {
+            ips = ips << 8 | Integer.parseInt(sips[i]);
+            ipe = ipe << 8 | Integer.parseInt(sipe[i]);
+            ipt = ipt << 8 | Integer.parseInt(sipt[i]);
+        }
+        if (ips > ipe) {
+            long t = ips;
+            ips = ipe;
+            ipe = t;
+        }
+        return ips <= ipt && ipt <= ipe;
+    }
+
+    /**
+     * 校验ip是否符合过滤串规则
+     *
+     * @param filter 过滤IP列表,支持后缀'*'通配,支持网段如:`10.10.10.1-10.10.10.99`
+     * @param ip     校验IP地址
+     * @return boolean 结果
+     */
+    public static boolean isMatchedIp(String filter, String ip) {
+        if (StringUtils.isEmpty(filter) || StringUtils.isEmpty(ip)) {
+            return false;
+        }
+        String[] ips = filter.split(";");
+        for (String iStr : ips) {
+            if (isIP(iStr) && iStr.equals(ip)) {
+                return true;
+            } else if (isIpWildCard(iStr) && ipIsInWildCardNoCheck(iStr, ip)) {
+                return true;
+            } else if (isIpSegment(iStr) && ipIsInNetNoCheck(iStr, ip)) {
+                return true;
+            }
+        }
+        return false;
+    }
+}
Index: asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/AscFishRaftServiceApplication.java
===================================================================
diff --git a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/AscFishRaftServiceApplication.java b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/AscFishRaftServiceApplication.java
rename from asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/AscFishRaftServiceApplication.java
rename to asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/AscFishRaftServiceApplication.java
--- a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/AscFishRaftServiceApplication.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/AscFishRaftServiceApplication.java	(date 1726316993236)
@@ -1,4 +1,4 @@
-package org.qinian;
+package org.leyramu;
 
 import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.boot.SpringApplication;
@@ -9,7 +9,7 @@
 @SpringBootApplication
 @EnableFeignClients
 @EnableDiscoveryClient
-@MapperScan(basePackages = {"org.qinian.dao"})
+@MapperScan(basePackages = {"org.qinian.mapper"})
 public class AscFishRaftServiceApplication {
 
     public static void main(String[] args) {
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/MimeTypeUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/MimeTypeUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/MimeTypeUtils.java
new file mode 100644
--- /dev/null	(date 1726288143353)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/MimeTypeUtils.java	(date 1726288143353)
@@ -0,0 +1,97 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.file;
+
+/**
+ * 媒体类型工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class MimeTypeUtils {
+
+    /**
+     * PNG 图片
+     */
+    public static final String IMAGE_PNG = "image/png";
+
+    /**
+     * JPG 图片
+     */
+    public static final String IMAGE_JPG = "image/jpg";
+
+    /**
+     * JPEG 图片
+     */
+    public static final String IMAGE_JPEG = "image/jpeg";
+
+    /**
+     * BMP 图片
+     */
+    public static final String IMAGE_BMP = "image/bmp";
+
+    /**
+     * GIF 图片
+     */
+    public static final String IMAGE_GIF = "image/gif";
+
+    /**
+     * 图片后缀
+     */
+    public static final String[] IMAGE_EXTENSION = {"bmp", "gif", "jpg", "jpeg", "png"};
+
+    /**
+     * 音视频后缀
+     */
+    public static final String[] FLASH_EXTENSION = {"swf", "flv"};
+
+    /**
+     * 音视频后缀
+     */
+    public static final String[] MEDIA_EXTENSION = {"swf", "flv", "mp3", "wav", "wma", "wmv", "mid", "avi", "mpg",
+            "asf", "rm", "rmvb"};
+
+    /**
+     * 视频后缀
+     */
+    public static final String[] VIDEO_EXTENSION = {"mp4", "avi", "rmvb"};
+
+    /**
+     * 默认允许上传的文件后缀（图片、视频、flash、文档）
+     */
+    public static final String[] DEFAULT_ALLOWED_EXTENSION = {
+            // 图片
+            "bmp", "gif", "jpg", "jpeg", "png",
+            // word excel powerpoint
+            "doc", "docx", "xls", "xlsx", "ppt", "pptx", "html", "htm", "txt",
+            // 压缩文件
+            "rar", "zip", "gz", "bz2",
+            // 视频格式
+            "mp4", "avi", "rmvb",
+            // pdf
+            "pdf"};
+
+    /**
+     * 获取文件后缀
+     *
+     * @param prefix 前缀
+     * @return 后缀
+     */
+    public static String getExtension(String prefix) {
+        return switch (prefix) {
+            case IMAGE_PNG -> "png";
+            case IMAGE_JPG -> "jpg";
+            case IMAGE_JPEG -> "jpeg";
+            case IMAGE_BMP -> "bmp";
+            case IMAGE_GIF -> "gif";
+            default -> "";
+        };
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/LocationUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/LocationUtil.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/LocationUtil.java
new file mode 100644
--- /dev/null	(date 1726310283768)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/LocationUtil.java	(date 1726310283768)
@@ -0,0 +1,124 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import com.alibaba.fastjson.JSONObject;
+import feign.template.UriUtils;
+
+import java.io.BufferedReader;
+import java.io.InputStreamReader;
+import java.io.UnsupportedEncodingException;
+import java.net.URL;
+import java.net.URLConnection;
+import java.net.URLEncoder;
+import java.nio.charset.StandardCharsets;
+import java.security.NoSuchAlgorithmException;
+import java.util.LinkedHashMap;
+import java.util.Map;
+
+public class LocationUtil {
+    private static final String AK = "qrqd4LoWwDjVC2Ewt86uEEkR9r6ZdwHZ";
+
+    /**
+     * 返回adcode
+     *
+     * @param lat 纬度
+     * @param lon 经度
+     * @return adcode
+     */
+    public static String getAdcodeByLocation(Double lon, Double lat) {
+        // request
+        BufferedReader reader;
+        StringBuilder sbf = new StringBuilder();
+
+        String location = UriUtils.encode(lat + "," + lon);
+        // sn
+//        String httpUrl = "https://api.map.baidu.com/reverse_geocoding/v3?ak=" + AK + "&output=json&coordtype=wgs84ll&extensions_poi=0&location="+location + "&sn=" + caculateSn(location);
+        // 白名单
+        String httpUrl = "https://api.map.baidu.com/reverse_geocoding/v3?ak=" + AK + "&output=json&coordtype=wgs84ll&extensions_poi=0&location=" + location;
+        try {
+            // 1.请求
+            URL url = new URL(httpUrl);
+            URLConnection httpConnection = url.openConnection();
+            httpConnection.connect();
+
+            InputStreamReader isr = new InputStreamReader(httpConnection.getInputStream());
+            reader = new BufferedReader(isr);
+            String line;
+            while ((line = reader.readLine()) != null) {
+                sbf.append(line);
+            }
+            reader.close();
+            isr.close();
+
+            // 2.解析数据
+            JSONObject object = JSONObject.parseObject(sbf.toString());
+            String status = object.get("status").toString();
+            if (status.equals("0")) {
+                JSONObject resultResponse = (JSONObject) object.get("result");
+                JSONObject addressComponent = (JSONObject) resultResponse.get("addressComponent");
+                return (String) addressComponent.get("adcode");
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    public static String caculateSn(String location) throws UnsupportedEncodingException,
+            NoSuchAlgorithmException {
+        Map paramsMap = new LinkedHashMap<String, String>();
+        paramsMap.put("ak", AK);
+        paramsMap.put("output", "json");
+        paramsMap.put("coordtype", "wgs84ll");
+        paramsMap.put("extensions_poi", "0");
+        paramsMap.put("location", location);
+
+
+        // 调用下面的toQueryString方法，对LinkedHashMap内所有value作utf8编码，拼接返回结果address=%E7%99%BE%E5%BA%A6%E5%A4%A7%E5%8E%A6&output=json&ak=yourak
+        String paramsStr = toQueryString(paramsMap);
+
+        // 对paramsStr前面拼接上/geocoder/v2/?，后面直接拼接yoursk得到/geocoder/v2/?address=%E7%99%BE%E5%BA%A6%E5%A4%A7%E5%8E%A6&output=json&ak=yourakyoursk
+        String SK = "PEi1kdkeOFd5qF9d2BKzPzwdRiAfKiQW";
+        String wholeStr = "/reverse_geocoding/v3?" + paramsStr + SK;
+
+        // 对上面wholeStr再作utf8编码
+        String tempStr = URLEncoder.encode(wholeStr, StandardCharsets.UTF_8);
+
+        // 调用下面的MD5方法得到最后的sn签名
+        return MD5(tempStr);
+    }
+
+    // 对Map内所有value作utf8编码，拼接返回结果
+    private static String toQueryString(Map<?, ?> data)
+            throws UnsupportedEncodingException {
+        StringBuilder queryString = new StringBuilder();
+        for (Map.Entry<?, ?> pair : data.entrySet()) {
+            queryString.append(pair.getKey()).append("=");
+            //    第一种方式使用的 jdk 自带的转码方式  第二种方式使用的 spring 的转码方法 两种均可
+            queryString.append(URLEncoder.encode((String) pair.getValue(), StandardCharsets.UTF_8).replace("+", "%20")).append("&");
+        }
+        if (queryString.length() > 0) {
+            queryString.deleteCharAt(queryString.length() - 1);
+        }
+        return queryString.toString();
+    }
+
+    // 来自stackoverflow的MD5计算方法，调用了MessageDigest库函数，并把byte数组结果转换成16进制
+    private static String MD5(String md5) {
+        try {
+            java.security.MessageDigest md = java.security.MessageDigest
+                    .getInstance("MD5");
+            byte[] array = md.digest(md5.getBytes());
+            StringBuilder sb = new StringBuilder();
+            for (byte b : array) {
+                sb.append(Integer.toHexString((b & 0xFF) | 0x100), 1, 3);
+            }
+            return sb.toString();
+        } catch (NoSuchAlgorithmException ignored) {
+        }
+        return null;
+    }
+
+    public static void main(String[] args) throws UnsupportedEncodingException, NoSuchAlgorithmException {
+        System.out.println(getAdcodeByLocation(116.2241399, 37.39459878));
+    }
+}
Index: asc-java/asc-api/asc-api-system/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-api</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-api-system</artifactId>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.qinian</groupId>\r\n            <artifactId>asc-api-domain</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/pom.xml b/asc-java/asc-api/asc-api-system/pom.xml
--- a/asc-java/asc-api/asc-api-system/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-system/pom.xml	(date 1726317750217)
@@ -1,26 +1,37 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<?xml version="1.0" encoding="UTF-8"?><!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
     <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-api</artifactId>
+        <relativePath>../pom.xml</relativePath>
         <version>1.0.0</version>
     </parent>
 
+    <!--      模块描述      -->
+    <description>管理微服务的系统接口模块</description>
+
+    <!--      工件 ID      -->
     <artifactId>asc-api-system</artifactId>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
+    <!--      依赖      -->
     <dependencies>
+        <!--    Asc Common Core    -->
         <dependency>
-            <groupId>org.qinian</groupId>
-            <artifactId>asc-api-domain</artifactId>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-core</artifactId>
         </dependency>
     </dependencies>
-
 </project>
Index: asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/AscRaftMonitorServiceApplication.java
===================================================================
diff --git a/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/AscRaftMonitorServiceApplication.java b/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/AscRaftMonitorServiceApplication.java
rename from asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/AscRaftMonitorServiceApplication.java
rename to asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/AscRaftMonitorServiceApplication.java
--- a/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/AscRaftMonitorServiceApplication.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/AscRaftMonitorServiceApplication.java	(date 1726316993113)
@@ -1,4 +1,4 @@
-package org.qinian;
+package org.leyramu;
 
 import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.boot.SpringApplication;
@@ -9,7 +9,7 @@
 @SpringBootApplication
 @EnableFeignClients
 @EnableDiscoveryClient
-@MapperScan(basePackages = {"org.qinian.dao"})
+@MapperScan(basePackages = {"org.qinian.mapper"})
 public class AscRaftMonitorServiceApplication {
 
     public static void main(String[] args) {
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/WeatherUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/WeatherUtil.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/WeatherUtil.java
new file mode 100644
--- /dev/null	(date 1726310283752)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/WeatherUtil.java	(date 1726310283752)
@@ -0,0 +1,51 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import com.fasterxml.jackson.databind.ObjectMapper;
+import org.apache.http.HttpResponse;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.impl.client.CloseableHttpClient;
+import org.apache.http.impl.client.HttpClients;
+import org.apache.http.util.EntityUtils;
+import leyramu.qinian.asc.common.base.entity.WeatherInfo;
+
+/**
+ * 基于高德地图的api
+ */
+public class WeatherUtil {
+
+    private static final String WEATHER_API_URL = "https://restapi.amap.com/v3/weather/weatherInfo";
+    private static final String KEY = "c306b59b0342eb1190612f0584aa1f56";
+
+    public static WeatherInfo getWeatherInfo(String adcode) throws Exception {
+        // 创建HttpClient实例
+        CloseableHttpClient httpClient = HttpClients.createDefault();
+        // 创建HttpGet对象
+        HttpGet request = new HttpGet(WEATHER_API_URL + "?city=" + adcode + "&key=" + KEY);
+        // 发送请求并获取响应
+        HttpResponse response = httpClient.execute(request);
+        // 读取响应内容
+        String result = EntityUtils.toString(response.getEntity());
+//        System.out.println(result);
+        // 关闭HttpClient连接
+        httpClient.close();
+
+        ObjectMapper objectMapper = new ObjectMapper();
+        return objectMapper.readValue(result, WeatherInfo.class);
+    }
+
+    public static void main(String[] args) throws Exception {
+        WeatherInfo weatherInfo = getWeatherInfo("131126");
+        // Accessing data
+        for (WeatherInfo.Live live : weatherInfo.getLives()) {
+            System.out.println("Province: " + live.getProvince());
+            System.out.println("City: " + live.getCity());
+            System.out.println("Adcode: " + live.getAdcode());
+            System.out.println("Weather: " + live.getWeather());
+            System.out.println("Temperature: " + live.getTemperature());
+            System.out.println("Wind Direction: " + live.getWindDirection());
+            System.out.println("Wind Power: " + live.getWindPower());
+            System.out.println("Humidity: " + live.getHumidity());
+            System.out.println("Report Time: " + live.getReportTime());
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/FileTypeUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/FileTypeUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/FileTypeUtils.java
new file mode 100644
--- /dev/null	(date 1726288143529)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/FileTypeUtils.java	(date 1726288143529)
@@ -0,0 +1,88 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.file;
+
+import org.apache.commons.io.FilenameUtils;
+import org.apache.commons.lang3.StringUtils;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.io.File;
+import java.util.Objects;
+
+/**
+ * 文件类型工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class FileTypeUtils {
+
+    /**
+     * 获取文件类型
+     *
+     * @param file 文件名
+     * @return 后缀（不含".")
+     */
+    public static String getFileType(File file) {
+        if (null == file) {
+            return StringUtils.EMPTY;
+        }
+        return getFileType(file.getName());
+    }
+
+    /**
+     * 获取文件类型
+     *
+     * @param fileName 文件名
+     * @return 后缀（不含".")
+     */
+    public static String getFileType(String fileName) {
+        int separatorIndex = fileName.lastIndexOf(".");
+        if (separatorIndex < 0) {
+            return "";
+        }
+        return fileName.substring(separatorIndex + 1).toLowerCase();
+    }
+
+    /**
+     * 获取文件名的后缀
+     *
+     * @param file 表单文件
+     * @return 后缀名
+     */
+    public static String getExtension(MultipartFile file) {
+        String extension = FilenameUtils.getExtension(file.getOriginalFilename());
+        if (StringUtils.isEmpty(extension)) {
+            extension = MimeTypeUtils.getExtension(Objects.requireNonNull(file.getContentType()));
+        }
+        return extension;
+    }
+
+    /**
+     * 获取文件类型
+     *
+     * @param photoByte 文件字节码
+     * @return 后缀（不含".")
+     */
+    public static String getFileExtendName(byte[] photoByte) {
+        String strFileExtendName = "JPG";
+        if ((photoByte[0] == 71) && (photoByte[1] == 73) && (photoByte[2] == 70) && (photoByte[3] == 56)
+                && ((photoByte[4] == 55) || (photoByte[4] == 57)) && (photoByte[5] == 97)) {
+            strFileExtendName = "GIF";
+        } else if ((photoByte[6] == 74) && (photoByte[7] == 70) && (photoByte[8] == 73) && (photoByte[9] == 70)) {
+            strFileExtendName = "JPG";
+        } else if ((photoByte[0] == 66) && (photoByte[1] == 77)) {
+            strFileExtendName = "BMP";
+        } else if ((photoByte[1] == 80) && (photoByte[2] == 78) && (photoByte[3] == 71)) {
+            strFileExtendName = "PNG";
+        }
+        return strFileExtendName;
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/UserContext.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/UserContext.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/UserContext.java
new file mode 100644
--- /dev/null	(date 1726310283760)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/UserContext.java	(date 1726310283760)
@@ -0,0 +1,30 @@
+package leyramu.qinian.asc.common.base.utils;
+
+public class UserContext {
+    private static final ThreadLocal<Long> tl = new ThreadLocal<>();
+
+    /**
+     * 获取当前登录用户信息
+     *
+     * @return 用户id
+     */
+    public static Long getUser() {
+        return tl.get();
+    }
+
+    /**
+     * 保存当前登录用户信息到ThreadLocal
+     *
+     * @param userId 用户id
+     */
+    public static void setUser(Long userId) {
+        tl.set(userId);
+    }
+
+    /**
+     * 移除当前登录用户信息
+     */
+    public static void removeUser() {
+        tl.remove();
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/ImageUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/ImageUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/ImageUtils.java
new file mode 100644
--- /dev/null	(date 1726288143494)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/ImageUtils.java	(date 1726288143494)
@@ -0,0 +1,101 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.file;
+
+import org.apache.poi.util.IOUtils;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+import java.io.ByteArrayInputStream;
+import java.io.InputStream;
+import java.net.URL;
+import java.net.URLConnection;
+import java.util.Arrays;
+
+/**
+ * 图片处理工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class ImageUtils {
+
+    /**
+     * 日志
+     */
+    private static final Logger log = LoggerFactory.getLogger(ImageUtils.class);
+
+    /**
+     * 获取图片路径
+     *
+     * @param imagePath 图片路径
+     * @return 图片路径
+     */
+    public static byte[] getImage(String imagePath) {
+        InputStream is = getFile(imagePath);
+        try {
+            if (is != null) {
+                return IOUtils.toByteArray(is);
+            }
+        } catch (Exception e) {
+            log.error("图片加载异常", e);
+            return null;
+        } finally {
+            IOUtils.closeQuietly(is);
+        }
+        return null;
+    }
+
+    /**
+     * 获取图片路径
+     *
+     * @param imagePath 图片路径
+     * @return 图片路径
+     */
+    public static InputStream getFile(String imagePath) {
+        try {
+            byte[] result = readFile(imagePath);
+            if (result != null) {
+                result = Arrays.copyOf(result, result.length);
+            }
+            if (result != null) {
+                return new ByteArrayInputStream(result);
+            }
+        } catch (Exception e) {
+            log.error("获取图片异常", e);
+        }
+        return null;
+    }
+
+    /**
+     * 读取文件为字节数据
+     *
+     * @param url 地址
+     * @return 字节数据
+     */
+    public static byte[] readFile(String url) {
+        InputStream in = null;
+        try {
+            // 网络地址
+            URL urlObj = new URL(url);
+            URLConnection urlConnection = urlObj.openConnection();
+            urlConnection.setConnectTimeout(30 * 1000);
+            urlConnection.setReadTimeout(60 * 1000);
+            urlConnection.setDoInput(true);
+            in = urlConnection.getInputStream();
+            return IOUtils.toByteArray(in);
+        } catch (Exception e) {
+            log.error("访问文件异常", e);
+            return null;
+        } finally {
+            IOUtils.closeQuietly(in);
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/FileUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/FileUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/FileUtils.java
new file mode 100644
--- /dev/null	(date 1726288143252)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/file/FileUtils.java	(date 1726288143252)
@@ -0,0 +1,231 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.file;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.OutputStream;
+import java.io.UnsupportedEncodingException;
+import java.net.URLEncoder;
+import java.nio.charset.StandardCharsets;
+
+import jakarta.servlet.http.HttpServletRequest;
+import jakarta.servlet.http.HttpServletResponse;
+import lombok.extern.slf4j.Slf4j;
+import org.apache.commons.lang3.ArrayUtils;
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+
+/**
+ * 文件处理工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Slf4j
+public class FileUtils {
+
+    /**
+     * 字符常量：斜杠 {@code '/'}
+     */
+    public static final char SLASH = '/';
+
+    /**
+     * 字符常量：反斜杠 {@code '\\'}
+     */
+    public static final char BACKSLASH = '\\';
+
+    public static String FILENAME_PATTERN = "[a-zA-Z0-9_\\-|.\\u4e00-\\u9fa5]+";
+
+    /**
+     * 输出指定文件的byte数组
+     *
+     * @param filePath 文件路径
+     * @param os       输出流
+     * @return
+     */
+    public static void writeBytes(String filePath, OutputStream os) throws IOException {
+        FileInputStream fis = null;
+        try {
+            File file = new File(filePath);
+            if (!file.exists()) {
+                throw new FileNotFoundException(filePath);
+            }
+            fis = new FileInputStream(file);
+            byte[] b = new byte[1024];
+            int length;
+            while ((length = fis.read(b)) > 0) {
+                os.write(b, 0, length);
+            }
+        } catch (IOException e) {
+            throw e;
+        } finally {
+            if (os != null) {
+                try {
+                    os.close();
+                } catch (IOException e1) {
+                    log.error("文件下载失败", e1);
+                }
+            }
+            if (fis != null) {
+                try {
+                    fis.close();
+                } catch (IOException e1) {
+                    log.error("文件下载失败", e1);
+                }
+            }
+        }
+    }
+
+    /**
+     * 删除文件
+     *
+     * @param filePath 文件
+     * @return
+     */
+    public static boolean deleteFile(String filePath) {
+        boolean flag = false;
+        File file = new File(filePath);
+        // 路径为文件且不为空则进行删除
+        if (file.isFile() && file.exists()) {
+            flag = file.delete();
+        }
+        return flag;
+    }
+
+    /**
+     * 文件名称验证
+     *
+     * @param filename 文件名称
+     * @return true 正常 false 非法
+     */
+    public static boolean isValidFilename(String filename) {
+        return filename.matches(FILENAME_PATTERN);
+    }
+
+    /**
+     * 检查文件是否可下载
+     *
+     * @param resource 需要下载的文件
+     * @return true 正常 false 非法
+     */
+    public static boolean checkAllowDownload(String resource) {
+        // 禁止目录上跳级别
+        if (StringUtils.contains(resource, "..")) {
+            return false;
+        }
+        // 判断是否在允许下载的文件规则内
+        return ArrayUtils.contains(MimeTypeUtils.DEFAULT_ALLOWED_EXTENSION, FileTypeUtils.getFileType(resource));
+    }
+
+    /**
+     * 下载文件名重新编码
+     *
+     * @param request  请求对象
+     * @param fileName 文件名
+     * @return 编码后的文件名
+     */
+    public static String setFileDownloadHeader(HttpServletRequest request, String fileName) throws UnsupportedEncodingException {
+        final String agent = request.getHeader("USER-AGENT");
+        String filename = fileName;
+        if (agent.contains("MSIE")) {
+            // IE浏览器
+            filename = URLEncoder.encode(filename, StandardCharsets.UTF_8);
+            filename = filename.replace("+", " ");
+        } else if (agent.contains("Firefox")) {
+            // 火狐浏览器
+            filename = new String(fileName.getBytes(), "ISO8859-1");
+        } else if (agent.contains("Chrome")) {
+            // google浏览器
+            filename = URLEncoder.encode(filename, StandardCharsets.UTF_8);
+        } else {
+            // 其它浏览器
+            filename = URLEncoder.encode(filename, StandardCharsets.UTF_8);
+        }
+        return filename;
+    }
+
+    /**
+     * 返回文件名
+     *
+     * @param filePath 文件
+     * @return 文件名
+     */
+    public static String getName(String filePath) {
+        if (null == filePath) {
+            return null;
+        }
+        int len = filePath.length();
+        if (0 == len) {
+            return filePath;
+        }
+        if (isFileSeparator(filePath.charAt(len - 1))) {
+            // 以分隔符结尾的去掉结尾分隔符
+            len--;
+        }
+
+        int begin = 0;
+        char c;
+        for (int i = len - 1; i > -1; i--) {
+            c = filePath.charAt(i);
+            if (isFileSeparator(c)) {
+                // 查找最后一个路径分隔符（/或者\）
+                begin = i + 1;
+                break;
+            }
+        }
+
+        return filePath.substring(begin, len);
+    }
+
+    /**
+     * 是否为Windows或者Linux（Unix）文件分隔符<br>
+     * Windows平台下分隔符为\，Linux（Unix）为/
+     *
+     * @param c 字符
+     * @return 是否为Windows或者Linux（Unix）文件分隔符
+     */
+    public static boolean isFileSeparator(char c) {
+        return SLASH == c || BACKSLASH == c;
+    }
+
+    /**
+     * 下载文件名重新编码
+     *
+     * @param response     响应对象
+     * @param realFileName 真实文件名
+     * @return
+     */
+    public static void setAttachmentResponseHeader(HttpServletResponse response, String realFileName) throws UnsupportedEncodingException {
+        String percentEncodedFileName = percentEncode(realFileName);
+
+        String contentDispositionValue = "attachment; filename=" +
+                percentEncodedFileName +
+                ";" +
+                "filename*=" +
+                "utf-8''" +
+                percentEncodedFileName;
+
+        response.setHeader("Content-disposition", contentDispositionValue);
+        response.setHeader("download-filename", percentEncodedFileName);
+    }
+
+    /**
+     * 百分号编码工具方法
+     *
+     * @param s 需要百分号编码的字符串
+     * @return 百分号编码后的字符串
+     */
+    public static String percentEncode(String s) throws UnsupportedEncodingException {
+        String encode = URLEncoder.encode(s, StandardCharsets.UTF_8);
+        return encode.replaceAll("\\+", "%20");
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/Base64Util.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/Base64Util.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/Base64Util.java
new file mode 100644
--- /dev/null	(date 1726310283661)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/Base64Util.java	(date 1726310283661)
@@ -0,0 +1,99 @@
+package leyramu.qinian.asc.common.base.utils;
+
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.InputStream;
+import java.util.Base64;
+
+public class Base64Util {
+
+    /***
+     * 普通解密操作
+     * @param encodedText：密文
+     * @return
+     */
+    public static byte[] decode(String encodedText) {
+        final Base64.Decoder decoder = Base64.getDecoder();
+        return decoder.decode(encodedText);
+    }
+
+    /***
+     * 普通加密操作
+     * @param data
+     * @return
+     */
+    public static String encode(byte[] data) {
+        final Base64.Encoder encoder = Base64.getEncoder();
+        return encoder.encodeToString(data);
+    }
+
+    /***
+     * 解密操作
+     * @param encodedText
+     * @return
+     */
+    public static byte[] decodeURL(String encodedText) {
+        final Base64.Decoder decoder = Base64.getUrlDecoder();
+        return decoder.decode(encodedText);
+    }
+
+    /***
+     * 加密操作
+     * @param data
+     * @return
+     */
+    public static String encodeURL(byte[] data) {
+        final Base64.Encoder encoder = Base64.getUrlEncoder();
+        return encoder.encodeToString(data);
+    }
+
+    /**
+     * 判断是否是base64编码
+     *
+     * @param imageCode
+     * @return
+     */
+    public static boolean isValidBase64(String imageCode) {
+        if (imageCode == null || imageCode.isEmpty()) {
+            return false;
+        }
+        try {
+            // Decode the string to see if it is a valid Base64 encoded string
+            Base64.getDecoder().decode(imageCode);
+            return true;
+        } catch (IllegalArgumentException e) {
+            return false;
+        }
+    }
+
+    /**
+     * 图片的base编码
+     *
+     * @param imageFile 图片file格式
+     * @return
+     */
+    public static String encodeImageToBase64(File imageFile, Boolean urlEncode) {
+        // 将图片文件转化为字节数组字符串，并对其进行Base64编码处理
+        // 其进行Base64编码处理
+        byte[] data = null;
+        // 读取图片字节数组
+        try {
+            InputStream in = new FileInputStream(imageFile);
+            data = new byte[in.available()];
+            in.read(data);
+            in.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        // 对字节数组Base64编码
+        if (!urlEncode) {
+            final Base64.Encoder encoder = Base64.getEncoder();
+            return encoder.encodeToString(data);
+        }
+
+        final Base64.Encoder encoder = Base64.getUrlEncoder();
+        // 返回Base64编码过的字节数组字符串
+        return encoder.encodeToString(data);
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/CollUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/CollUtils.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/CollUtils.java
new file mode 100644
--- /dev/null	(date 1726310283643)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/CollUtils.java	(date 1726310283643)
@@ -0,0 +1,73 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import cn.hutool.core.collection.CollectionUtil;
+import cn.hutool.core.collection.IterUtil;
+import cn.hutool.core.util.NumberUtil;
+
+import java.util.*;
+import java.util.stream.Collectors;
+
+/**
+ * 继承自 hutool 的集合工具类
+ */
+public class CollUtils extends CollectionUtil {
+
+    public static <T> List<T> emptyList() {
+        return Collections.emptyList();
+    }
+
+    public static <T> Set<T> emptySet() {
+        return Collections.emptySet();
+    }
+
+    public static <K, V> Map<K, V> emptyMap() {
+        return Collections.emptyMap();
+    }
+
+    public static <T> Set<T> singletonSet(T t) {
+        return Collections.singleton(t);
+    }
+
+    public static <T> List<T> singletonList(T t) {
+        return Collections.singletonList(t);
+    }
+
+    public static List<Integer> convertToInteger(List<String> originList) {
+        return CollUtils.isNotEmpty(originList) ? originList.stream().map(NumberUtil::parseInt).collect(Collectors.toList()) : null;
+    }
+
+    public static List<Long> convertToLong(List<String> originLIst) {
+        return CollUtils.isNotEmpty(originLIst) ? originLIst.stream().map(NumberUtil::parseLong).collect(Collectors.toList()) : null;
+    }
+
+    /**
+     * 以 conjunction 为分隔符将集合转换为字符串 如果集合元素为数组、Iterable或Iterator，则递归组合其为字符串
+     *
+     * @param collection  集合
+     * @param conjunction 分隔符
+     * @param <T>         集合元素类型
+     * @return 连接后的字符串
+     * See Also: IterUtil.join(Iterator, CharSequence)
+     */
+    public static <T> String join(Collection<T> collection, CharSequence conjunction) {
+        if (null == collection || collection.isEmpty()) {
+            return null;
+        }
+        return IterUtil.join(collection.iterator(), conjunction);
+    }
+
+    public static <T> String joinIgnoreNull(Collection<T> collection, CharSequence conjunction) {
+        if (null == collection || collection.isEmpty()) {
+            return null;
+        }
+        StringBuilder sb = new StringBuilder();
+        for (T t : collection) {
+            if (t == null) continue;
+            sb.append(t).append(",");
+        }
+        if (sb.length() <= 0) {
+            return null;
+        }
+        return sb.deleteCharAt(sb.length() - 1).toString();
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/BeanUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/BeanUtils.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/BeanUtils.java
new file mode 100644
--- /dev/null	(date 1726310283688)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/BeanUtils.java	(date 1726310283688)
@@ -0,0 +1,60 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import cn.hutool.core.bean.BeanUtil;
+
+import java.util.List;
+import java.util.stream.Collectors;
+
+/**
+ * 继承自 hutool 的BeanUtil，增加了bean转换时自定义转换器的功能
+ */
+public class BeanUtils extends BeanUtil {
+
+    /**
+     * 将原对象转换成目标对象，对于字段不匹配的字段可以使用转换器处理
+     *
+     * @param source  原对象
+     * @param clazz   目标对象的class
+     * @param convert 转换器
+     * @param <R>     原对象类型
+     * @param <T>     目标对象类型
+     * @return 目标对象
+     */
+    public static <R, T> T copyBean(R source, Class<T> clazz, Convert<R, T> convert) {
+        T target = copyBean(source, clazz);
+        if (convert != null) {
+            convert.convert(source, target);
+        }
+        return target;
+    }
+
+    /**
+     * 将原对象转换成目标对象，对于字段不匹配的字段可以使用转换器处理
+     *
+     * @param source 原对象
+     * @param clazz  目标对象的class
+     * @param <R>    原对象类型
+     * @param <T>    目标对象类型
+     * @return 目标对象
+     */
+    public static <R, T> T copyBean(R source, Class<T> clazz) {
+        if (source == null) {
+            return null;
+        }
+        return toBean(source, clazz);
+    }
+
+    public static <R, T> List<T> copyList(List<R> list, Class<T> clazz) {
+        if (list == null || list.size() == 0) {
+            return CollUtils.emptyList();
+        }
+        return copyToList(list, clazz);
+    }
+
+    public static <R, T> List<T> copyList(List<R> list, Class<T> clazz, Convert<R, T> convert) {
+        if (list == null || list.size() == 0) {
+            return CollUtils.emptyList();
+        }
+        return list.stream().map(r -> copyBean(r, clazz, convert)).collect(Collectors.toList());
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/bean/BeanValidators.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/bean/BeanValidators.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/bean/BeanValidators.java
new file mode 100644
--- /dev/null	(date 1726288143299)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/bean/BeanValidators.java	(date 1726288143299)
@@ -0,0 +1,41 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.bean;
+
+import jakarta.validation.ConstraintViolation;
+import jakarta.validation.ConstraintViolationException;
+import jakarta.validation.Validator;
+
+import java.util.Set;
+
+/**
+ * bean对象属性验证
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class BeanValidators {
+
+    /**
+     * 验证对象
+     *
+     * @param object 待验证对象
+     * @param groups 验证组
+     * @throws ConstraintViolationException 验证不通过异常
+     */
+    public static void validateWithException(Validator validator, Object object, Class<?>... groups)
+            throws ConstraintViolationException {
+        Set<ConstraintViolation<Object>> constraintViolations = validator.validate(object, groups);
+        if (!constraintViolations.isEmpty()) {
+            throw new ConstraintViolationException(constraintViolations);
+        }
+    }
+}
+
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/DateUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/DateUtil.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/DateUtil.java
new file mode 100644
--- /dev/null	(date 1726310283746)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/DateUtil.java	(date 1726310283746)
@@ -0,0 +1,18 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import java.util.Date;
+
+public class DateUtil {
+    public static int getSecondTimestamp(Date date) {
+        if (null == date) {
+            return 0;
+        }
+        String timestamp = String.valueOf(date.getTime());
+        int length = timestamp.length();
+        if (length > 3) {
+            return Integer.valueOf(timestamp.substring(0, length - 3));
+        } else {
+            return 0;
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/bean/BeanUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/bean/BeanUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/bean/BeanUtils.java
new file mode 100644
--- /dev/null	(date 1726288143590)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/bean/BeanUtils.java	(date 1726288143590)
@@ -0,0 +1,118 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils.bean;
+
+import lombok.extern.slf4j.Slf4j;
+
+import java.lang.reflect.Method;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/**
+ * Bean 工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Slf4j
+public class BeanUtils extends org.springframework.beans.BeanUtils {
+
+    /**
+     * Bean方法名中属性名开始的下标
+     */
+    private static final int BEAN_METHOD_PROP_INDEX = 3;
+
+    /**
+     * 匹配getter方法的正则表达式
+     */
+    private static final Pattern GET_PATTERN = Pattern.compile("get(\\p{javaUpperCase}\\w*)");
+
+    /**
+     * 匹配setter方法的正则表达式
+     */
+    private static final Pattern SET_PATTERN = Pattern.compile("set(\\p{javaUpperCase}\\w*)");
+
+    /**
+     * Bean属性复制工具方法。
+     *
+     * @param dest 目标对象
+     * @param src  源对象
+     */
+    public static void copyBeanProp(Object dest, Object src) {
+        try {
+            copyProperties(src, dest);
+        } catch (Exception e) {
+            log.error("Bean属性复制出错!", e);
+        }
+    }
+
+    /**
+     * 获取对象的setter方法。
+     *
+     * @param obj 对象
+     * @return 对象的setter方法列表
+     */
+    public static List<Method> getSetterMethods(Object obj) {
+        // setter方法列表
+        List<Method> setterMethods = new ArrayList<>();
+
+        // 获取所有方法
+        Method[] methods = obj.getClass().getMethods();
+
+        // 查找setter方法
+
+        for (Method method : methods) {
+            Matcher m = SET_PATTERN.matcher(method.getName());
+            if (m.matches() && (method.getParameterTypes().length == 1)) {
+                setterMethods.add(method);
+            }
+        }
+        // 返回setter方法列表
+        return setterMethods;
+    }
+
+    /**
+     * 获取对象的getter方法。
+     *
+     * @param obj 对象
+     * @return 对象的getter方法列表
+     */
+
+    public static List<Method> getGetterMethods(Object obj) {
+        // getter方法列表
+        List<Method> getterMethods = new ArrayList<>();
+        // 获取所有方法
+        Method[] methods = obj.getClass().getMethods();
+        // 查找getter方法
+        for (Method method : methods) {
+            Matcher m = GET_PATTERN.matcher(method.getName());
+            if (m.matches() && (method.getParameterTypes().length == 0)) {
+                getterMethods.add(method);
+            }
+        }
+        // 返回getter方法列表
+        return getterMethods;
+    }
+
+    /**
+     * 检查Bean方法名中的属性名是否相等。<br>
+     * 如getName()和setName()属性名一样，getName()和setAge()属性名不一样。
+     *
+     * @param m1 方法名1
+     * @param m2 方法名2
+     * @return 属性名一样返回true，否则返回false
+     */
+
+    public static boolean isMethodPropEquals(String m1, String m2) {
+        return m1.substring(BEAN_METHOD_PROP_INDEX).equals(m2.substring(BEAN_METHOD_PROP_INDEX));
+    }
+}
Index: asc-java/asc-common/asc-common-redis/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-redis/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-redis/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1726310617673)
+++ b/asc-java/asc-common/asc-common-redis/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1726310617673)
@@ -0,0 +1,10 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.qinian.asc.common.redis.config.RedisConfig
+leyramu.qinian.asc.common.redis.service.RedisService
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/QCCUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/QCCUtil.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/QCCUtil.java
new file mode 100644
--- /dev/null	(date 1726310283755)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/utils/QCCUtil.java	(date 1726310283755)
@@ -0,0 +1,85 @@
+package leyramu.qinian.asc.common.base.utils;
+
+import org.apache.http.client.methods.CloseableHttpResponse;
+import org.apache.http.client.methods.HttpGet;
+import org.apache.http.client.utils.URIBuilder;
+import org.apache.http.impl.client.CloseableHttpClient;
+import org.apache.http.impl.client.HttpClients;
+import org.apache.http.util.EntityUtils;
+import org.json.JSONException;
+import org.json.JSONObject;
+import leyramu.qinian.asc.common.base.entity.BusinessLicInfo;
+
+import java.io.IOException;
+import java.net.URI;
+import java.util.Date;
+
+public class QCCUtil {
+    private static final String key = "570131fb14a543ab96ca08f61891e169";
+    private static final String secret = "99F1E778C654B4E1A3AF8AEF64EDB063";
+
+    private static String getUrl(BusinessLicInfo businessLicInfo) {
+
+        return "http://api.qichacha.com/ECIMatch/CompanyVerify?key=" + key + "&dtype=json" + "&regNo=" + businessLicInfo.getCreditId()
+                + "&companyName=" + businessLicInfo.getCompanyName() + "&frname=" + businessLicInfo.getCeo();
+    }
+
+    public static String request(BusinessLicInfo businessLicInfo) {
+        String url = getUrl(businessLicInfo);
+
+        int timestamp = DateUtil.getSecondTimestamp(new Date());
+        String token = MD5.md5(key + timestamp + secret);
+
+        // 创建Httpclient对象
+        CloseableHttpClient httpclient = HttpClients.createDefault();
+
+        String resultString = "";
+        CloseableHttpResponse response = null;
+        try {
+            // 创建uri
+            URIBuilder builder = new URIBuilder(url);
+
+
+            URI uri = builder.build();
+            // 创建http GET请求
+            HttpGet httpGet = new HttpGet(uri);
+            //添加header 头
+            httpGet.setHeader("Token", token);
+            httpGet.setHeader("Timespan", String.valueOf(timestamp));
+            // 执行请求
+            response = httpclient.execute(httpGet);
+            // 判断返回状态是否为200
+            if (response.getStatusLine().getStatusCode() == 200) {
+                resultString = EntityUtils.toString(response.getEntity(), "UTF-8");
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            try {
+                if (response != null) {
+                    response.close();
+                }
+                httpclient.close();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+        return resultString;
+    }
+
+    public static Boolean check(String resultString) {
+        try {
+            JSONObject jsonObject = new JSONObject(resultString);
+            // 检查"Result"键对应的值是否为null
+            if (jsonObject.isNull("Result")) {
+                return false;
+            } else {
+                return true;
+            }
+        } catch (JSONException e) {
+            // 处理异常，例如JSON格式错误
+            e.printStackTrace();
+            return false;
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotPermissionException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotPermissionException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotPermissionException.java
new file mode 100644
--- /dev/null	(date 1726288143471)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotPermissionException.java	(date 1726288143471)
@@ -0,0 +1,47 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.auth;
+
+import org.apache.commons.lang3.StringUtils;
+
+import java.io.Serial;
+
+/**
+ * 未能通过的权限认证异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class NotPermissionException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 构造方法
+     *
+     * @param permission 权限标识
+     */
+    public NotPermissionException(String permission) {
+        super(permission);
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param permissions 权限标识组
+     */
+    public NotPermissionException(String[] permissions) {
+        super(StringUtils.join(permissions, ","));
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotLoginException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotLoginException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotLoginException.java
new file mode 100644
--- /dev/null	(date 1726288143586)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotLoginException.java	(date 1726288143586)
@@ -0,0 +1,39 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.auth;
+
+import lombok.AllArgsConstructor;
+
+import java.io.Serial;
+
+/**
+ * 未能通过的登录认证异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@AllArgsConstructor
+public class NotLoginException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 构造方法
+     *
+     * @param message 异常消息
+     */
+    public NotLoginException(String message) {
+        super(message);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotRoleException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotRoleException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotRoleException.java
new file mode 100644
--- /dev/null	(date 1726288143241)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/auth/NotRoleException.java	(date 1726288143241)
@@ -0,0 +1,47 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.auth;
+
+import org.apache.commons.lang3.StringUtils;
+
+import java.io.Serial;
+
+/**
+ * 未能通过的角色认证异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class NotRoleException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 构造方法
+     *
+     * @param role 角色
+     */
+    public NotRoleException(String role) {
+        super(role);
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param roles 角色组
+     */
+    public NotRoleException(String[] roles) {
+        super(StringUtils.join(roles, ","));
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/job/TaskException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/job/TaskException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/job/TaskException.java
new file mode 100644
--- /dev/null	(date 1726288143204)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/job/TaskException.java	(date 1726288143204)
@@ -0,0 +1,93 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.job;
+
+import lombok.Getter;
+
+import java.io.Serial;
+
+/**
+ * 计划策略异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Getter
+public class TaskException extends Exception {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 异常编码
+     */
+    private final Code code;
+
+    /**
+     * 任务异常
+     *
+     * @param msg  异常消息
+     * @param code 异常编码
+     */
+    public TaskException(String msg, Code code) {
+        this(msg, code, null);
+    }
+
+    /**
+     * 任务异常
+     *
+     * @param msg      异常消息
+     * @param code     异常编码
+     * @param nestedEx 异常
+     */
+    public TaskException(String msg, Code code, Exception nestedEx) {
+        super(msg, nestedEx);
+        this.code = code;
+    }
+
+    /**
+     * 异常编码
+     */
+    public enum Code {
+
+        /**
+         * 任务已经存在
+         */
+        TASK_EXISTS,
+
+        /**
+         * 任务不存在
+         */
+        NO_TASK_EXISTS,
+
+        /**
+         * 任务已经启动
+         */
+        TASK_ALREADY_STARTED,
+
+        /**
+         * 任务没有启动
+         */
+        UNKNOWN,
+
+        /**
+         * 任务配置错误
+         */
+        CONFIG_ERROR,
+
+        /**
+         * 任务节点不可用
+         */
+        TASK_NODE_NOT_AVAILABLE
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/ServiceNameConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/ServiceNameConstants.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/ServiceNameConstants.java
new file mode 100644
--- /dev/null	(date 1726288143364)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/ServiceNameConstants.java	(date 1726288143364)
@@ -0,0 +1,34 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.constant;
+
+/**
+ * 服务名称
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class ServiceNameConstants {
+
+    /**
+     * 认证服务的serviceId
+     */
+    public static final String AUTH_SERVICE = "digEdu-service-auth";
+
+    /**
+     * 系统模块的serviceId
+     */
+    public static final String SYSTEM_SERVICE = "digEdu-service-system";
+
+    /**
+     * 文件服务的serviceId
+     */
+    public static final String FILE_SERVICE = "digEdu-service-file";
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileNameLengthLimitExceededException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileNameLengthLimitExceededException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileNameLengthLimitExceededException.java
new file mode 100644
--- /dev/null	(date 1726288143601)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileNameLengthLimitExceededException.java	(date 1726288143601)
@@ -0,0 +1,36 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.file;
+
+import java.io.Serial;
+
+/**
+ * 文件名称超长限制异常类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class FileNameLengthLimitExceededException extends FileException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 构造方法
+     *
+     * @param defaultFileNameLength 默认文件名长度
+     */
+    public FileNameLengthLimitExceededException(int defaultFileNameLength) {
+        super("upload.filename.exceed.length", new Object[]{defaultFileNameLength}, "the filename is too long");
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileSizeLimitExceededException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileSizeLimitExceededException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileSizeLimitExceededException.java
new file mode 100644
--- /dev/null	(date 1726288143439)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileSizeLimitExceededException.java	(date 1726288143439)
@@ -0,0 +1,36 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.file;
+
+import java.io.Serial;
+
+/**
+ * 文件名大小限制异常类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class FileSizeLimitExceededException extends FileException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 构造方法
+     *
+     * @param defaultMaxSize 默认最大大小
+     */
+    public FileSizeLimitExceededException(long defaultMaxSize) {
+        super("upload.exceed.maxSize", new Object[]{defaultMaxSize}, "the filesize is too large");
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/InvalidExtensionException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/InvalidExtensionException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/InvalidExtensionException.java
new file mode 100644
--- /dev/null	(date 1726288143402)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/InvalidExtensionException.java	(date 1726288143402)
@@ -0,0 +1,152 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.file;
+
+import lombok.Getter;
+
+import java.io.Serial;
+import java.util.Arrays;
+
+/**
+ * 文件上传 误异常类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Getter
+public class InvalidExtensionException extends FileUploadException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 文件扩展名错误
+     */
+    private final String[] allowedExtension;
+
+    /**
+     * 文件扩展名错误
+     */
+    private final String extension;
+
+    /**
+     * 文件名
+     */
+    private final String filename;
+
+    /**
+     * 构造方法
+     *
+     * @param allowedExtension 允许的扩展名
+     * @param extension        扩展名
+     * @param filename         文件名
+     */
+    public InvalidExtensionException(String[] allowedExtension, String extension, String filename) {
+        super("filename : [" + filename + "], extension : [" + extension + "], allowed extension : [" + Arrays.toString(allowedExtension) + "]");
+        this.allowedExtension = allowedExtension;
+        this.extension = extension;
+        this.filename = filename;
+    }
+
+    /**
+     * 图片扩展名错误
+     */
+    public static class InvalidImageExtensionException extends InvalidExtensionException {
+
+        /**
+         * 序列化
+         */
+        @Serial
+        private static final long serialVersionUID = 1L;
+
+        /**
+         * 构造方法
+         *
+         * @param allowedExtension 允许的扩展名
+         * @param extension        扩展名
+         * @param filename         文件名
+         */
+        public InvalidImageExtensionException(String[] allowedExtension, String extension, String filename) {
+            super(allowedExtension, extension, filename);
+        }
+    }
+
+    /**
+     * 音频扩展名错误
+     */
+    public static class InvalidFlashExtensionException extends InvalidExtensionException {
+
+        /**
+         * 序列化
+         */
+        @Serial
+        private static final long serialVersionUID = 1L;
+
+        /**
+         * 构造方法
+         *
+         * @param allowedExtension 允许的扩展名
+         * @param extension        扩展名
+         * @param filename         文件名
+         */
+        public InvalidFlashExtensionException(String[] allowedExtension, String extension, String filename) {
+            super(allowedExtension, extension, filename);
+        }
+    }
+
+    /**
+     * 媒体扩展名错误
+     */
+    public static class InvalidMediaExtensionException extends InvalidExtensionException {
+
+        /**
+         * 序列化
+         */
+        @Serial
+        private static final long serialVersionUID = 1L;
+
+        /**
+         * 构造方法
+         *
+         * @param allowedExtension 允许的扩展名
+         * @param extension        扩展名
+         * @param filename         文件名
+         */
+        public InvalidMediaExtensionException(String[] allowedExtension, String extension, String filename) {
+            super(allowedExtension, extension, filename);
+        }
+    }
+
+    /**
+     * 视频扩展名错误
+     */
+    public static class InvalidVideoExtensionException extends InvalidExtensionException {
+
+        /**
+         * 序列化
+         */
+        @Serial
+        private static final long serialVersionUID = 1L;
+
+        /**
+         * 构造方法
+         *
+         * @param allowedExtension 允许的扩展名
+         * @param extension        扩展名
+         * @param filename         文件名
+         */
+        public InvalidVideoExtensionException(String[] allowedExtension, String extension, String filename) {
+            super(allowedExtension, extension, filename);
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileUploadException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileUploadException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileUploadException.java
new file mode 100644
--- /dev/null	(date 1726288143417)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileUploadException.java	(date 1726288143417)
@@ -0,0 +1,99 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.file;
+
+import java.io.PrintStream;
+import java.io.PrintWriter;
+import java.io.Serial;
+
+/**
+ * 文件上传异常类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class FileUploadException extends Exception {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 异常堆栈
+     */
+    private final Throwable cause;
+
+    /**
+     * 构造函数
+     */
+    public FileUploadException() {
+        this(null, null);
+    }
+
+    /**
+     * 构造函数
+     *
+     * @param msg 异常信息
+     */
+    public FileUploadException(final String msg) {
+        this(msg, null);
+    }
+
+    /**
+     * 构造函数
+     *
+     * @param msg   异常信息
+     * @param cause 异常堆栈
+     */
+    public FileUploadException(String msg, Throwable cause) {
+        super(msg);
+        this.cause = cause;
+    }
+
+    /**
+     * 输出异常堆栈信息
+     *
+     * @param stream 输出流
+     */
+    @Override
+    public void printStackTrace(PrintStream stream) {
+        super.printStackTrace(stream);
+        if (cause != null) {
+            stream.println("Caused by:");
+            cause.printStackTrace(stream);
+        }
+    }
+
+    /**
+     * 输出异常堆栈信息
+     *
+     * @param writer 输出流
+     */
+    @Override
+    public void printStackTrace(PrintWriter writer) {
+        super.printStackTrace(writer);
+        if (cause != null) {
+            writer.println("Caused by:");
+            cause.printStackTrace(writer);
+        }
+    }
+
+    /**
+     * 获取异常堆栈信息
+     *
+     * @return 异常堆栈信息
+     */
+    @Override
+    public Throwable getCause() {
+        return cause;
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileException.java
new file mode 100644
--- /dev/null	(date 1726288143480)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/file/FileException.java	(date 1726288143480)
@@ -0,0 +1,40 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.file;
+
+import leyramu.qinian.asc.common.core.exception.base.BaseException;
+
+import java.io.Serial;
+
+/**
+ * 文件信息异常类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class FileException extends BaseException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 构造函数
+     *
+     * @param code 异常码
+     * @param args 异常参数
+     * @param msg  异常信息
+     */
+    public FileException(String code, Object[] args, String msg) {
+        super("file", code, args, msg);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/base/BaseException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/base/BaseException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/base/BaseException.java
new file mode 100644
--- /dev/null	(date 1726288143423)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/base/BaseException.java	(date 1726288143423)
@@ -0,0 +1,92 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.base;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+
+import java.io.Serial;
+
+/**
+ * 基础异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Getter
+@AllArgsConstructor
+public class BaseException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 所属模块
+     */
+    private final String module;
+
+    /**
+     * 错误码
+     */
+    private final String code;
+
+    /**
+     * 错误码对应的参数
+     */
+    private final Object[] args;
+
+    /**
+     * 错误消息
+     */
+    private final String defaultMessage;
+
+    /**
+     * 构造方法
+     *
+     * @param module 模块
+     * @param code   错误码
+     * @param args   错误码对应的参数
+     */
+    public BaseException(String module, String code, Object[] args) {
+        this(module, code, args, null);
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param module         模块
+     * @param defaultMessage 默认消息
+     */
+    public BaseException(String module, String defaultMessage) {
+        this(module, null, null, defaultMessage);
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param code 错误码
+     * @param args 错误码对应的参数
+     */
+    public BaseException(String code, Object[] args) {
+        this(null, code, args, null);
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param defaultMessage 默认消息
+     */
+    public BaseException(String defaultMessage) {
+        this(null, null, null, defaultMessage);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/context/SecurityContextHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/context/SecurityContextHolder.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/context/SecurityContextHolder.java
new file mode 100644
--- /dev/null	(date 1726288143379)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/context/SecurityContextHolder.java	(date 1726288143379)
@@ -0,0 +1,168 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.context;
+
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+
+import com.alibaba.ttl.TransmittableThreadLocal;
+import leyramu.qinian.asc.common.core.constant.SecurityConstants;
+import leyramu.qinian.asc.common.core.text.Convert;
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+
+/**
+ * 获取当前线程变量中的 用户id、用户名称、Token等信息
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class SecurityContextHolder {
+
+    /**
+     * 获取当前线程变量中的 用户id
+     */
+    private static final TransmittableThreadLocal<Map<String, Object>> THREAD_LOCAL = new TransmittableThreadLocal<>();
+
+    /**
+     * 设置当前线程变量中的 用户id
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public static void set(String key, Object value) {
+        Map<String, Object> map = getLocalMap();
+        map.put(key, value == null ? StringUtils.EMPTY : value);
+    }
+
+    /**
+     * 设置当前线程变量中的 用户id
+     *
+     * @param key 键
+     * @return 用户id
+     */
+    public static String get(String key) {
+        Map<String, Object> map = getLocalMap();
+        return Convert.toStr(map.getOrDefault(key, StringUtils.EMPTY));
+    }
+
+    /**
+     * 获取当前线程变量中的 用户id
+     *
+     * @param key   键
+     * @param clazz 默认值
+     * @return 用户id
+     */
+    public static <T> T get(String key, Class<T> clazz) {
+        Map<String, Object> map = getLocalMap();
+        return StringUtils.cast(map.getOrDefault(key, null));
+    }
+
+    /**
+     * 获取当前线程变量中的 用户id
+     *
+     * @return 用户id
+     */
+    public static Map<String, Object> getLocalMap() {
+        Map<String, Object> map = THREAD_LOCAL.get();
+        if (map == null) {
+            map = new ConcurrentHashMap<String, Object>();
+            THREAD_LOCAL.set(map);
+        }
+        return map;
+    }
+
+    /**
+     * 设置当前线程变量中的 用户id
+     *
+     * @param threadLocalMap 线程变量
+     */
+    public static void setLocalMap(Map<String, Object> threadLocalMap) {
+        THREAD_LOCAL.set(threadLocalMap);
+    }
+
+    /**
+     * 获取当前线程变量中的 用户id
+     *
+     * @return 用户id
+     */
+    public static Long getUserId() {
+        return Convert.toLong(get(SecurityConstants.DETAILS_USER_ID), 0L);
+    }
+
+    /**
+     * 设置当前线程变量中的 用户id
+     *
+     * @param account 账号
+     */
+    public static void setUserId(String account) {
+        set(SecurityConstants.DETAILS_USER_ID, account);
+    }
+
+    /**
+     * 获取当前线程变量中的 用户名
+     *
+     * @return 用户名
+     */
+    public static String getUserName() {
+        return get(SecurityConstants.DETAILS_USERNAME);
+    }
+
+    /**
+     * 设置当前线程变量中的 用户名
+     *
+     * @param username 用户名
+     */
+    public static void setUserName(String username) {
+        set(SecurityConstants.DETAILS_USERNAME, username);
+    }
+
+    /**
+     * 获取当前线程变量中的 用户key
+     *
+     * @return 用户id
+     */
+    public static String getUserKey() {
+        return get(SecurityConstants.USER_KEY);
+    }
+
+    /**
+     * 设置当前线程变量中的 用户 key
+     *
+     * @param userKey 用户id
+     */
+    public static void setUserKey(String userKey) {
+        set(SecurityConstants.USER_KEY, userKey);
+    }
+
+    /**
+     * 获取当前线程变量中的 权限
+     *
+     * @return 用户id
+     */
+    public static String getPermission() {
+        return get(SecurityConstants.ROLE_PERMISSION);
+    }
+
+    /**
+     * 设置当前线程变量中的 权限
+     *
+     * @param permissions 权限
+     */
+    public static void setPermission(String permissions) {
+        set(SecurityConstants.ROLE_PERMISSION, permissions);
+    }
+
+    /**
+     * 清理当前线程变量中的 用户id
+     */
+    public static void remove() {
+        THREAD_LOCAL.remove();
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/domain/R.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/domain/R.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/domain/R.java
new file mode 100644
--- /dev/null	(date 1726288143270)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/domain/R.java	(date 1726288143270)
@@ -0,0 +1,174 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.domain;
+
+import leyramu.qinian.asc.common.core.constant.Constants;
+import lombok.Data;
+
+import java.io.Serial;
+import java.io.Serializable;
+
+/**
+ * 响应信息主体
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Data
+public class R<T> implements Serializable {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 成功
+     */
+    public static final int SUCCESS = Constants.SUCCESS;
+
+    /**
+     * 失败
+     */
+    public static final int FAIL = Constants.FAIL;
+
+    /**
+     * 响应码
+     */
+    private int code;
+
+    /**
+     * 响应消息
+     */
+    private String msg;
+
+    /**
+     * 响应数据
+     */
+    private T data;
+
+    /**
+     * 响应成功的方法
+     *
+     * @return 响应信息
+     */
+    public static <T> R<T> ok() {
+        return restResult(null, SUCCESS, null);
+    }
+
+    /**
+     * 响应成功的方法
+     *
+     * @param data 响应数据
+     * @return 响应信息
+     */
+    public static <T> R<T> ok(T data) {
+        return restResult(data, SUCCESS, null);
+    }
+
+    /**
+     * 响应成功的方法
+     *
+     * @param data 响应数据
+     * @param msg  响应消息
+     * @return 响应信息
+     */
+    public static <T> R<T> ok(T data, String msg) {
+        return restResult(data, SUCCESS, msg);
+    }
+
+    /**
+     * 响应失败的方法
+     *
+     * @return 响应信息
+     */
+    public static <T> R<T> fail() {
+        return restResult(null, FAIL, null);
+    }
+
+    /**
+     * 响应失败的方法
+     *
+     * @param msg 响应消息
+     * @return 响应信息
+     */
+    public static <T> R<T> fail(String msg) {
+        return restResult(null, FAIL, msg);
+    }
+
+    /**
+     * 响应失败的方法
+     *
+     * @param data 响应数据
+     * @return 响应信息
+     */
+    public static <T> R<T> fail(T data) {
+        return restResult(data, FAIL, null);
+    }
+
+    /**
+     * 响应失败的方法
+     *
+     * @param data 响应数据
+     * @param msg  响应消息
+     * @return 响应信息
+     */
+    public static <T> R<T> fail(T data, String msg) {
+        return restResult(data, FAIL, msg);
+    }
+
+    /**
+     * 响应失败的方法
+     *
+     * @param code 响应码
+     * @param msg  响应消息
+     * @return 响应信息
+     */
+    public static <T> R<T> fail(int code, String msg) {
+        return restResult(null, code, msg);
+    }
+
+    /**
+     * 重置响应信息
+     *
+     * @param data 响应数据
+     * @param code 响应码
+     * @param msg  响应消息
+     * @return 响应信息
+     */
+    private static <T> R<T> restResult(T data, int code, String msg) {
+        R<T> apiResult = new R<>();
+        apiResult.setCode(code);
+        apiResult.setData(data);
+        apiResult.setMsg(msg);
+        return apiResult;
+    }
+
+    /**
+     * 判断是否成功
+     *
+     * @param ret 响应信息
+     * @return 是否成功
+     */
+    public static <T> Boolean isError(R<T> ret) {
+        return !isSuccess(ret);
+    }
+
+    /**
+     * 判断是否成功
+     *
+     * @param ret 响应信息
+     * @return 是否成功
+     */
+    public static <T> Boolean isSuccess(R<T> ret) {
+        return R.SUCCESS == ret.getCode();
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ExceptionUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ExceptionUtil.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ExceptionUtil.java
new file mode 100644
--- /dev/null	(date 1726288143594)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ExceptionUtil.java	(date 1726288143594)
@@ -0,0 +1,55 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils;
+
+import org.apache.commons.lang3.exception.ExceptionUtils;
+
+import java.io.PrintWriter;
+import java.io.StringWriter;
+
+/**
+ * 错误信息处理类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class ExceptionUtil {
+
+    /**
+     * 获取exception的详细错误信息
+     *
+     * @param e 异常
+     * @return 详细错误信息
+     */
+    public static String getExceptionMessage(Throwable e) {
+        StringWriter sw = new StringWriter();
+        e.printStackTrace(new PrintWriter(sw, true));
+        return sw.toString();
+    }
+
+    /**
+     * 获取exception的详细错误信息
+     *
+     * @param e 异常
+     * @return 详细错误信息
+     */
+    public static String getRootErrorMessage(Exception e) {
+        Throwable root = ExceptionUtils.getRootCause(e);
+        root = (root == null ? e : root);
+        if (root == null) {
+            return "";
+        }
+        String msg = root.getMessage();
+        if (msg == null) {
+            return "null";
+        }
+        return StringUtils.defaultString(msg);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ServletUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ServletUtils.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ServletUtils.java
new file mode 100644
--- /dev/null	(date 1726288143576)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/ServletUtils.java	(date 1726288143576)
@@ -0,0 +1,333 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils;
+
+import com.alibaba.fastjson2.JSON;
+import jakarta.servlet.ServletRequest;
+import jakarta.servlet.http.HttpServletRequest;
+import jakarta.servlet.http.HttpServletResponse;
+import jakarta.servlet.http.HttpSession;
+import leyramu.qinian.asc.common.core.domain.R;
+import leyramu.qinian.asc.common.core.text.Convert;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.core.io.buffer.DataBuffer;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.http.server.reactive.ServerHttpResponse;
+import org.springframework.util.LinkedCaseInsensitiveMap;
+import org.springframework.web.context.request.RequestAttributes;
+import org.springframework.web.context.request.RequestContextHolder;
+import org.springframework.web.context.request.ServletRequestAttributes;
+import reactor.core.publisher.Mono;
+
+import java.io.IOException;
+import java.net.URLDecoder;
+import java.net.URLEncoder;
+import java.nio.charset.StandardCharsets;
+import java.util.*;
+
+/**
+ * 客户端工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Slf4j
+public class ServletUtils {
+
+    /**
+     * 获取String参数
+     *
+     * @param name 参数名
+     * @return String 参数
+     */
+    public static String getParameter(String name) {
+        return Objects.requireNonNull(getRequest()).getParameter(name);
+    }
+
+    /**
+     * 获取String参数
+     *
+     * @param name         参数名
+     * @param defaultValue 默认值
+     * @return String 参数
+     */
+    public static String getParameter(String name, String defaultValue) {
+        return Convert.toStr(Objects.requireNonNull(getRequest()).getParameter(name), defaultValue);
+    }
+
+    /**
+     * 获取Integer参数
+     *
+     * @param name 参数名
+     * @return Integer 参数
+     */
+    public static Integer getParameterToInt(String name) {
+        return Convert.toInt(Objects.requireNonNull(getRequest()).getParameter(name));
+    }
+
+    /**
+     * 获取Integer参数
+     *
+     * @param name         参数名
+     * @param defaultValue 默认值
+     * @return Boolean 参数
+     */
+    public static Integer getParameterToInt(String name, Integer defaultValue) {
+        return Convert.toInt(Objects.requireNonNull(getRequest()).getParameter(name), defaultValue);
+    }
+
+    /**
+     * 获取Boolean参数
+     *
+     * @param name 参数名
+     * @return Boolean 参数
+     */
+    public static Boolean getParameterToBool(String name) {
+        return Convert.toBool(Objects.requireNonNull(getRequest()).getParameter(name));
+    }
+
+    /**
+     * 获取Boolean参数
+     *
+     * @param name         参数名
+     * @param defaultValue 默认值
+     * @return Boolean 参数
+     */
+    public static Boolean getParameterToBool(String name, Boolean defaultValue) {
+        return Convert.toBool(Objects.requireNonNull(getRequest()).getParameter(name), defaultValue);
+    }
+
+    /**
+     * 获得所有请求参数
+     *
+     * @param request 请求对象{@link ServletRequest}
+     * @return Map
+     */
+    public static Map<String, String[]> getParams(ServletRequest request) {
+        final Map<String, String[]> map = request.getParameterMap();
+        return Collections.unmodifiableMap(map);
+    }
+
+    /**
+     * 获得所有请求参数
+     *
+     * @param request 请求对象{@link ServletRequest}
+     * @return Map
+     */
+    public static Map<String, String> getParamMap(ServletRequest request) {
+        Map<String, String> params = new HashMap<>();
+        for (Map.Entry<String, String[]> entry : getParams(request).entrySet()) {
+            params.put(entry.getKey(), StringUtils.join(entry.getValue(), ","));
+        }
+        return params;
+    }
+
+    /**
+     * 获取request
+     *
+     * @return 请求对象
+     */
+    public static HttpServletRequest getRequest() {
+        try {
+            return Objects.requireNonNull(getRequestAttributes()).getRequest();
+        } catch (Exception e) {
+            return null;
+        }
+    }
+
+    /**
+     * 获取response
+     *
+     * @return 响应对象
+     */
+    public static HttpServletResponse getResponse() {
+        try {
+            return Objects.requireNonNull(getRequestAttributes()).getResponse();
+        } catch (Exception e) {
+            return null;
+        }
+    }
+
+    /**
+     * 获取session
+     *
+     * @return HttpSession
+     */
+    public static HttpSession getSession() {
+        return Objects.requireNonNull(getRequest()).getSession();
+    }
+
+    /**
+     * 获取requestAttributes
+     *
+     * @return RequestAttributes
+     */
+    public static ServletRequestAttributes getRequestAttributes() {
+        try {
+            RequestAttributes attributes = RequestContextHolder.getRequestAttributes();
+            return (ServletRequestAttributes) attributes;
+        } catch (Exception e) {
+            return null;
+        }
+    }
+
+    /**
+     * 是否是Ajax异步请求
+     *
+     * @param request 请求对象
+     * @param name    请求头名称
+     * @return 是否异步请求
+     */
+    public static String getHeader(HttpServletRequest request, String name) {
+        String value = request.getHeader(name);
+        if (StringUtils.isEmpty(value)) {
+            return StringUtils.EMPTY;
+        }
+        return urlDecode(value);
+    }
+
+    /**
+     * 是否是Ajax异步请求
+     *
+     * @param request 请求对象
+     * @return 是否异步请求
+     */
+    public static Map<String, String> getHeaders(HttpServletRequest request) {
+        Map<String, String> map = new LinkedCaseInsensitiveMap<>();
+        Enumeration<String> enumeration = request.getHeaderNames();
+        if (enumeration != null) {
+            while (enumeration.hasMoreElements()) {
+                String key = enumeration.nextElement();
+                String value = request.getHeader(key);
+                map.put(key, value);
+            }
+        }
+        return map;
+    }
+
+    /**
+     * 将字符串渲染到客户端
+     *
+     * @param response 渲染对象
+     * @param string   待渲染的字符串
+     */
+    public static void renderString(HttpServletResponse response, String string) {
+        try {
+            response.setStatus(200);
+            response.setContentType("application/json");
+            response.setCharacterEncoding("utf-8");
+            response.getWriter().print(string);
+        } catch (IOException e) {
+            log.error("renderString 异常", e);
+        }
+    }
+
+    /**
+     * 是否是Ajax异步请求
+     *
+     * @param request 请求对象
+     * @return 是否异步请求
+     */
+    public static boolean isAjaxRequest(HttpServletRequest request) {
+        String accept = request.getHeader("accept");
+        if (accept != null && accept.contains("application/json")) {
+            return true;
+        }
+
+        String xRequestedWith = request.getHeader("X-Requested-With");
+        if (xRequestedWith != null && xRequestedWith.contains("XMLHttpRequest")) {
+            return true;
+        }
+
+        String uri = request.getRequestURI();
+        if (StringUtils.inStringIgnoreCase(uri, ".json", ".xml")) {
+            return true;
+        }
+
+        String ajax = request.getParameter("__ajax");
+        return StringUtils.inStringIgnoreCase(ajax, "json", "xml");
+    }
+
+    /**
+     * 内容编码
+     *
+     * @param str 内容
+     * @return 编码后的内容
+     */
+    public static String urlEncode(String str) {
+        return URLEncoder.encode(str, StandardCharsets.UTF_8);
+    }
+
+    /**
+     * 内容解码
+     *
+     * @param str 内容
+     * @return 解码后的内容
+     */
+    public static String urlDecode(String str) {
+        return URLDecoder.decode(str, StandardCharsets.UTF_8);
+    }
+
+    /**
+     * 设置webflux模型响应
+     *
+     * @param response ServerHttpResponse
+     * @param value    响应内容
+     * @return Mono<Void>
+     */
+    public static Mono<Void> webFluxResponseWriter(ServerHttpResponse response, Object value) {
+        return webFluxResponseWriter(response, HttpStatus.OK, value, R.FAIL);
+    }
+
+    /**
+     * 设置webflux模型响应
+     *
+     * @param response ServerHttpResponse
+     * @param code     响应状态码
+     * @param value    响应内容
+     * @return Mono<Void>
+     */
+    public static Mono<Void> webFluxResponseWriter(ServerHttpResponse response, Object value, int code) {
+        return webFluxResponseWriter(response, HttpStatus.OK, value, code);
+    }
+
+    /**
+     * 设置webflux模型响应
+     *
+     * @param response ServerHttpResponse
+     * @param status   http状态码
+     * @param code     响应状态码
+     * @param value    响应内容
+     * @return Mono<Void>
+     */
+    public static Mono<Void> webFluxResponseWriter(ServerHttpResponse response, HttpStatus status, Object value, int code) {
+        return webFluxResponseWriter(response, MediaType.APPLICATION_JSON_VALUE, status, value, code);
+    }
+
+    /**
+     * 设置webflux模型响应
+     *
+     * @param response    ServerHttpResponse
+     * @param contentType content-type
+     * @param status      http状态码
+     * @param code        响应状态码
+     * @param value       响应内容
+     * @return Mono<Void>
+     */
+    public static Mono<Void> webFluxResponseWriter(ServerHttpResponse response, String contentType, HttpStatus status, Object value, int code) {
+        response.setStatusCode(status);
+        response.getHeaders().add(HttpHeaders.CONTENT_TYPE, contentType);
+        R<?> result = R.fail(code, value.toString());
+        DataBuffer dataBuffer = response.bufferFactory().wrap(JSON.toJSONString(result).getBytes());
+        return response.writeWith(Mono.just(dataBuffer));
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/PageUtilsBAK.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/PageUtilsBAK.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/PageUtilsBAK.java
new file mode 100644
--- /dev/null	(date 1725689539285)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/PageUtilsBAK.java	(date 1725689539285)
@@ -0,0 +1,65 @@
+///*
+// * Copyright (c) 2024 Leyramu. All rights reserved.
+// * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+// * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+// * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+// * By using this project, users acknowledge and agree to abide by these terms and conditions.
+// */
+//
+//package leyramu.softwarecup.digEdu.common.core.utils;
+//
+//import com.baomidou.mybatisplus.core.metadata.IPage;
+//import com.baomidou.mybatisplus.core.metadata.OrderItem;
+//import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+//import leyramu.softwarecup.digEdu.common.core.utils.sql.SqlUtil;
+//import leyramu.softwarecup.digEdu.common.core.web.page.PageDomain;
+//import leyramu.softwarecup.digEdu.common.core.web.page.TableSupport;
+//import lombok.extern.slf4j.Slf4j;
+//
+///**
+// * 分页工具类
+// *
+// * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+// * @version 1.0.0
+// * @since 2024/7/23
+// */
+//@Slf4j
+//public class PageUtilsBAK extends Page<Object> {
+//
+//    /**
+//     * 设置请求分页数据
+//     */
+//    public static IPage<?> startPage() {
+//        PageDomain pageDomain = TableSupport.buildPageRequest();
+//        Integer pageNum = pageDomain.getPageNum();
+//        Integer pageSize = pageDomain.getPageSize();
+//        String orderBy = SqlUtil.escapeOrderBySql(pageDomain.getOrderBy());
+//        boolean reasonable = pageDomain.getReasonable();
+//
+//        Page<?> page = new Page<>(pageNum, pageSize, reasonable);
+//        page.setSearchCount(true);
+//
+//        if (StringUtils.isNotBlank(orderBy)) {
+//            String[] orderBys = orderBy.split(",");
+//            for (String ob : orderBys) {
+//                String[] orderInfo = ob.trim().split(" ");
+//                if (orderInfo.length == 2) {
+//                    String column = orderInfo[0];
+//                    boolean isAsc = "asc".equalsIgnoreCase(orderInfo[1]);
+//                    if (isAsc) {
+//                        page.addOrder(OrderItem.asc(column));
+//                    } else {
+//                        page.addOrder(OrderItem.desc(column));
+//                    }
+//                }
+//            }
+//        }
+//        return page;
+//    }
+//
+//    /**
+//     * 清理分页的线程变量
+//     */
+//    public static void clearPage() {
+//    }
+//}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/SecurityConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/SecurityConstants.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/SecurityConstants.java
new file mode 100644
--- /dev/null	(date 1726288143382)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/SecurityConstants.java	(date 1726288143382)
@@ -0,0 +1,59 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.constant;
+
+/**
+ * 权限相关通用常量
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class SecurityConstants {
+
+    /**
+     * 用户ID字段
+     */
+    public static final String DETAILS_USER_ID = "user_id";
+
+    /**
+     * 用户名字段
+     */
+    public static final String DETAILS_USERNAME = "username";
+
+    /**
+     * 授权信息字段
+     */
+    public static final String AUTHORIZATION_HEADER = "authorization";
+
+    /**
+     * 请求来源
+     */
+    public static final String FROM_SOURCE = "from-source";
+
+    /**
+     * 内部请求
+     */
+    public static final String INNER = "inner";
+
+    /**
+     * 用户标识
+     */
+    public static final String USER_KEY = "user_key";
+
+    /**
+     * 登录用户
+     */
+    public static final String LOGIN_USER = "login_user";
+
+    /**
+     * 角色权限
+     */
+    public static final String ROLE_PERMISSION = "role_permission";
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/UnauthorizedException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/UnauthorizedException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/UnauthorizedException.java
new file mode 100644
--- /dev/null	(date 1726288143450)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/UnauthorizedException.java	(date 1726288143450)
@@ -0,0 +1,16 @@
+package leyramu.qinian.asc.common.core.exception;
+
+public class UnauthorizedException extends CommonException {
+
+    public UnauthorizedException(String message) {
+        super(message, 401);
+    }
+
+    public UnauthorizedException(String message, Throwable cause) {
+        super(message, cause, 401);
+    }
+
+    public UnauthorizedException(Throwable cause) {
+        super(cause, 401);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/ScheduleConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/ScheduleConstants.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/ScheduleConstants.java
new file mode 100644
--- /dev/null	(date 1726288143326)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/ScheduleConstants.java	(date 1726288143326)
@@ -0,0 +1,79 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.constant;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+
+/**
+ * 任务调度通用常量
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class ScheduleConstants {
+
+    /**
+     * 任务调度参数key
+     */
+    public static final String TASK_CLASS_NAME = "TASK_CLASS_NAME";
+
+    /**
+     * 执行目标key
+     */
+    public static final String TASK_PROPERTIES = "TASK_PROPERTIES";
+
+    /**
+     * 默认
+     */
+    public static final String MISFIRE_DEFAULT = "0";
+
+    /**
+     * 立即触发执行
+     */
+    public static final String MISFIRE_IGNORE_MISFIRES = "1";
+
+    /**
+     * 触发一次执行
+     */
+    public static final String MISFIRE_FIRE_AND_PROCEED = "2";
+
+    /**
+     * 不触发立即执行
+     */
+    public static final String MISFIRE_DO_NOTHING = "3";
+
+    /**
+     * 任务状态
+     *
+     * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+     * @version 1.0.0
+     * @since 2024/7/23
+     */
+    @Getter
+    @AllArgsConstructor
+    public enum Status {
+
+        /**
+         * 正常
+         */
+        NORMAL("0"),
+
+        /**
+         * 暂停
+         */
+        PAUSE("1");
+
+        /**
+         * 状态
+         */
+        private final String value;
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/TokenConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/TokenConstants.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/TokenConstants.java
new file mode 100644
--- /dev/null	(date 1726288143371)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/TokenConstants.java	(date 1726288143371)
@@ -0,0 +1,34 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.constant;
+
+/**
+ * Token的Key常量
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class TokenConstants {
+
+    /**
+     * 令牌自定义标识
+     */
+    public static final String AUTHENTICATION = "Authorization";
+
+    /**
+     * 令牌前缀
+     */
+    public static final String PREFIX = "Bearer ";
+
+    /**
+     * 令牌秘钥
+     */
+    public final static String SECRET = "digEduMiraitowazcxdagjdfklsgjsdlfghsdfljghsdfkghldfsjghfdjlkghsdfljglsjdfhd";
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/CacheConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/CacheConstants.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/CacheConstants.java
new file mode 100644
--- /dev/null	(date 1726288143213)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/CacheConstants.java	(date 1726288143213)
@@ -0,0 +1,69 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.constant;
+
+/**
+ * 缓存常量信息
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class CacheConstants {
+
+    /**
+     * 缓存有效期，默认720（分钟）
+     */
+    public final static long EXPIRATION = 720;
+
+    /**
+     * 缓存刷新时间，默认120（分钟）
+     */
+    public final static long REFRESH_TIME = 120;
+
+    /**
+     * 密码最大错误次数
+     */
+    public final static int PASSWORD_MAX_RETRY_COUNT = 5;
+
+    /**
+     * 密码锁定时间，默认10（分钟）
+     */
+    public final static long PASSWORD_LOCK_TIME = 10;
+
+    /**
+     * 权限缓存前缀
+     */
+    public final static String LOGIN_TOKEN_KEY = "login_tokens:";
+
+    /**
+     * 验证码 redis key
+     */
+    public static final String CAPTCHA_CODE_KEY = "captcha_codes:";
+
+    /**
+     * 参数管理 cache key
+     */
+    public static final String SYS_CONFIG_KEY = "sys_config:";
+
+    /**
+     * 字典管理 cache key
+     */
+    public static final String SYS_DICT_KEY = "sys_dict:";
+
+    /**
+     * 登录账户密码错误次数 redis key
+     */
+    public static final String PWD_ERR_CNT_KEY = "pwd_err_cnt:";
+
+    /**
+     * 登录IP黑名单 cache key
+     */
+    public static final String SYS_LOGIN_BLACK_IP_LIST = SYS_CONFIG_KEY + "sys.login.blackIPList";
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/UserConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/UserConstants.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/UserConstants.java
new file mode 100644
--- /dev/null	(date 1726288143426)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/UserConstants.java	(date 1726288143426)
@@ -0,0 +1,134 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.constant;
+
+/**
+ * 用户常量信息
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class UserConstants {
+
+    /**
+     * 平台内系统用户的唯一标志
+     */
+    public static final String SYS_USER = "SYS_USER";
+
+    /**
+     * 正常状态
+     */
+    public static final String NORMAL = "0";
+
+    /**
+     * 异常状态
+     */
+    public static final String EXCEPTION = "1";
+
+    /**
+     * 用户封禁状态
+     */
+    public static final String USER_DISABLE = "1";
+
+    /**
+     * 角色封禁状态
+     */
+    public static final String ROLE_DISABLE = "1";
+
+    /**
+     * 部门正常状态
+     */
+    public static final String DEPT_NORMAL = "0";
+
+    /**
+     * 部门停用状态
+     */
+    public static final String DEPT_DISABLE = "1";
+
+    /**
+     * 字典正常状态
+     */
+    public static final String DICT_NORMAL = "0";
+
+    /**
+     * 是否为系统默认（是）
+     */
+    public static final String YES = "Y";
+
+    /**
+     * 是否菜单外链（是）
+     */
+    public static final String YES_FRAME = "0";
+
+    /**
+     * 是否菜单外链（否）
+     */
+    public static final String NO_FRAME = "1";
+
+    /**
+     * 菜单类型（目录）
+     */
+    public static final String TYPE_DIR = "M";
+
+    /**
+     * 菜单类型（菜单）
+     */
+    public static final String TYPE_MENU = "C";
+
+    /**
+     * 菜单类型（按钮）
+     */
+    public static final String TYPE_BUTTON = "F";
+
+    /**
+     * Layout组件标识
+     */
+    public final static String LAYOUT = "Layout";
+
+    /**
+     * ParentView组件标识
+     */
+    public final static String PARENT_VIEW = "ParentView";
+
+    /**
+     * InnerLink组件标识
+     */
+    public final static String INNER_LINK = "InnerLink";
+
+    /**
+     * 校验是否唯一的返回标识
+     */
+    public final static boolean UNIQUE = true;
+
+    /**
+     * 校验是否不唯一的返回标识
+     */
+    public final static boolean NOT_UNIQUE = false;
+
+    /**
+     * 用户名长度限制 - 最小长度
+     */
+    public static final int USERNAME_MIN_LENGTH = 2;
+
+    /**
+     * 用户名长度限制 - 最大长度
+     */
+    public static final int USERNAME_MAX_LENGTH = 20;
+
+    /**
+     * 密码长度限制 - 最小长度
+     */
+    public static final int PASSWORD_MIN_LENGTH = 5;
+
+    /**
+     * 密码长度限制 - 最大长度
+     */
+    public static final int PASSWORD_MAX_LENGTH = 20;
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CommonException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CommonException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CommonException.java
new file mode 100644
--- /dev/null	(date 1726288143605)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CommonException.java	(date 1726288143605)
@@ -0,0 +1,23 @@
+package leyramu.qinian.asc.common.core.exception;
+
+import lombok.Getter;
+
+@Getter
+public class CommonException extends RuntimeException {
+    private int code;
+
+    public CommonException(String message, int code) {
+        super(message);
+        this.code = code;
+    }
+
+    public CommonException(String message, Throwable cause, int code) {
+        super(message, cause);
+        this.code = code;
+    }
+
+    public CommonException(Throwable cause, int code) {
+        super(cause);
+        this.code = code;
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/GenConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/GenConstants.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/GenConstants.java
new file mode 100644
--- /dev/null	(date 1726288143562)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/GenConstants.java	(date 1726288143562)
@@ -0,0 +1,197 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.constant;
+
+/**
+ * 代码生成通用常量
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class GenConstants {
+
+    /**
+     * 单表（增删改查）
+     */
+    public static final String TPL_CRUD = "crud";
+
+    /**
+     * 树表（增删改查）
+     */
+    public static final String TPL_TREE = "tree";
+
+    /**
+     * 主子表（增删改查）
+     */
+    public static final String TPL_SUB = "sub";
+
+    /**
+     * 树编码字段
+     */
+    public static final String TREE_CODE = "treeCode";
+
+    /**
+     * 树父编码字段
+     */
+    public static final String TREE_PARENT_CODE = "treeParentCode";
+
+    /**
+     * 树名称字段
+     */
+    public static final String TREE_NAME = "treeName";
+
+    /**
+     * 上级菜单ID字段
+     */
+    public static final String PARENT_MENU_ID = "parentMenuId";
+
+    /**
+     * 上级菜单名称字段
+     */
+    public static final String PARENT_MENU_NAME = "parentMenuName";
+
+    /**
+     * 数据库字符串类型
+     */
+    public static final String[] COLUMN_TYPE_STR = {"char", "varchar", "nvarchar", "varchar2"};
+
+    /**
+     * 数据库文本类型
+     */
+    public static final String[] COLUMN_TYPE_TEXT = {"tinytext", "text", "mediumtext", "longtext"};
+
+    /**
+     * 数据库时间类型
+     */
+    public static final String[] COLUMN_TYPE_TIME = {"datetime", "time", "date", "timestamp"};
+
+    /**
+     * 数据库数字类型
+     */
+    public static final String[] COLUMN_TYPE_NUMBER = {"tinyint", "smallint", "mediumint", "int", "number", "integer",
+            "bit", "bigint", "float", "double", "decimal"};
+
+    /**
+     * 页面不需要编辑字段
+     */
+    public static final String[] COLUMN_NAME_NOT_EDIT = {"id", "create_by", "create_time", "del_flag"};
+
+    /**
+     * 页面不需要显示的列表字段
+     */
+    public static final String[] COLUMN_NAME_NOT_LIST = {"id", "create_by", "create_time", "del_flag", "update_by",
+            "update_time"};
+
+    /**
+     * 页面不需要查询字段
+     */
+    public static final String[] COLUMN_NAME_NOT_QUERY = {"id", "create_by", "create_time", "del_flag", "update_by",
+            "update_time", "remark"};
+
+    /**
+     * Entity基类字段
+     */
+    public static final String[] BASE_ENTITY = {"createBy", "createTime", "updateBy", "updateTime", "remark"};
+
+    /**
+     * Tree基类字段
+     */
+    public static final String[] TREE_ENTITY = {"parentName", "parentId", "orderNum", "ancestors"};
+
+    /**
+     * 文本框
+     */
+    public static final String HTML_INPUT = "input";
+
+    /**
+     * 文本域
+     */
+    public static final String HTML_TEXTAREA = "textarea";
+
+    /**
+     * 下拉框
+     */
+    public static final String HTML_SELECT = "select";
+
+    /**
+     * 单选框
+     */
+    public static final String HTML_RADIO = "radio";
+
+    /**
+     * 复选框
+     */
+    public static final String HTML_CHECKBOX = "checkbox";
+
+    /**
+     * 日期控件
+     */
+    public static final String HTML_DATETIME = "datetime";
+
+    /**
+     * 图片上传控件
+     */
+    public static final String HTML_IMAGE_UPLOAD = "imageUpload";
+
+    /**
+     * 文件上传控件
+     */
+    public static final String HTML_FILE_UPLOAD = "fileUpload";
+
+    /**
+     * 富文本控件
+     */
+    public static final String HTML_EDITOR = "editor";
+
+    /**
+     * 字符串类型
+     */
+    public static final String TYPE_STRING = "String";
+
+    /**
+     * 整型
+     */
+    public static final String TYPE_INTEGER = "Integer";
+
+    /**
+     * 长整型
+     */
+    public static final String TYPE_LONG = "Long";
+
+    /**
+     * 浮点型
+     */
+    public static final String TYPE_DOUBLE = "Double";
+
+    /**
+     * 高精度计算类型
+     */
+    public static final String TYPE_BIG_DECIMAL = "BigDecimal";
+
+    /**
+     * 时间类型
+     */
+    public static final String TYPE_DATE = "Date";
+
+    /**
+     * 模糊查询
+     */
+    public static final String QUERY_LIKE = "LIKE";
+
+    /**
+     * 相等查询
+     */
+    public static final String QUERY_EQ = "EQ";
+
+    /**
+     * 需要
+     */
+    public static final String REQUIRE = "1";
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/BadRequestException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/BadRequestException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/BadRequestException.java
new file mode 100644
--- /dev/null	(date 1726288143368)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/BadRequestException.java	(date 1726288143368)
@@ -0,0 +1,16 @@
+package leyramu.qinian.asc.common.core.exception;
+
+public class BadRequestException extends CommonException {
+
+    public BadRequestException(String message) {
+        super(message, 400);
+    }
+
+    public BadRequestException(String message, Throwable cause) {
+        super(message, cause, 400);
+    }
+
+    public BadRequestException(Throwable cause) {
+        super(cause, 400);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/HttpStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/HttpStatus.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/HttpStatus.java
new file mode 100644
--- /dev/null	(date 1726288143229)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/HttpStatus.java	(date 1726288143229)
@@ -0,0 +1,104 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.constant;
+
+/**
+ * 返回状态码
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class HttpStatus {
+
+    /**
+     * 操作成功
+     */
+    public static final int SUCCESS = 200;
+
+    /**
+     * 对象创建成功
+     */
+    public static final int CREATED = 201;
+
+    /**
+     * 请求已经被接受
+     */
+    public static final int ACCEPTED = 202;
+
+    /**
+     * 操作已经执行成功，但是没有返回数据
+     */
+    public static final int NO_CONTENT = 204;
+
+    /**
+     * 资源已被移除
+     */
+    public static final int MOVED_PERM = 301;
+
+    /**
+     * 重定向
+     */
+    public static final int SEE_OTHER = 303;
+
+    /**
+     * 资源没有被修改
+     */
+    public static final int NOT_MODIFIED = 304;
+
+    /**
+     * 参数列表错误（缺少，格式不匹配）
+     */
+    public static final int BAD_REQUEST = 400;
+
+    /**
+     * 未授权
+     */
+    public static final int UNAUTHORIZED = 401;
+
+    /**
+     * 访问受限，授权过期
+     */
+    public static final int FORBIDDEN = 403;
+
+    /**
+     * 资源，服务未找到
+     */
+    public static final int NOT_FOUND = 404;
+
+    /**
+     * 不允许的http方法
+     */
+    public static final int BAD_METHOD = 405;
+
+    /**
+     * 资源冲突，或者资源被锁
+     */
+    public static final int CONFLICT = 409;
+
+    /**
+     * 不支持的数据，媒体类型
+     */
+    public static final int UNSUPPORTED_TYPE = 415;
+
+    /**
+     * 系统内部错误
+     */
+    public static final int ERROR = 500;
+
+    /**
+     * 接口未实现
+     */
+    public static final int NOT_IMPLEMENTED = 501;
+
+    /**
+     * 系统警告消息
+     */
+    public static final int WARN = 601;
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/Constants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/Constants.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/Constants.java
new file mode 100644
--- /dev/null	(date 1726288143456)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/Constants.java	(date 1726288143456)
@@ -0,0 +1,156 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.constant;
+
+/**
+ * 通用常量信息
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class Constants {
+
+    /**
+     * UTF-8 字符集
+     */
+    public static final String UTF8 = "UTF-8";
+
+    /**
+     * GBK 字符集
+     */
+    public static final String GBK = "GBK";
+
+    /**
+     * www主域
+     */
+    public static final String WWW = "www.";
+
+    /**
+     * RMI 远程方法调用
+     */
+    public static final String LOOKUP_RMI = "rmi:";
+
+    /**
+     * LDAP 远程方法调用
+     */
+    public static final String LOOKUP_LDAP = "ldap:";
+
+    /**
+     * LDAPS 远程方法调用
+     */
+    public static final String LOOKUP_LDAPS = "ldaps:";
+
+    /**
+     * http请求
+     */
+    public static final String HTTP = "http://";
+
+    /**
+     * https请求
+     */
+    public static final String HTTPS = "https://";
+
+    /**
+     * 成功标记
+     */
+    public static final Integer SUCCESS = 200;
+
+    /**
+     * 失败标记
+     */
+    public static final Integer FAIL = 500;
+
+    /**
+     * 登录成功状态
+     */
+    public static final String LOGIN_SUCCESS_STATUS = "0";
+
+    /**
+     * 登录失败状态
+     */
+    public static final String LOGIN_FAIL_STATUS = "1";
+
+    /**
+     * 登录成功
+     */
+    public static final String LOGIN_SUCCESS = "Success";
+
+    /**
+     * 注销
+     */
+    public static final String LOGOUT = "Logout";
+
+    /**
+     * 注册
+     */
+    public static final String REGISTER = "Register";
+
+    /**
+     * 登录失败
+     */
+    public static final String LOGIN_FAIL = "Error";
+
+    /**
+     * 当前记录起始索引
+     */
+    public static final String PAGE_NUM = "pageNum";
+
+    /**
+     * 每页显示记录数
+     */
+    public static final String PAGE_SIZE = "pageSize";
+
+    /**
+     * 排序列
+     */
+    public static final String ORDER_BY_COLUMN = "orderByColumn";
+
+    /**
+     * 排序的方向 "desc" 或者 "asc".
+     */
+    public static final String IS_ASC = "isAsc";
+
+    /**
+     * 验证码有效期（分钟）
+     */
+    public static final long CAPTCHA_EXPIRATION = 2;
+
+    /**
+     * 资源映射路径 前缀
+     */
+    public static final String RESOURCE_PREFIX = "/profile";
+
+    /**
+     * 自动识别json对象白名单配置（仅允许解析的包名，范围越小越安全）
+     */
+    public static final String[] JSON_WHITELIST_STR = {
+            "org.springframework",
+            "leyramu.softwarecup.digEdu"
+    };
+
+    /**
+     * 定时任务白名单配置（仅允许访问的包名，如其他需要可以自行添加）
+     */
+    public static final String[] JOB_WHITELIST_STR = {
+            "leyramu.softwarecup.digEdu.job.task"
+    };
+
+    /**
+     * 定时任务违规的字符
+     */
+    public static final String[] JOB_ERROR_STR = {
+            "java.net.URL",
+            "javax.naming.InitialContext",
+            "org.yaml.snakeyaml",
+            "org.springframework",
+            "org.apache",
+            "leyramu.softwarecup.digEdu.common.core.utils.file"
+    };
+}
Index: asc-java/asc-common/asc-common-core/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-core/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1726288143477)
+++ b/asc-java/asc-common/asc-common-core/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1726288143477)
@@ -0,0 +1,9 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.qinian.asc.common.core.utils.SpringUtils
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CheckedException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CheckedException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CheckedException.java
new file mode 100644
--- /dev/null	(date 1726288143442)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CheckedException.java	(date 1726288143442)
@@ -0,0 +1,67 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception;
+
+import java.io.Serial;
+
+/**
+ * 检查异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class CheckedException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 构造函数
+     *
+     * @param message 消息
+     */
+    public CheckedException(String message) {
+        super(message);
+    }
+
+    /**
+     * 构造函数
+     *
+     * @param cause 原因
+     */
+    public CheckedException(Throwable cause) {
+        super(cause);
+    }
+
+    /**
+     * 构造函数
+     *
+     * @param message 消息
+     * @param cause   原因
+     */
+    public CheckedException(String message, Throwable cause) {
+        super(message, cause);
+    }
+
+    /**
+     * 构造函数
+     *
+     * @param message            消息
+     * @param cause              原因
+     * @param enableSuppression  是否启用抑制
+     * @param writableStackTrace 是否可写入堆栈跟踪
+     */
+    public CheckedException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace) {
+        super(message, cause, enableSuppression, writableStackTrace);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CaptchaException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CaptchaException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CaptchaException.java
new file mode 100644
--- /dev/null	(date 1726288143452)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/CaptchaException.java	(date 1726288143452)
@@ -0,0 +1,36 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception;
+
+import java.io.Serial;
+
+/**
+ * 验证码错误异常类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class CaptchaException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 构造函数
+     *
+     * @param msg 错误信息
+     */
+    public CaptchaException(String msg) {
+        super(msg);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/GlobalException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/GlobalException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/GlobalException.java
new file mode 100644
--- /dev/null	(date 1726290007886)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/GlobalException.java	(date 1726290007886)
@@ -0,0 +1,89 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception;
+
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+
+import java.io.Serial;
+
+/**
+ * 全局异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Getter
+@NoArgsConstructor
+public class GlobalException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 错误提示
+     */
+    private String message;
+
+    /**
+     * 错误明细，内部调试错误
+     */
+    private String detailMessage;
+
+    /**
+     * 构造方法
+     *
+     * @param message 错误提示
+     */
+    public GlobalException(String message) {
+        this.message = message;
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param code 错误码
+     * @param msg  错误提示
+     */
+    public GlobalException(String code, String msg) {
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param detailMessage 错误明细，内部调试错误
+     */
+    public GlobalException setDetailMessage(String detailMessage) {
+        this.detailMessage = detailMessage;
+        return this;
+    }
+
+    /**
+     * 获取信息
+     */
+    @Override
+    public String getMessage() {
+        return message;
+    }
+
+    /**
+     * 设置信息
+     *
+     * @param message 信息
+     * @return 全局异常
+     */
+    public GlobalException setMessage(String message) {
+        this.message = message;
+        return this;
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/UtilException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/UtilException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/UtilException.java
new file mode 100644
--- /dev/null	(date 1726288143302)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/UtilException.java	(date 1726288143302)
@@ -0,0 +1,55 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception;
+
+import java.io.Serial;
+
+/**
+ * 工具类异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class UtilException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 构造方法
+     *
+     * @param e 异常
+     */
+    public UtilException(Throwable e) {
+        super(e.getMessage(), e);
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param message 信息
+     */
+    public UtilException(String message) {
+        super(message);
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param message   信息
+     * @param throwable 异常
+     */
+    public UtilException(String message, Throwable throwable) {
+        super(message, throwable);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/UserPasswordNotMatchException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/UserPasswordNotMatchException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/UserPasswordNotMatchException.java
new file mode 100644
--- /dev/null	(date 1726288143308)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/UserPasswordNotMatchException.java	(date 1726288143308)
@@ -0,0 +1,34 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.user;
+
+import java.io.Serial;
+
+/**
+ * 用户密码不正确或不符合规范异常类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class UserPasswordNotMatchException extends UserException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 用户密码不正确或不符合规范异常类
+     */
+    public UserPasswordNotMatchException() {
+        super("user.password.not.match", null);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/CaptchaExpireException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/CaptchaExpireException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/CaptchaExpireException.java
new file mode 100644
--- /dev/null	(date 1726288143329)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/CaptchaExpireException.java	(date 1726288143329)
@@ -0,0 +1,34 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.user;
+
+import java.io.Serial;
+
+/**
+ * 验证码失效异常类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class CaptchaExpireException extends UserException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 验证码失效异常类
+     */
+    public CaptchaExpireException() {
+        super("user.jcaptcha.expire", null);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/UserException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/UserException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/UserException.java
new file mode 100644
--- /dev/null	(date 1726288143280)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/user/UserException.java	(date 1726288143280)
@@ -0,0 +1,39 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception.user;
+
+import leyramu.qinian.asc.common.core.exception.base.BaseException;
+
+import java.io.Serial;
+
+/**
+ * 用户信息异常类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class UserException extends BaseException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 用户信息异常类
+     *
+     * @param code 异常代码
+     * @param args 异常参数
+     */
+    public UserException(String code, Object[] args) {
+        super("user", code, args, null);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/annotation/Excels.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/annotation/Excels.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/annotation/Excels.java
new file mode 100644
--- /dev/null	(date 1726288143436)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/annotation/Excels.java	(date 1726288143436)
@@ -0,0 +1,31 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.annotation;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * Excel注解集
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Target(ElementType.FIELD)
+@Retention(RetentionPolicy.RUNTIME)
+public @interface Excels {
+
+    /**
+     * 导出字段名
+     */
+    Excel[] value();
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/annotation/Excel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/annotation/Excel.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/annotation/Excel.java
new file mode 100644
--- /dev/null	(date 1726288143311)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/annotation/Excel.java	(date 1726288143311)
@@ -0,0 +1,233 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.annotation;
+
+import leyramu.qinian.asc.common.core.utils.poi.ExcelHandlerAdapter;
+import lombok.AllArgsConstructor;
+import org.apache.poi.ss.usermodel.HorizontalAlignment;
+import org.apache.poi.ss.usermodel.IndexedColors;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * 自定义导出 Excel 数据注解
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Retention(RetentionPolicy.RUNTIME)
+@Target(ElementType.FIELD)
+public @interface Excel {
+
+    /**
+     * 导出时在excel中排序
+     */
+    int sort() default Integer.MAX_VALUE;
+
+    /**
+     * 导出到Excel中的名字.
+     */
+    String name() default "";
+
+    /**
+     * 日期格式, 如: yyyy-MM-dd
+     */
+    String dateFormat() default "";
+
+    /**
+     * 读取内容转表达式 (如: 0=男,1=女,2=未知)
+     */
+    String readConverterExp() default "";
+
+    /**
+     * 分隔符，读取字符串组内容
+     */
+    String separator() default ",";
+
+    /**
+     * BigDecimal 精度 默认:-1(默认不开启BigDecimal格式化)
+     */
+    int scale() default -1;
+
+    /**
+     * 导出时在excel中每个列的高度
+     */
+    double height() default 14;
+
+    /**
+     * 导出时在excel中每个列的宽度
+     */
+    double width() default 16;
+
+    /**
+     * 文字后缀,如% 90 变成90%
+     */
+    String suffix() default "";
+
+    /**
+     * 当值为空时,字段的默认值
+     */
+    String defaultValue() default "";
+
+    /**
+     * 提示信息
+     */
+    String prompt() default "";
+
+    /**
+     * 设置只能选择不能输入的列内容.
+     */
+    String[] combo() default {};
+
+    /**
+     * 是否需要纵向合并单元格,应对需求:含有list集合单元格)
+     */
+    boolean needMerge() default false;
+
+    /**
+     * 是否导出数据,应对需求:有时我们需要导出一份模板,这是标题需要但内容需要用户手工填写.
+     */
+    boolean isExport() default true;
+
+    /**
+     * 另一个类中的属性名称,支持多级获取,以小数点隔开
+     */
+    String targetAttr() default "";
+
+    /**
+     * 是否自动统计数据,在最后追加一行统计数据总和
+     */
+    boolean isStatistics() default false;
+
+    /**
+     * 导出类型（0为数字 1为字符串）
+     */
+    ColumnType cellType() default ColumnType.STRING;
+
+    /**
+     * 导出列头背景颜色
+     */
+    IndexedColors headerBackgroundColor() default IndexedColors.GREY_50_PERCENT;
+
+    /**
+     * 导出列头字体颜色
+     */
+    IndexedColors headerColor() default IndexedColors.WHITE;
+
+    /**
+     * 导出单元格背景颜色
+     */
+    IndexedColors backgroundColor() default IndexedColors.WHITE;
+
+    /**
+     * 导出单元格字体颜色
+     */
+    IndexedColors color() default IndexedColors.BLACK;
+
+    /**
+     * 导出字段对齐方式
+     */
+    HorizontalAlignment align() default HorizontalAlignment.CENTER;
+
+    /**
+     * 自定义数据处理器
+     */
+    Class<?> handler() default ExcelHandlerAdapter.class;
+
+    /**
+     * 自定义数据处理器参数
+     */
+    String[] args() default {};
+
+    /**
+     * 字段类型（0：导出导入；1：仅导出；2：仅导入）
+     */
+    Type type() default Type.ALL;
+
+    /**
+     * 字段类型（0：导出导入；1：仅导出；2：仅导入）
+     */
+    @AllArgsConstructor
+    enum Type {
+
+        /**
+         * ALL
+         */
+        ALL(0),
+
+        /**
+         * EXPORT
+         */
+        EXPORT(1),
+
+        /**
+         * IMPORT
+         */
+        IMPORT(2);
+
+        /**
+         * 类型
+         */
+        private final int value;
+
+        /**
+         * 获取类型
+         *
+         * @return 类型
+         */
+        public int value() {
+            return this.value;
+        }
+    }
+
+    /**
+     * 导出类型（0为数字 1为字符串 2为图片）
+     */
+    @AllArgsConstructor
+    enum ColumnType {
+
+        /**
+         * 数字
+         */
+        NUMERIC(0),
+
+        /**
+         * 字符串
+         */
+        STRING(1),
+
+        /**
+         * 图片
+         */
+        IMAGE(2),
+
+        /**
+         * 文本
+         */
+        TEXT(3);
+
+        /**
+         * 类型
+         */
+        private final int value;
+
+        /**
+         * 获取类型
+         *
+         * @return 类型
+         */
+        public int value() {
+            return this.value;
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/PreAuthorizeException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/PreAuthorizeException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/PreAuthorizeException.java
new file mode 100644
--- /dev/null	(date 1726288143277)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/PreAuthorizeException.java	(date 1726288143277)
@@ -0,0 +1,30 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception;
+
+import lombok.NoArgsConstructor;
+
+import java.io.Serial;
+
+/**
+ * 权限异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@NoArgsConstructor
+public class PreAuthorizeException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/InnerAuthException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/InnerAuthException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/InnerAuthException.java
new file mode 100644
--- /dev/null	(date 1726288143565)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/InnerAuthException.java	(date 1726288143565)
@@ -0,0 +1,36 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception;
+
+import java.io.Serial;
+
+/**
+ * 内部认证异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class InnerAuthException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 构造
+     *
+     * @param message 异常信息
+     */
+    public InnerAuthException(String message) {
+        super(message);
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/DemoModeException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/DemoModeException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/DemoModeException.java
new file mode 100644
--- /dev/null	(date 1726288143501)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/DemoModeException.java	(date 1726288143501)
@@ -0,0 +1,30 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception;
+
+import lombok.NoArgsConstructor;
+
+import java.io.Serial;
+
+/**
+ * 演示模式异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@NoArgsConstructor
+public class DemoModeException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/ServiceException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/ServiceException.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/ServiceException.java
new file mode 100644
--- /dev/null	(date 1726288143433)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/exception/ServiceException.java	(date 1726288143433)
@@ -0,0 +1,99 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.exception;
+
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+
+import java.io.Serial;
+
+/**
+ * 业务异常
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Getter
+@NoArgsConstructor
+public final class ServiceException extends RuntimeException {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 错误码
+     */
+    private Integer code;
+
+    /**
+     * 错误提示
+     */
+    private String message;
+
+    /**
+     * 错误明细，内部调试错误
+     */
+    private String detailMessage;
+
+    /**
+     * 构造方法
+     *
+     * @param message 错误提示
+     */
+    public ServiceException(String message) {
+        this.message = message;
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param message 错误提示
+     * @param code    错误码
+     */
+    public ServiceException(String message, Integer code) {
+        this.message = message;
+        this.code = code;
+    }
+
+    /**
+     * 获取错误信息
+     *
+     * @return 错误信息
+     */
+    @Override
+    public String getMessage() {
+        return message;
+    }
+
+    /**
+     * 设置错误信息
+     *
+     * @param message 错误信息
+     * @return 业务异常
+     */
+    public ServiceException setMessage(String message) {
+        this.message = message;
+        return this;
+    }
+
+    /**
+     * 设置错误明细，内部调试错误
+     *
+     * @param detailMessage 错误明细
+     * @return 业务异常
+     */
+    public ServiceException setDetailMessage(String detailMessage) {
+        this.detailMessage = detailMessage;
+        return this;
+    }
+}
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/FishingPlatoonMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/FishingPlatoonMapper.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/FishingPlatoonMapper.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/FishingPlatoonMapper.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/FishingPlatoonMapper.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/FishingPlatoonMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/FishingPlatoonMapper.java	(date 1726316993304)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.apache.ibatis.annotations.Select;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/IdentityCardMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/IdentityCardMapper.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/IdentityCardMapper.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/IdentityCardMapper.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/IdentityCardMapper.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/IdentityCardMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/IdentityCardMapper.java	(date 1726316993399)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.qinian.domain.pojo.IdentityCard;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/BusinessLicenseMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/BusinessLicenseMapper.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/BusinessLicenseMapper.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/BusinessLicenseMapper.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/BusinessLicenseMapper.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/BusinessLicenseMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/BusinessLicenseMapper.java	(date 1726316993333)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.qinian.domain.pojo.BusinessLicense;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/FishermenMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/FishermenMapper.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/FishermenMapper.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/FishermenMapper.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/FishermenMapper.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/FishermenMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/FishermenMapper.java	(date 1726316993314)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.qinian.domain.pojo.Fishermen;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/AdminMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/AdminMapper.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/AdminMapper.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/AdminMapper.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/AdminMapper.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/dao/AdminMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/mapper/AdminMapper.java	(date 1726316993151)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.qinian.domain.pojo.Admin;
Index: asc-java/asc-common/asc-common-i18n/src/main/resources/banner.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/resources/banner.txt b/asc-java/asc-common/asc-common-i18n/src/main/resources/banner.txt
new file mode 100644
--- /dev/null	(date 1721470800409)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/resources/banner.txt	(date 1721470800409)
@@ -0,0 +1,15 @@
+${AnsiColor.BRIGHT_RED}    __
+${AnsiColor.BRIGHT_YELLOW}   / /___   __  __ _____ ____ _ ____ ___   __  __
+${AnsiColor.BRIGHT_GREEN}  / // _ \ / / / // ___// __ `// __ `__ \ / / / /
+${AnsiColor.BRIGHT_CYAN} / //  __// /_/ // /   / /_/ // / / / / // /_/ /
+${AnsiColor.BRIGHT_BLUE}/_/ \___/ \__, //_/    \__,_//_/ /_/ /_/ \__,_/
+${AnsiColor.MAGENTA}         /____/
+${AnsiColor.DEFAULT}      佛祖保佑       永不宕机      永无BUG
+  .   ____          _            __ _ _
+ /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
+( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
+ \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
+  '  |____| .__|_| |_|_| |_\__, | / / / /
+ =========|_|==============|___/=/_/_/_/
+${AnsiColor.BRIGHT_GREEN} :: Spring Boot Version ::                ${spring-boot.formatted-version}
+${AnsiColor.DEFAULT}
Index: asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/interceptor/UserInfoInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.qinian.interceptor;\r\n\r\nimport cn.hutool.core.util.StrUtil;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport org.qinian.utils.UserContext;\r\nimport org.springframework.web.servlet.HandlerInterceptor;\r\n\r\npublic class UserInfoInterceptor implements HandlerInterceptor {\r\n    @Override\r\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse\r\n            response, Object handler) throws Exception {\r\n        // 1. 获取请求头中的⽤⼾信息\r\n        String userInfo = request.getHeader(\"user-info\");\r\n        // 2. 判断是否为空\r\n        if (StrUtil.isNotBlank(userInfo)) {\r\n            // 不为空，保存到 ThreadLocal\r\n            UserContext.setUser(Long.valueOf(userInfo));\r\n        }\r\n\r\n        // 3.放⾏\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void afterCompletion(HttpServletRequest request,\r\n                                HttpServletResponse response, Object handler, Exception ex) throws Exception {\r\n        // 移除⽤⼾\r\n        UserContext.removeUser();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/interceptor/UserInfoInterceptor.java b/asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/interceptor/UserInfoInterceptor.java
--- a/asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/interceptor/UserInfoInterceptor.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/interceptor/UserInfoInterceptor.java	(date 1726222164602)
@@ -10,7 +10,7 @@
     @Override
     public boolean preHandle(HttpServletRequest request, HttpServletResponse
             response, Object handler) throws Exception {
-        // 1. 获取请求头中的⽤⼾信息
+        // 1. 获取请求头中的用户信息
         String userInfo = request.getHeader("user-info");
         // 2. 判断是否为空
         if (StrUtil.isNotBlank(userInfo)) {
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/listener/FPRegisterListener.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/listener/FPRegisterListener.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/listener/FPRegisterListener.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/listener/FPRegisterListener.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/listener/FPRegisterListener.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/listener/FPRegisterListener.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/listener/FPRegisterListener.java	(date 1726316993155)
@@ -1,4 +1,4 @@
-package org.qinian.listener;
+package org.leyramu.listener;
 
 import cn.hutool.core.bean.BeanUtil;
 import lombok.RequiredArgsConstructor;
@@ -6,14 +6,13 @@
 import org.qinian.domain.dto.fishingPlatoon.FishingPlatoonRegisterFormDTO;
 import org.qinian.domain.pojo.BusinessLicense;
 import org.qinian.domain.pojo.FishingPlatoon;
-import org.qinian.entity.QCCInfo;
-import org.qinian.enums.UserStatus;
-import org.qinian.model.RemoteEmailService;
-import org.qinian.service.IBusinessLicenseService;
-import org.qinian.service.IFishingPlatoonService;
-import org.qinian.utils.AESUtil;
-import org.qinian.utils.Base64Util;
-import org.qinian.utils.UniqueInviteCodeUtil;
+import leyramu.qinian.asc.common.base.enums.UserStatus;
+import org.qinian.domain.model.RemoteEmailService;
+import org.leyramu.service.IBusinessLicenseService;
+import org.leyramu.service.IFishingPlatoonService;
+import leyramu.qinian.asc.common.base.utils.AESUtil;
+import leyramu.qinian.asc.common.base.utils.Base64Util;
+import leyramu.qinian.asc.common.base.utils.UniqueInviteCodeUtil;
 import org.springframework.amqp.rabbit.annotation.Exchange;
 import org.springframework.amqp.rabbit.annotation.Queue;
 import org.springframework.amqp.rabbit.annotation.QueueBinding;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/AdminController.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/AdminController.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/AdminController.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/AdminController.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/AdminController.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/AdminController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/AdminController.java	(date 1726316993251)
@@ -1,12 +1,12 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 
 import lombok.RequiredArgsConstructor;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.UpdatePWDDTO;
 import org.qinian.domain.dto.admin.AdminLoginFormDTO;
 import org.qinian.domain.vo.UserLoginVO;
-import org.qinian.service.IAdminService;
+import org.leyramu.service.IAdminService;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PutMapping;
 import org.springframework.web.bind.annotation.RequestMapping;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IIdentityCardService.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IIdentityCardService.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IIdentityCardService.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IIdentityCardService.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IIdentityCardService.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IIdentityCardService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IIdentityCardService.java	(date 1726316993337)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.pojo.IdentityCard;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IFishermenService.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IFishermenService.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IFishermenService.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IFishermenService.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IFishermenService.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IFishermenService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IFishermenService.java	(date 1726316993388)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.dto.UpdatePWDDTO;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IFishingPlatoonService.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IFishingPlatoonService.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IFishingPlatoonService.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IFishingPlatoonService.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IFishingPlatoonService.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IFishingPlatoonService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IFishingPlatoonService.java	(date 1726316993122)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.dto.UpdatePWDDTO;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IAdminService.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IAdminService.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IAdminService.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IAdminService.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IAdminService.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IAdminService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IAdminService.java	(date 1726316993136)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.dto.UpdatePWDDTO;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IBusinessLicenseService.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IBusinessLicenseService.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IBusinessLicenseService.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IBusinessLicenseService.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IBusinessLicenseService.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/IBusinessLicenseService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/IBusinessLicenseService.java	(date 1726316993241)
@@ -1,8 +1,9 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
+import org.json.JSONException;
 import org.qinian.domain.pojo.BusinessLicense;
-import org.qinian.entity.QCCInfo;
+import leyramu.qinian.asc.common.base.entity.QCCInfo;
 
 /**
  * <p>
@@ -19,5 +20,5 @@
      * @param imageBase 图片的base64编码（经过ase解密）
      * @return 营业许可字符串
      */
-    QCCInfo checkBL(String imageBase);
+    QCCInfo checkBL(String imageBase) throws JSONException;
 }
Index: asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/WeatherInfo.java
===================================================================
diff --git a/asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/WeatherInfo.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/entity/WeatherInfo.java
rename from asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/WeatherInfo.java
rename to asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/entity/WeatherInfo.java
--- a/asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/WeatherInfo.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/entity/WeatherInfo.java	(date 1726310283785)
@@ -1,4 +1,4 @@
-package org.qinian.entity;
+package leyramu.qinian.asc.common.base.entity;
 
 import com.fasterxml.jackson.annotation.JsonFormat;
 import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
Index: asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/BusinessLicInfo.java
===================================================================
diff --git a/asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/BusinessLicInfo.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/entity/BusinessLicInfo.java
rename from asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/BusinessLicInfo.java
rename to asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/entity/BusinessLicInfo.java
--- a/asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/BusinessLicInfo.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/entity/BusinessLicInfo.java	(date 1726310283633)
@@ -1,4 +1,4 @@
-package org.qinian.entity;
+package leyramu.qinian.asc.common.base.entity;
 
 import lombok.AllArgsConstructor;
 import lombok.Data;
Index: asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/QCCInfo.java
===================================================================
diff --git a/asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/QCCInfo.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/entity/QCCInfo.java
rename from asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/QCCInfo.java
rename to asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/entity/QCCInfo.java
--- a/asc-java/asc-common/asc-common-utils/src/main/java/org/qinian/entity/QCCInfo.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/entity/QCCInfo.java	(date 1726310283676)
@@ -1,4 +1,4 @@
-package org.qinian.entity;
+package leyramu.qinian.asc.common.base.entity;
 
 import lombok.AllArgsConstructor;
 import lombok.Data;
Index: asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/controller/WeatherMonitorController.java
===================================================================
diff --git a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/controller/WeatherMonitorController.java b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/controller/WeatherMonitorController.java
rename from asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/controller/WeatherMonitorController.java
rename to asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/controller/WeatherMonitorController.java
--- a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/controller/WeatherMonitorController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/controller/WeatherMonitorController.java	(date 1726316993318)
@@ -1,11 +1,11 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 import cn.hutool.core.bean.BeanUtil;
 import lombok.RequiredArgsConstructor;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.weather.WeatherAddDto;
 import org.qinian.domain.pojo.WeatherMonitor;
-import org.qinian.service.IWeatherMonitorService;
+import org.leyramu.service.IWeatherMonitorService;
 import org.springframework.web.bind.annotation.*;
 
 import java.time.LocalDateTime;
Index: asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/dao/FishRaftPointMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/dao/FishRaftPointMapper.java b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/mapper/FishRaftPointMapper.java
rename from asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/dao/FishRaftPointMapper.java
rename to asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/mapper/FishRaftPointMapper.java
--- a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/dao/FishRaftPointMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/mapper/FishRaftPointMapper.java	(date 1726316993351)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.apache.ibatis.annotations.Select;
Index: asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/scheduled/LoopMain.java
===================================================================
diff --git a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/scheduled/LoopMain.java b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/scheduled/LoopMain.java
rename from asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/scheduled/LoopMain.java
rename to asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/scheduled/LoopMain.java
--- a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/scheduled/LoopMain.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/scheduled/LoopMain.java	(date 1726316993395)
@@ -1,12 +1,12 @@
-package org.qinian.scheduled;
+package org.leyramu.scheduled;
 
 import lombok.RequiredArgsConstructor;
 import org.qinian.domain.dto.weather.WeatherAddDto;
 import org.qinian.domain.dto.weather.WeatherLoopAddDto;
-import org.qinian.entity.WeatherInfo;
-import org.qinian.model.RemoteWeatherService;
-import org.qinian.utils.LocationUtil;
-import org.qinian.utils.WeatherUtil;
+import leyramu.qinian.asc.common.base.entity.WeatherInfo;
+import org.qinian.domain.model.RemoteWeatherService;
+import leyramu.qinian.asc.common.base.utils.LocationUtil;
+import leyramu.qinian.asc.common.base.utils.WeatherUtil;
 import org.springframework.scheduling.annotation.Scheduled;
 import org.springframework.stereotype.Component;
 
Index: asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/controller/LoopMainController.java
===================================================================
diff --git a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/controller/LoopMainController.java b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/controller/LoopMainController.java
rename from asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/controller/LoopMainController.java
rename to asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/controller/LoopMainController.java
--- a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/controller/LoopMainController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/controller/LoopMainController.java	(date 1726316993402)
@@ -1,7 +1,7 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 import lombok.RequiredArgsConstructor;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.weather.WeatherLoopAddDto;
 import org.springframework.web.bind.annotation.*;
 
Index: asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/service/IWeatherMonitorService.java
===================================================================
diff --git a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/service/IWeatherMonitorService.java b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/service/IWeatherMonitorService.java
rename from asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/service/IWeatherMonitorService.java
rename to asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/service/IWeatherMonitorService.java
--- a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/service/IWeatherMonitorService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/service/IWeatherMonitorService.java	(date 1726316993185)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.pojo.WeatherMonitor;
Index: asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/dao/WeatherMonitorMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/dao/WeatherMonitorMapper.java b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/mapper/WeatherMonitorMapper.java
rename from asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/dao/WeatherMonitorMapper.java
rename to asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/mapper/WeatherMonitorMapper.java
--- a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/dao/WeatherMonitorMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/mapper/WeatherMonitorMapper.java	(date 1726316993145)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.qinian.domain.pojo.WeatherMonitor;
Index: asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/config/ThreadSafeArrayConfig.java
===================================================================
diff --git a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/config/ThreadSafeArrayConfig.java b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/config/ThreadSafeArrayConfig.java
rename from asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/config/ThreadSafeArrayConfig.java
rename to asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/config/ThreadSafeArrayConfig.java
--- a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/config/ThreadSafeArrayConfig.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/config/ThreadSafeArrayConfig.java	(date 1726316993165)
@@ -1,11 +1,11 @@
-package org.qinian.config;
+package org.leyramu.config;
 
 import com.fasterxml.jackson.databind.ObjectMapper;
 import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
 import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
 import org.qinian.domain.dto.weather.WeatherLoopAddDto;
 import org.qinian.domain.vo.GetRaftVo;
-import org.qinian.model.RemoteRaftService;
+import org.qinian.domain.model.RemoteRaftService;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/dao/AlgorithmMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/dao/AlgorithmMapper.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/mapper/AlgorithmMapper.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/dao/AlgorithmMapper.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/mapper/AlgorithmMapper.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/dao/AlgorithmMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/mapper/AlgorithmMapper.java	(date 1726316993217)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.qinian.domain.pojo.Algorithm;
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/dao/RecognitionInfoMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/dao/RecognitionInfoMapper.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/mapper/RecognitionInfoMapper.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/dao/RecognitionInfoMapper.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/mapper/RecognitionInfoMapper.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/dao/RecognitionInfoMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/mapper/RecognitionInfoMapper.java	(date 1726316993340)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.qinian.domain.pojo.RecognitionInfo;
Index: asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/controller/FishRaftPointController.java
===================================================================
diff --git a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/controller/FishRaftPointController.java b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/controller/FishRaftPointController.java
rename from asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/controller/FishRaftPointController.java
rename to asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/controller/FishRaftPointController.java
--- a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/controller/FishRaftPointController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/controller/FishRaftPointController.java	(date 1726316993270)
@@ -1,17 +1,17 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 import cn.hutool.core.bean.BeanUtil;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.fishRaft.AddFishRaftDto;
 import org.qinian.domain.dto.fishRaft.AddLocationDto;
 import org.qinian.domain.dto.fishRaft.PyRaftDto;
 import org.qinian.domain.dto.weather.WeatherLoopAddDto;
 import org.qinian.domain.pojo.FishRaftPoint;
 import org.qinian.domain.vo.GetRaftVo;
-import org.qinian.model.RemoteWeatherService;
-import org.qinian.service.IFishRaftPointService;
-import org.qinian.service.ILocationService;
-import org.qinian.utils.HttpRequestSender;
+import org.qinian.domain.model.RemoteWeatherService;
+import org.leyramu.service.IFishRaftPointService;
+import org.leyramu.service.ILocationService;
+import leyramu.qinian.asc.common.base.utils.HttpRequestSender;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.*;
 
Index: asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/controller/LocationController.java
===================================================================
diff --git a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/controller/LocationController.java b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/controller/LocationController.java
rename from asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/controller/LocationController.java
rename to asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/controller/LocationController.java
--- a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/controller/LocationController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/controller/LocationController.java	(date 1726316993140)
@@ -1,10 +1,10 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.fishRaft.AddLocationDto;
 import org.qinian.domain.pojo.Location;
-import org.qinian.service.ILocationService;
+import org.leyramu.service.ILocationService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.*;
 
Index: asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/ILocationService.java
===================================================================
diff --git a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/ILocationService.java b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/ILocationService.java
rename from asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/ILocationService.java
rename to asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/ILocationService.java
--- a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/ILocationService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/ILocationService.java	(date 1726316993126)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.dto.fishRaft.AddLocationDto;
Index: asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/dao/LocationMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/dao/LocationMapper.java b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/mapper/LocationMapper.java
rename from asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/dao/LocationMapper.java
rename to asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/mapper/LocationMapper.java
--- a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/dao/LocationMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/mapper/LocationMapper.java	(date 1726316993259)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.qinian.domain.pojo.Location;
Index: asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/IFishRaftPointService.java
===================================================================
diff --git a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/IFishRaftPointService.java b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/IFishRaftPointService.java
rename from asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/IFishRaftPointService.java
rename to asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/IFishRaftPointService.java
--- a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/IFishRaftPointService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/IFishRaftPointService.java	(date 1726316993194)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.pojo.FishRaftPoint;
Index: asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/IAlertInfoService.java
===================================================================
diff --git a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/IAlertInfoService.java b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/IAlertInfoService.java
rename from asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/IAlertInfoService.java
rename to asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/IAlertInfoService.java
--- a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/IAlertInfoService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/IAlertInfoService.java	(date 1726316993208)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.pojo.AlertInfo;
Index: asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/IAlertTypeService.java
===================================================================
diff --git a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/IAlertTypeService.java b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/IAlertTypeService.java
rename from asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/IAlertTypeService.java
rename to asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/IAlertTypeService.java
--- a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/IAlertTypeService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/IAlertTypeService.java	(date 1726316993278)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.pojo.AlertType;
Index: asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/dao/AlertInfoMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/dao/AlertInfoMapper.java b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/mapper/AlertInfoMapper.java
rename from asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/dao/AlertInfoMapper.java
rename to asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/mapper/AlertInfoMapper.java
--- a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/dao/AlertInfoMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/mapper/AlertInfoMapper.java	(date 1726316993354)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 /**
  * 11
  **/
Index: asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/dao/AlertTypeMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/dao/AlertTypeMapper.java b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/mapper/AlertTypeMapper.java
rename from asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/dao/AlertTypeMapper.java
rename to asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/mapper/AlertTypeMapper.java
--- a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/dao/AlertTypeMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/mapper/AlertTypeMapper.java	(date 1726316993176)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.qinian.domain.pojo.AlertType;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/FishingPlatoonController.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/FishingPlatoonController.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/FishingPlatoonController.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/FishingPlatoonController.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/FishingPlatoonController.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/FishingPlatoonController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/FishingPlatoonController.java	(date 1726316993263)
@@ -1,8 +1,8 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 
 import lombok.RequiredArgsConstructor;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.EmailDto;
 import org.qinian.domain.dto.UpdatePWDDTO;
 import org.qinian.domain.dto.fishingPlatoon.FishingPlatoonLoginFormDTO;
@@ -10,7 +10,7 @@
 import org.qinian.domain.dto.fishingPlatoon.SelectByInvitationKeyDto;
 import org.qinian.domain.pojo.FishingPlatoon;
 import org.qinian.domain.vo.UserLoginVO;
-import org.qinian.service.IFishingPlatoonService;
+import org.leyramu.service.IFishingPlatoonService;
 import org.springframework.web.bind.annotation.*;
 
 /**
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/IdentityCardController.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/IdentityCardController.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/IdentityCardController.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/IdentityCardController.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/IdentityCardController.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/IdentityCardController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/IdentityCardController.java	(date 1726316993373)
@@ -1,11 +1,11 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 
 import cn.hutool.core.bean.BeanUtil;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.identityCard.AddIdentityCardDto;
 import org.qinian.domain.pojo.IdentityCard;
-import org.qinian.service.IIdentityCardService;
+import org.leyramu.service.IIdentityCardService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.*;
 
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/BusinessLicenseController.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/BusinessLicenseController.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/BusinessLicenseController.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/BusinessLicenseController.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/BusinessLicenseController.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/BusinessLicenseController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/BusinessLicenseController.java	(date 1726316993357)
@@ -1,11 +1,11 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 
 import cn.hutool.core.bean.BeanUtil;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.businessLicense.AddBusinessLicenseDto;
 import org.qinian.domain.pojo.BusinessLicense;
-import org.qinian.service.IBusinessLicenseService;
+import org.leyramu.service.IBusinessLicenseService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.*;
 
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/FishermenController.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/FishermenController.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/FishermenController.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/FishermenController.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/FishermenController.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/controller/FishermenController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/controller/FishermenController.java	(date 1726316993199)
@@ -1,15 +1,15 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 
 import lombok.RequiredArgsConstructor;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.EmailDto;
 import org.qinian.domain.dto.UpdatePWDDTO;
 import org.qinian.domain.dto.fishermen.FishermenLoginFormDTO;
 import org.qinian.domain.dto.fishermen.FishermenRegisterFormDTO;
 import org.qinian.domain.pojo.Fishermen;
 import org.qinian.domain.vo.UserLoginVO;
-import org.qinian.service.IFishermenService;
+import org.leyramu.service.IFishermenService;
 import org.springframework.web.bind.annotation.*;
 
 /**
Index: asc-java/asc-service/asc-email-service/src/main/java/org/qinian/controller/CodeController.java
===================================================================
diff --git a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/controller/CodeController.java b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/controller/CodeController.java
rename from asc-java/asc-service/asc-email-service/src/main/java/org/qinian/controller/CodeController.java
rename to asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/controller/CodeController.java
--- a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/controller/CodeController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/controller/CodeController.java	(date 1726316993308)
@@ -1,9 +1,9 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.email.code.CheckCodeDto;
 import org.qinian.domain.dto.email.code.GetCodeDto;
-import org.qinian.service.CodeService;
+import org.leyramu.service.CodeService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.*;
 
Index: asc-java/asc-service/asc-email-service/src/main/java/org/qinian/controller/EmailController.java
===================================================================
diff --git a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/controller/EmailController.java b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/controller/EmailController.java
rename from asc-java/asc-service/asc-email-service/src/main/java/org/qinian/controller/EmailController.java
rename to asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/controller/EmailController.java
--- a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/controller/EmailController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/controller/EmailController.java	(date 1726316993297)
@@ -1,10 +1,10 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.email.SendEmailWithAttachmentDto;
 import org.qinian.domain.dto.email.SendSimpleEmailDto;
 import org.qinian.domain.dto.email.SendVerificationCodeDto;
-import org.qinian.service.EmailService;
+import org.leyramu.service.EmailService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;
Index: asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/EmailService.java
===================================================================
diff --git a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/EmailService.java b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/EmailService.java
rename from asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/EmailService.java
rename to asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/EmailService.java
--- a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/EmailService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/EmailService.java	(date 1726316993347)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import org.qinian.domain.dto.email.SendEmailWithAttachmentDto;
 import org.qinian.domain.dto.email.SendSimpleEmailDto;
Index: asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/controller/AlertTypeController.java
===================================================================
diff --git a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/controller/AlertTypeController.java b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/controller/AlertTypeController.java
rename from asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/controller/AlertTypeController.java
rename to asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/controller/AlertTypeController.java
--- a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/controller/AlertTypeController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/controller/AlertTypeController.java	(date 1726316993368)
@@ -1,12 +1,12 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 //
 
 import cn.hutool.core.bean.BeanUtil;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.alert.AddAlertTypeDto;
 import org.qinian.domain.pojo.AlertType;
-import org.qinian.service.IAlertTypeService;
+import org.leyramu.service.IAlertTypeService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.*;
 
Index: asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/CodeService.java
===================================================================
diff --git a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/CodeService.java b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/CodeService.java
rename from asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/CodeService.java
rename to asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/CodeService.java
--- a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/CodeService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/CodeService.java	(date 1726316993322)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 public interface CodeService {
     public String generateVerifyCode(String mail, int length);
Index: asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/controller/AlertInfoController.java
===================================================================
diff --git a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/controller/AlertInfoController.java b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/controller/AlertInfoController.java
rename from asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/controller/AlertInfoController.java
rename to asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/controller/AlertInfoController.java
--- a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/controller/AlertInfoController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/controller/AlertInfoController.java	(date 1726316993300)
@@ -1,11 +1,11 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 import cn.hutool.core.bean.BeanUtil;
 import lombok.RequiredArgsConstructor;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.alert.AddAlertInfoDto;
 import org.qinian.domain.pojo.AlertInfo;
-import org.qinian.service.IAlertInfoService;
+import org.leyramu.service.IAlertInfoService;
 import org.springframework.web.bind.annotation.*;
 
 import java.time.LocalDateTime;
Index: asc-java/asc-common/asc-common-datascope/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-datascope/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-datascope/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1726317097576)
+++ b/asc-java/asc-common/asc-common-datascope/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1726317097576)
@@ -0,0 +1,9 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.qinian.asc.common.datascope.aspect.DataScopeAspect
Index: asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/utils/DateUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/utils/DateUtil.java b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/utils/DateUtil.java
new file mode 100644
--- /dev/null	(date 1726289601285)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/utils/DateUtil.java	(date 1726289601285)
@@ -0,0 +1,474 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.i18n.utils;
+
+import leyramu.qinian.asc.common.i18n.common.exception.SystemException;
+
+import java.time.*;
+import java.time.format.DateTimeFormatter;
+import java.time.format.TextStyle;
+import java.time.temporal.TemporalAdjusters;
+import java.util.Locale;
+
+/**
+ * 日期处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+public class DateUtil {
+
+    /**
+     * yyyy-MM-dd HH:mm:ss
+     */
+    public static final int YYYY_ROD_MM_ROD_DD_SPACE_HH_RISK_HH_RISK_SS = 0;
+
+    /**
+     * yyyyMMddHHmmss
+     */
+    public static final int YYYYMMDDHHMMSS = 1;
+
+    /**
+     * yyyyMM
+     */
+    public static final int YYYYMM = 2;
+
+    /**
+     * yyyy-MM-dd
+     */
+    public static final int YYYY_ROD_MM_ROD_DD = 3;
+
+    /**
+     * yyyy年MM月dd日
+     */
+    public static final int YYYY_TEXT_MM_TEXT_DD_TEXT = 4;
+
+    /**
+     * yyyy.MM.dd
+     */
+    public static final int YYYY_DOT_MM_DOT_DD = 5;
+
+    /**
+     * yyyymmdd
+     */
+    public static final int YYYYMMDD = 6;
+
+    /**
+     * 星期一
+     */
+    public static final int MONDAY = 0;
+
+    /**
+     * 时间格式
+     */
+    private static final String[] TIME_PATTERNS = {Constant.YYYY_ROD_MM_ROD_DD_SPACE_HH_RISK_HH_RISK_SS,
+            Constant.YYYYMMDDHHMMSS, Constant.YYYYMM, Constant.YYYY_ROD_MM_ROD_DD, Constant.YYYY_TEXT_MM_TEXT_DD_TEXT,
+            Constant.YYYY_DOT_MM_DOT_DD, Constant.YYYYMMDD};
+
+    /**
+     * 星期数组
+     */
+    private static final DayOfWeek[] WEEK_PATTERNS = {DayOfWeek.MONDAY};
+
+    /**
+     * 时间格式
+     *
+     * @param index 索引
+     * @return 时间格式
+     */
+    public static String getTimePattern(int index) {
+        if (index >= TIME_PATTERNS.length || index < 0) {
+            throw new SystemException("时间格式不存在");
+        }
+        return TIME_PATTERNS[index];
+    }
+
+    /**
+     * 星期格式
+     *
+     * @param index 索引
+     * @return 星球格式
+     */
+    public static DayOfWeek getWeekPattern(int index) {
+        if (index >= WEEK_PATTERNS.length || index < 0) {
+            throw new SystemException("星期格式不存在");
+        }
+        return WEEK_PATTERNS[index];
+    }
+
+    /**
+     * 时间格式化
+     *
+     * @param localDateTime 时间
+     * @param index         索引
+     * @return 字符串
+     */
+    public static String format(LocalDateTime localDateTime, int index) {
+        DateTimeFormatter dateTimeFormatter = getDateTimeFormatter(index);
+        return localDateTime.format(dateTimeFormatter);
+    }
+
+    /**
+     * 日期格式化
+     *
+     * @param localDate 日期
+     * @param index     索引
+     * @return 字符串
+     */
+    public static String format(LocalDate localDate, int index) {
+        DateTimeFormatter dateTimeFormatter = getDateTimeFormatter(index);
+        return localDate.format(dateTimeFormatter);
+    }
+
+    /**
+     * 格式化配置
+     *
+     * @param index 索引
+     * @return 格式化配置
+     */
+    public static DateTimeFormatter getDateTimeFormatter(int index) {
+        String timePattern = getTimePattern(index);
+        return DateTimeFormatter.ofPattern(timePattern);
+    }
+
+    /**
+     * 判断 d1 在 d2 后
+     *
+     * @param localDateTime1 时间1
+     * @param localDateTime2 时间2
+     * @return 判断结果
+     */
+    public static boolean isAfter(LocalDateTime localDateTime1, LocalDateTime localDateTime2) {
+        return localDateTime1.isAfter(localDateTime2);
+    }
+
+    /**
+     * 判断 d1 在 d2 前
+     *
+     * @param localDateTime1 时间1
+     * @param localDateTime2 时间2
+     * @return 判断结果
+     */
+    public static boolean isBefore(LocalDateTime localDateTime1, LocalDateTime localDateTime2) {
+        return localDateTime1.isBefore(localDateTime2);
+    }
+
+    /**
+     * 判断 d1 在 d2 前
+     *
+     * @param localDate1 日期1
+     * @param localDate2 日期2
+     * @return 判断结果
+     */
+    public static boolean isBefore(LocalDate localDate1, LocalDate localDate2) {
+        return localDate1.isBefore(localDate2);
+    }
+
+    /**
+     * 字符串转换时间
+     *
+     * @param dateTime 时间
+     * @param index    索引
+     * @return 时间
+     */
+    public static LocalDateTime parseTime(String dateTime, int index) {
+        String timePattern = getTimePattern(index);
+        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(timePattern);
+        return LocalDateTime.parse(dateTime, dateTimeFormatter);
+    }
+
+    /**
+     * 字符串转换日期
+     *
+     * @param dateTime 日期
+     * @param index    索引
+     * @return 日期
+     */
+    public static LocalDate parseDate(String dateTime, int index) {
+        String timePattern = getTimePattern(index);
+        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(timePattern);
+        return LocalDate.parse(dateTime, dateTimeFormatter);
+    }
+
+    /**
+     * 获取 前/后 x天 的时间
+     *
+     * @param localDateTime 时间
+     * @param days          天
+     * @return 时间
+     */
+    public static LocalDateTime plusDays(LocalDateTime localDateTime, long days) {
+        return localDateTime.plusDays(days);
+    }
+
+    /**
+     * 日期 前/后 x天 的日期
+     *
+     * @param localDate 日期
+     * @param days      天
+     * @return 日期
+     */
+    public static LocalDate plusDays(LocalDate localDate, long days) {
+        return localDate.plusDays(days);
+    }
+
+    /**
+     * 获取 前/后 x秒 的时间
+     *
+     * @param localDateTime 时间
+     * @param seconds       秒
+     * @return 时间
+     */
+    public static LocalDateTime plusSeconds(LocalDateTime localDateTime, long seconds) {
+        return localDateTime.plusSeconds(seconds);
+    }
+
+    /**
+     * 获取 前/后 x月 的时间
+     *
+     * @param localDateTime 时间
+     * @param months        月
+     * @return 时间
+     */
+    public static LocalDateTime plusMonths(LocalDateTime localDateTime, long months) {
+        return localDateTime.plusMonths(months);
+    }
+
+    /**
+     * 获取 前/后 x月 的日期
+     *
+     * @param localDate 日期
+     * @param months    月
+     * @return 日期
+     */
+    public static LocalDate plusMonths(LocalDate localDate, long months) {
+        return localDate.plusMonths(months);
+    }
+
+    /**
+     * 获取 前/后 x年 的时间
+     *
+     * @param localDateTime 时间
+     * @param years         年
+     * @return 时间
+     */
+    public static LocalDateTime plusYears(LocalDateTime localDateTime, long years) {
+        return localDateTime.plusYears(years);
+    }
+
+    /**
+     * 现在时间
+     *
+     * @return 时间
+     */
+    public static LocalDateTime now() {
+        return LocalDateTime.now();
+    }
+
+    /**
+     * 现在日期
+     *
+     * @return 日期
+     */
+    public static LocalDate nowDate() {
+        return LocalDate.now();
+    }
+
+    /**
+     * 时间戳转时间
+     *
+     * @param timestamp 时间戳
+     * @return 时间
+     */
+    public static LocalDateTime getLocalDateTimeOfTimestamp(long timestamp) {
+        Instant instant = Instant.ofEpochMilli(timestamp);
+        ZoneId zoneId = ZoneId.systemDefault();
+        return LocalDateTime.ofInstant(instant, zoneId);
+    }
+
+    /**
+     * 时间转时间戳
+     *
+     * @param localDateTime 时间
+     * @return 时间戳
+     */
+    public static long getTimestampOfLocalDateTime(LocalDateTime localDateTime) {
+        ZoneId zoneId = ZoneId.systemDefault();
+        return localDateTime.atZone(zoneId).toInstant().toEpochMilli();
+    }
+
+    /**
+     * 开始时间到结束时间相差多少天
+     *
+     * @param start 开始时间
+     * @param end   结束时间
+     * @return 天
+     */
+    public static long getDays(LocalDateTime start, LocalDateTime end) {
+        return Duration.between(start, end).toDays();
+    }
+
+    /**
+     * 开始日期到结束日期相差多少天
+     *
+     * @param start 开始日期
+     * @param end   结束日期
+     * @return 天
+     */
+    public static long getDays(LocalDate start, LocalDate end) {
+        return Period.between(start, end).getDays();
+    }
+
+    /**
+     * 开始时间到结束时间相差多少小时
+     *
+     * @param start 开始时间
+     * @param end   结束时间
+     * @return 小时
+     */
+    public static long getHours(LocalDateTime start, LocalDateTime end) {
+        return Duration.between(start, end).toHours();
+    }
+
+    /**
+     * 开始日期到结束日期相差多少月
+     *
+     * @param start 开始日期
+     * @param end   结束日期
+     * @return 月
+     */
+    public static long getMonths(LocalDate start, LocalDate end) {
+        return Period.between(start, end).getMonths();
+    }
+
+    /**
+     * 开始日期到结束日期相差多少年
+     *
+     * @param start 开始日期
+     * @param end   结束日期
+     * @return 年
+     */
+    public static long getYears(LocalDate start, LocalDate end) {
+        return Period.between(start, end).getYears();
+    }
+
+    public static LocalDate getDayOfWeek(LocalDate localDate, int index) {
+        return localDate.with(TemporalAdjusters.nextOrSame(getWeekPattern(index)));
+    }
+
+    /**
+     * 开始时间到结束时间相差多少分钟
+     *
+     * @param start 开始时间
+     * @param end   结束时间
+     * @return 分钟
+     */
+    public static long getMinutes(LocalDateTime start, LocalDateTime end) {
+        return Duration.between(start, end).toMinutes();
+    }
+
+    /**
+     * 开始时间到结束时间相差多少秒
+     *
+     * @param start 开始时间
+     * @param end   结束时间
+     * @return 秒
+     */
+    public static long getSeconds(LocalDateTime start, LocalDateTime end) {
+        return Duration.between(start, end).toSeconds();
+    }
+
+    /**
+     * 开始时间到结束时间相差多少毫秒
+     *
+     * @param start 开始时间
+     * @param end   结束时间
+     * @return 毫秒
+     */
+    public static long getMillis(LocalDateTime start, LocalDateTime end) {
+        return Duration.between(start, end).toMillis();
+    }
+
+    /**
+     * 根据日期获取该月的第一天
+     *
+     * @param localDate 日期
+     * @return 该月的第一天
+     */
+    public static LocalDate getFirstDayOfMonth(LocalDate localDate) {
+        return localDate.with(TemporalAdjusters.firstDayOfMonth());
+    }
+
+    /**
+     * 根据日期获取这该月的最后一天
+     *
+     * @param localDate 日期
+     * @return 该月的最后一天
+     */
+    public static LocalDate getLastDayOfMonth(LocalDate localDate) {
+        return localDate.with(TemporalAdjusters.lastDayOfMonth());
+    }
+
+    /**
+     * 获取日期在该周的文本格式
+     *
+     * @param localDate 日期
+     * @return 文本格式
+     */
+    public static String getDayOfWeekText(LocalDate localDate) {
+        return localDate.getDayOfWeek().getDisplayName(TextStyle.FULL, Locale.getDefault());
+    }
+
+    /**
+     * 日期常量
+     */
+    public interface Constant {
+
+        /**
+         * yyyy-MM-dd HH:mm:ss
+         */
+        String YYYY_ROD_MM_ROD_DD_SPACE_HH_RISK_HH_RISK_SS = "yyyy-MM-dd HH:mm:ss";
+
+        /**
+         * yyyyMMddHHmmss
+         */
+        String YYYYMMDDHHMMSS = "yyyyMMddHHmmss";
+
+        /**
+         * yyyyMM
+         */
+        String YYYYMM = "yyyyMM";
+
+        /**
+         * yyyy-MM-dd
+         */
+        String YYYY_ROD_MM_ROD_DD = "yyyy-MM-dd";
+
+        /**
+         * yyyy年MM月dd日
+         */
+        String YYYY_TEXT_MM_TEXT_DD_TEXT = "yyyy年MM月dd日";
+
+        /**
+         * yyyy.MM.dd
+         */
+        String YYYY_DOT_MM_DOT_DD = "yyyy.MM.dd";
+
+        /**
+         * yyyyMMdd
+         */
+        String YYYYMMDD = "yyyyMMdd";
+
+        /**
+         * GMT+8
+         */
+        String DEFAULT_TIMEZONE = "GMT+8";
+    }
+}
Index: asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/config/MailAutoConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/config/MailAutoConfig.java b/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/config/MailAutoConfig.java
new file mode 100644
--- /dev/null	(date 1726289844768)
+++ b/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/config/MailAutoConfig.java	(date 1726289844768)
@@ -0,0 +1,39 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.mail.config;
+
+import leyramu.qinian.asc.common.mail.service.MailService;
+import leyramu.qinian.asc.common.mail.service.impl.QQMailServiceImpl;
+import org.springframework.boot.autoconfigure.AutoConfigureAfter;
+import org.springframework.boot.autoconfigure.mail.MailProperties;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.context.annotation.Bean;
+
+/**
+ * 邮件自动配置
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+@AutoConfigureAfter
+@EnableConfigurationProperties(MailProperties.class)
+public class MailAutoConfig {
+
+	/**
+	 * 邮件服务实现
+	 *
+	 * @param mailProperties 邮件配置
+	 * @return MailService
+	 */
+	@Bean
+	public MailService mailService(MailProperties mailProperties) {
+		return new QQMailServiceImpl(mailProperties);
+	}
+}
Index: asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Algorithm.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Algorithm.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/Algorithm.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Algorithm.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/Algorithm.java
--- a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Algorithm.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/Algorithm.java	(date 1726310283691)
@@ -6,7 +6,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.experimental.Accessors;
-import org.qinian.enums.AIStatus;
+import leyramu.qinian.asc.common.base.enums.AIStatus;
 
 import java.io.Serializable;
 
Index: asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/AlertInfo.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/AlertInfo.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/AlertInfo.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/AlertInfo.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/AlertInfo.java
--- a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/AlertInfo.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/AlertInfo.java	(date 1726310283625)
@@ -6,7 +6,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.experimental.Accessors;
-import org.qinian.enums.AlertLevels;
+import leyramu.qinian.asc.common.base.enums.AlertLevels;
 
 import java.io.Serializable;
 import java.time.LocalDateTime;
Index: asc-java/asc-common/asc-common-datascope/src/main/java/leyramu/qinian/asc/common/datascope/aspect/DataScopeAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-datascope/src/main/java/leyramu/qinian/asc/common/datascope/aspect/DataScopeAspect.java b/asc-java/asc-common/asc-common-datascope/src/main/java/leyramu/qinian/asc/common/datascope/aspect/DataScopeAspect.java
new file mode 100644
--- /dev/null	(date 1722175665133)
+++ b/asc-java/asc-common/asc-common-datascope/src/main/java/leyramu/qinian/asc/common/datascope/aspect/DataScopeAspect.java	(date 1722175665133)
@@ -0,0 +1,176 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.datascope.aspect;
+
+import leyramu.softwarecup.digEdu.common.security.utils.SecurityUtils;
+import leyramu.softwarecup.digEdu.common.core.context.SecurityContextHolder;
+import leyramu.softwarecup.digEdu.common.core.text.Convert;
+import leyramu.softwarecup.digEdu.common.core.utils.StringUtils;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import leyramu.softwarecup.digEdu.common.datascope.annotation.DataScope;
+import leyramu.softwarecup.digEdu.system.api.domain.SysRole;
+import leyramu.softwarecup.digEdu.system.api.domain.SysUser;
+import leyramu.softwarecup.digEdu.system.api.model.LoginUser;
+import org.aspectj.lang.JoinPoint;
+import org.aspectj.lang.annotation.Aspect;
+import org.aspectj.lang.annotation.Before;
+import org.springframework.stereotype.Component;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 数据过滤处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Aspect
+@Component
+public class DataScopeAspect {
+
+    /**
+     * 全部数据权限
+     */
+    public static final String DATA_SCOPE_ALL = "1";
+
+    /**
+     * 自定数据权限
+     */
+    public static final String DATA_SCOPE_CUSTOM = "2";
+
+    /**
+     * 部门数据权限
+     */
+    public static final String DATA_SCOPE_DEPT = "3";
+
+    /**
+     * 部门及以下数据权限
+     */
+    public static final String DATA_SCOPE_DEPT_AND_CHILD = "4";
+
+    /**
+     * 仅本人数据权限
+     */
+    public static final String DATA_SCOPE_SELF = "5";
+
+    /**
+     * 数据权限过滤关键字
+     */
+    public static final String DATA_SCOPE = "dataScope";
+
+    /**
+     * 清理数据权限
+     *
+     * @param point 切点
+     * @param controllerDataScope 数据权限注解
+     */
+    @Before("@annotation(controllerDataScope)")
+    public void doBefore(JoinPoint point, DataScope controllerDataScope) {
+        clearDataScope(point);
+        handleDataScope(point, controllerDataScope);
+    }
+
+    /**
+     * 数据权限过滤
+     *
+     * @param joinPoint 切点
+     * @param controllerDataScope 数据权限注解
+     */
+    protected void handleDataScope(final JoinPoint joinPoint, DataScope controllerDataScope) {
+        // 获取当前的用户
+        LoginUser loginUser = SecurityUtils.getLoginUser();
+        if (StringUtils.isNotNull(loginUser)) {
+            SysUser currentUser = loginUser.getSysUser();
+            // 如果是超级管理员，则不过滤数据
+            if (StringUtils.isNotNull(currentUser) && !currentUser.isAdmin()) {
+                String permission = StringUtils.defaultIfEmpty(controllerDataScope.permission(), SecurityContextHolder.getPermission());
+                dataScopeFilter(joinPoint, currentUser, controllerDataScope.deptAlias(),
+                        controllerDataScope.userAlias(), permission);
+            }
+        }
+    }
+
+    /**
+     * 数据范围过滤
+     *
+     * @param joinPoint  切点
+     * @param user       用户
+     * @param deptAlias  部门别名
+     * @param userAlias  用户别名
+     * @param permission 权限字符
+     */
+    public static void dataScopeFilter(JoinPoint joinPoint, SysUser user, String deptAlias, String userAlias, String permission) {
+        StringBuilder sqlString = new StringBuilder();
+        List<String> conditions = new ArrayList<>();
+        List<String> scopeCustomIds = new ArrayList<>();
+        user.getRoles().forEach(role -> {
+            if (DATA_SCOPE_CUSTOM.equals(role.getDataScope()) && StringUtils.containsAny(role.getPermissions(), Convert.toStrArray(permission))) {
+                scopeCustomIds.add(Convert.toStr(role.getRoleId()));
+            }
+        });
+
+        for (SysRole role : user.getRoles()) {
+            String dataScope = role.getDataScope();
+            if (conditions.contains(dataScope)) {
+                continue;
+            }
+            if (!StringUtils.containsAny(role.getPermissions(), Convert.toStrArray(permission))) {
+                continue;
+            }
+            if (DATA_SCOPE_ALL.equals(dataScope)) {
+                sqlString = new StringBuilder();
+                conditions.add(dataScope);
+                break;
+            } else if (DATA_SCOPE_CUSTOM.equals(dataScope)) {
+                if (scopeCustomIds.size() > 1) {
+                    // 多个自定数据权限使用in查询，避免多次拼接。
+                    sqlString.append(StringUtils.format(" OR {}.dept_id IN ( SELECT dept_id FROM sys_role_dept WHERE role_id in ({}) ) ", deptAlias, String.join(",", scopeCustomIds)));
+                } else {
+                    sqlString.append(StringUtils.format(" OR {}.dept_id IN ( SELECT dept_id FROM sys_role_dept WHERE role_id = {} ) ", deptAlias, role.getRoleId()));
+                }
+            } else if (DATA_SCOPE_DEPT.equals(dataScope)) {
+                sqlString.append(StringUtils.format(" OR {}.dept_id = {} ", deptAlias, user.getDeptId()));
+            } else if (DATA_SCOPE_DEPT_AND_CHILD.equals(dataScope)) {
+                sqlString.append(StringUtils.format(" OR {}.dept_id IN ( SELECT dept_id FROM sys_dept WHERE dept_id = {} or find_in_set( {} , ancestors ) )", deptAlias, user.getDeptId(), user.getDeptId()));
+            } else if (DATA_SCOPE_SELF.equals(dataScope)) {
+                if (StringUtils.isNotBlank(userAlias)) {
+                    sqlString.append(StringUtils.format(" OR {}.user_id = {} ", userAlias, user.getUserId()));
+                } else {
+                    // 数据权限为仅本人且没有userAlias别名不查询任何数据
+                    sqlString.append(StringUtils.format(" OR {}.dept_id = 0 ", deptAlias));
+                }
+            }
+            conditions.add(dataScope);
+        }
+
+        // 角色都不包含传递过来的权限字符，这个时候sqlString也会为空，所以要限制一下,不查询任何数据
+        if (StringUtils.isEmpty(conditions)) {
+            sqlString.append(StringUtils.format(" OR {}.dept_id = 0 ", deptAlias));
+        }
+
+        if (StringUtils.isNotBlank(sqlString.toString())) {
+            Object params = joinPoint.getArgs()[0];
+            if (StringUtils.isNotNull(params) && params instanceof BaseEntity baseEntity) {
+                baseEntity.getParams().put(DATA_SCOPE, " AND (" + sqlString.substring(4) + ")");
+            }
+        }
+    }
+
+    /**
+     * 拼接权限sql前先清空params.dataScope参数防止注入
+     */
+    private void clearDataScope(final JoinPoint joinPoint) {
+        Object params = joinPoint.getArgs()[0];
+        if (StringUtils.isNotNull(params) && params instanceof BaseEntity baseEntity) {
+            baseEntity.getParams().put(DATA_SCOPE, "");
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-datascope/src/main/java/leyramu/qinian/asc/common/datascope/annotation/DataScope.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-datascope/src/main/java/leyramu/qinian/asc/common/datascope/annotation/DataScope.java b/asc-java/asc-common/asc-common-datascope/src/main/java/leyramu/qinian/asc/common/datascope/annotation/DataScope.java
new file mode 100644
--- /dev/null	(date 1722344113727)
+++ b/asc-java/asc-common/asc-common-datascope/src/main/java/leyramu/qinian/asc/common/datascope/annotation/DataScope.java	(date 1722344113727)
@@ -0,0 +1,43 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.datascope.annotation;
+
+import java.lang.annotation.Documented;
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * 数据权限过滤注解
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Target(ElementType.METHOD)
+@Retention(RetentionPolicy.RUNTIME)
+@Documented
+public @interface DataScope {
+
+    /**
+     * 部门表的别名
+     */
+    String deptAlias() default "";
+
+    /**
+     * 用户表的别名
+     */
+    String userAlias() default "";
+
+    /**
+     * 权限字符（用于多个角色匹配符合要求的权限）默认根据权限注解@RequiresPermissions获取，多个权限用逗号分隔开来
+     */
+    String permission() default "";
+}
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/BaiduController.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/BaiduController.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/controller/BaiduController.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/BaiduController.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/controller/BaiduController.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/BaiduController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/controller/BaiduController.java	(date 1726316993293)
@@ -1,8 +1,8 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
-import org.qinian.domain.Result;
-import org.qinian.entity.BusinessLicInfo;
-import org.qinian.service.BaiduOCRService;
+import domain.Result;
+import leyramu.qinian.asc.common.base.entity.BusinessLicInfo;
+import org.leyramu.service.BaiduOCRService;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.*;
 
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/RecognitionInfoController.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/RecognitionInfoController.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/controller/RecognitionInfoController.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/RecognitionInfoController.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/controller/RecognitionInfoController.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/RecognitionInfoController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/controller/RecognitionInfoController.java	(date 1726316993212)
@@ -1,4 +1,4 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 
 import org.springframework.web.bind.annotation.RequestMapping;
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/IRecognitionInfoService.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/IRecognitionInfoService.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/IRecognitionInfoService.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/IRecognitionInfoService.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/IRecognitionInfoService.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/IRecognitionInfoService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/IRecognitionInfoService.java	(date 1726316993289)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.pojo.RecognitionInfo;
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/AlgorithmController.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/AlgorithmController.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/controller/AlgorithmController.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/AlgorithmController.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/controller/AlgorithmController.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/controller/AlgorithmController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/controller/AlgorithmController.java	(date 1726316993109)
@@ -1,4 +1,4 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 
 import org.springframework.web.bind.annotation.RequestMapping;
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/IAlgorithmService.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/IAlgorithmService.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/IAlgorithmService.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/IAlgorithmService.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/IAlgorithmService.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/IAlgorithmService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/IAlgorithmService.java	(date 1726316993384)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.pojo.Algorithm;
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/utils/BaiDuOCRUtil.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/utils/BaiDuOCRUtil.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/utils/BaiDuOCRUtil.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/utils/BaiDuOCRUtil.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/utils/BaiDuOCRUtil.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/utils/BaiDuOCRUtil.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/utils/BaiDuOCRUtil.java	(date 1726316993180)
@@ -1,8 +1,8 @@
-package org.qinian.utils;
+package org.leyramu.utils;
 
 import lombok.RequiredArgsConstructor;
 import org.json.JSONObject;
-import org.qinian.properties.BaiduProperties;
+import org.leyramu.properties.BaiduProperties;
 import org.springframework.stereotype.Component;
 
 import java.io.BufferedReader;
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/BaiduOCRService.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/BaiduOCRService.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/BaiduOCRService.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/BaiduOCRService.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/BaiduOCRService.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/BaiduOCRService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/BaiduOCRService.java	(date 1726316993376)
@@ -1,6 +1,6 @@
-package org.qinian.service;
+package org.leyramu.service;
 
-import org.qinian.entity.BusinessLicInfo;
+import leyramu.qinian.asc.common.base.entity.BusinessLicInfo;
 
 import java.util.HashMap;
 
Index: asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/DTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/DTO.java b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/DTO.java
new file mode 100644
--- /dev/null	(date 1726289336060)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/DTO.java	(date 1726289336060)
@@ -0,0 +1,28 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.i18n.dto;
+
+import java.io.Serial;
+import java.io.Serializable;
+
+/**
+ * 数据传输对象
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+public abstract class DTO implements Serializable {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+}
Index: asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/ApiLog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/ApiLog.java b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/ApiLog.java
new file mode 100644
--- /dev/null	(date 1726289336064)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/ApiLog.java	(date 1726289336064)
@@ -0,0 +1,98 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.i18n.dto;
+
+import leyramu.qinian.asc.common.i18n.utils.DateUtil;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+
+import java.time.LocalDateTime;
+
+/**
+ * API日志
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@EqualsAndHashCode(callSuper = true)
+public abstract class ApiLog extends DTO {
+
+    /**
+     * API编码
+     */
+    private String code;
+
+    /**
+     * API名称
+     */
+    private String name;
+
+    /**
+     * 请求参数
+     */
+    private String param;
+
+    /**
+     * 状态
+     */
+    private Integer status;
+
+    /**
+     * 错误信息
+     */
+    private String errorMessage;
+
+    /**
+     * 描述
+     */
+    private String desc;
+
+    /**
+     * 时间戳
+     */
+    private LocalDateTime timestamp;
+
+    /**
+     * 获取API编码
+     *
+     * @return API编码
+     */
+    protected abstract String getApiCode();
+
+    /**
+     * 获取API名称
+     *
+     * @return API名称
+     */
+    protected abstract String getApiName();
+
+    /**
+     * 更新日志
+     *
+     * @param param        请求参数
+     * @param status       状态
+     * @param errorMessage 错误信息
+     * @param desc         描述
+     */
+    public void update(String param, Integer status, String errorMessage, String desc) {
+        this.code = getApiCode();
+        this.name = getApiName();
+        this.param = param;
+        this.status = status;
+        this.desc = desc;
+        this.errorMessage = errorMessage;
+        this.timestamp = DateUtil.now();
+    }
+}
Index: asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/controller/FishRaftMonitorController.java
===================================================================
diff --git a/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/controller/FishRaftMonitorController.java b/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/controller/FishRaftMonitorController.java
rename from asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/controller/FishRaftMonitorController.java
rename to asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/controller/FishRaftMonitorController.java
--- a/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/controller/FishRaftMonitorController.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/controller/FishRaftMonitorController.java	(date 1726316993131)
@@ -1,11 +1,11 @@
-package org.qinian.controller;
+package org.leyramu.controller;
 
 import cn.hutool.core.bean.BeanUtil;
 import lombok.RequiredArgsConstructor;
-import org.qinian.domain.Result;
+import domain.Result;
 import org.qinian.domain.dto.raftMonitor.AddRaftMonitor;
 import org.qinian.domain.pojo.FishRaftMonitor;
-import org.qinian.service.IFishRaftMonitorService;
+import org.leyramu.service.IFishRaftMonitorService;
 import org.springframework.web.bind.annotation.*;
 
 import java.time.LocalDateTime;
Index: asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/dao/FishRaftMonitorMapper.java
===================================================================
diff --git a/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/dao/FishRaftMonitorMapper.java b/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/mapper/FishRaftMonitorMapper.java
rename from asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/dao/FishRaftMonitorMapper.java
rename to asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/mapper/FishRaftMonitorMapper.java
--- a/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/dao/FishRaftMonitorMapper.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/mapper/FishRaftMonitorMapper.java	(date 1726316993231)
@@ -1,4 +1,4 @@
-package org.qinian.dao;
+package org.leyramu.mapper;
 
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import org.qinian.domain.pojo.FishRaftMonitor;
Index: asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/service/IFishRaftMonitorService.java
===================================================================
diff --git a/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/service/IFishRaftMonitorService.java b/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/service/IFishRaftMonitorService.java
rename from asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/service/IFishRaftMonitorService.java
rename to asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/service/IFishRaftMonitorService.java
--- a/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/service/IFishRaftMonitorService.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/service/IFishRaftMonitorService.java	(date 1726316993343)
@@ -1,4 +1,4 @@
-package org.qinian.service;
+package org.leyramu.service;
 
 import com.baomidou.mybatisplus.extension.service.IService;
 import org.qinian.domain.dto.raftMonitor.AddRaftMonitor;
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/properties/BaiduProperties.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/properties/BaiduProperties.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/properties/BaiduProperties.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/properties/BaiduProperties.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/properties/BaiduProperties.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/properties/BaiduProperties.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/properties/BaiduProperties.java	(date 1726316993189)
@@ -1,4 +1,4 @@
-package org.qinian.properties;
+package org.leyramu.properties;
 
 import lombok.Data;
 import org.springframework.boot.context.properties.ConfigurationProperties;
Index: .idea/sqldialects.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/sqldialects.xml b/.idea/sqldialects.xml
new file mode 100644
--- /dev/null	(date 1728391174776)
+++ b/.idea/sqldialects.xml	(date 1728391174776)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="SqlDialectMappings">
+    <file url="file://$PROJECT_DIR$/doc/sql/mysql-init.sql" dialect="GenericSQL" />
+    <file url="PROJECT" dialect="MySQL" />
+  </component>
+</project>
\ No newline at end of file
Index: asc-java/asc-gateway/asc-gateway-api/src/main/resources/logback.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-gateway/asc-gateway-api/src/main/resources/logback.xml b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/logback.xml
new file mode 100644
--- /dev/null	(date 1722493777209)
+++ b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/logback.xml	(date 1722493777209)
@@ -0,0 +1,82 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<configuration scan="true" scanPeriod="60 seconds" debug="false">
+    <!-- 日志存放路径 -->
+    <property name="log.path" value="logs/digEdu-gateway/digEdu-gateway-api" />
+    <!-- 日志输出格式 -->
+    <property name="log.pattern" value="%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n" />
+
+    <!-- 控制台输出 -->
+    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
+        <encoder>
+            <pattern>${log.pattern}</pattern>
+        </encoder>
+    </appender>
+
+    <!-- 系统日志输出 -->
+    <appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
+        <file>${log.path}/info.log</file>
+        <!-- 循环政策：基于时间创建日志文件 -->
+        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
+            <!-- 日志文件名格式 -->
+            <fileNamePattern>${log.path}/info.%d{yyyy-MM-dd}.log</fileNamePattern>
+            <!-- 日志最大的历史 60天 -->
+            <maxHistory>60</maxHistory>
+        </rollingPolicy>
+        <encoder>
+            <pattern>${log.pattern}</pattern>
+        </encoder>
+        <filter class="ch.qos.logback.classic.filter.LevelFilter">
+            <!-- 过滤的级别 -->
+            <level>INFO</level>
+            <!-- 匹配时的操作：接收（记录） -->
+            <onMatch>ACCEPT</onMatch>
+            <!-- 不匹配时的操作：拒绝（不记录） -->
+            <onMismatch>DENY</onMismatch>
+        </filter>
+    </appender>
+
+    <appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
+        <file>${log.path}/error.log</file>
+        <!-- 循环政策：基于时间创建日志文件 -->
+        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
+            <!-- 日志文件名格式 -->
+            <fileNamePattern>${log.path}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
+            <!-- 日志最大的历史 60天 -->
+            <maxHistory>60</maxHistory>
+        </rollingPolicy>
+        <encoder>
+            <pattern>${log.pattern}</pattern>
+        </encoder>
+        <filter class="ch.qos.logback.classic.filter.LevelFilter">
+            <!-- 过滤的级别 -->
+            <level>ERROR</level>
+            <!-- 匹配时的操作：接收（记录） -->
+            <onMatch>ACCEPT</onMatch>
+            <!-- 不匹配时的操作：拒绝（不记录） -->
+            <onMismatch>DENY</onMismatch>
+        </filter>
+    </appender>
+
+    <!-- 系统模块日志级别控制  -->
+    <logger name="leyramu.softwarecup.digEdu" level="info" />
+    <!-- Spring日志级别控制  -->
+    <logger name="org.springframework" level="warn" />
+
+    <root level="info">
+        <appender-ref ref="console" />
+    </root>
+
+    <!--系统操作日志-->
+    <root level="info">
+        <appender-ref ref="file_info" />
+        <appender-ref ref="file_error" />
+    </root>
+</configuration>
Index: asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/MailService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/MailService.java b/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/MailService.java
new file mode 100644
--- /dev/null	(date 1726289844760)
+++ b/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/MailService.java	(date 1726289844760)
@@ -0,0 +1,32 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.mail.service;
+
+import leyramu.qinian.asc.common.i18n.dto.ApiLog;
+import leyramu.qinian.asc.common.i18n.dto.Cache;
+
+/**
+ * 邮件服务
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+public interface MailService {
+
+    /**
+     * 发送邮件
+     *
+     * @param apiLog apiLog
+     * @param mail   邮件地址
+     * @param minute 分钟
+     * @param cache  缓存
+     */
+    void send(ApiLog apiLog, String mail, int minute, Cache cache);
+}
Index: asc-java/asc-gateway/asc-gateway-api/src/main/resources/banner.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-gateway/asc-gateway-api/src/main/resources/banner.txt b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/banner.txt
new file mode 100644
--- /dev/null	(date 1721470800409)
+++ b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/banner.txt	(date 1721470800409)
@@ -0,0 +1,15 @@
+${AnsiColor.BRIGHT_RED}    __
+${AnsiColor.BRIGHT_YELLOW}   / /___   __  __ _____ ____ _ ____ ___   __  __
+${AnsiColor.BRIGHT_GREEN}  / // _ \ / / / // ___// __ `// __ `__ \ / / / /
+${AnsiColor.BRIGHT_CYAN} / //  __// /_/ // /   / /_/ // / / / / // /_/ /
+${AnsiColor.BRIGHT_BLUE}/_/ \___/ \__, //_/    \__,_//_/ /_/ /_/ \__,_/
+${AnsiColor.MAGENTA}         /____/
+${AnsiColor.DEFAULT}      佛祖保佑       永不宕机      永无BUG
+  .   ____          _            __ _ _
+ /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
+( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
+ \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
+  '  |____| .__|_| |_|_| |_\__, | / / / /
+ =========|_|==============|___/=/_/_/_/
+${AnsiColor.BRIGHT_GREEN} :: Spring Boot Version ::                ${spring-boot.formatted-version}
+${AnsiColor.DEFAULT}
Index: asc-java/asc-common/asc-common-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/pom.xml b/asc-java/asc-common/asc-common-core/pom.xml
new file mode 100644
--- /dev/null	(date 1726316275909)
+++ b/asc-java/asc-common/asc-common-core/pom.xml	(date 1726316275909)
@@ -0,0 +1,156 @@
+<?xml version="1.0" encoding="UTF-8"?><!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
+    <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
+    <parent>
+        <groupId>leyramu.qinian</groupId>
+        <artifactId>asc-common</artifactId>
+        <version>1.0.0</version>
+    </parent>
+
+    <!--      模块描述      -->
+    <description>管理所有微服务核心工程</description>
+
+    <!--      工件 ID      -->
+    <artifactId>asc-common-core</artifactId>
+
+    <!--      依赖      -->
+    <dependencies>
+        <!--    Spring Cloud Openfeign    -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+
+        <!--    Spring Cloud Loadbalancer    -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-loadbalancer</artifactId>
+        </dependency>
+
+        <!--    Spring Context Support    -->
+        <dependency>
+            <groupId>org.springframework</groupId>
+            <artifactId>spring-context-support</artifactId>
+        </dependency>
+
+        <!--    Spring Web    -->
+        <dependency>
+            <groupId>org.springframework</groupId>
+            <artifactId>spring-web</artifactId>
+        </dependency>
+
+        <!--    Transmittable ThreadLocal    -->
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>transmittable-thread-local</artifactId>
+        </dependency>
+
+        <!--    MyBatis Plus    -->
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
+        </dependency>
+
+        <!--    Hibernate Validator    -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-validation</artifactId>
+        </dependency>
+
+        <!--    Jackson    -->
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+        </dependency>
+
+        <!--    Alibaba Fastjson    -->
+        <dependency>
+            <groupId>com.alibaba.fastjson2</groupId>
+            <artifactId>fastjson2</artifactId>
+        </dependency>
+
+        <!--    JWT API    -->
+        <dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt-api</artifactId>
+        </dependency>
+
+        <!--    JWT Impl    -->
+        <dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt-impl</artifactId>
+        </dependency>
+
+        <!--    JWT Jackson    -->
+        <dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt-jackson</artifactId>
+        </dependency>
+
+        <!--    Apache Lang3    -->
+        <dependency>
+            <groupId>org.apache.commons</groupId>
+            <artifactId>commons-lang3</artifactId>
+        </dependency>
+
+        <!--    Commons Io    -->
+        <dependency>
+            <groupId>commons-io</groupId>
+            <artifactId>commons-io</artifactId>
+        </dependency>
+
+        <!--    excel 工具    -->
+        <dependency>
+            <groupId>org.apache.poi</groupId>
+            <artifactId>poi-ooxml</artifactId>
+        </dependency>
+
+        <!--    Java Servlet    -->
+        <dependency>
+            <groupId>jakarta.servlet</groupId>
+            <artifactId>jakarta.servlet-api</artifactId>
+        </dependency>
+
+        <!--    Java Servlet API    -->
+        <dependency>
+            <groupId>jakarta.xml.bind</groupId>
+            <artifactId>jakarta.xml.bind-api</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>com.fasterxml.jackson.datatype</groupId>
+            <artifactId>jackson-datatype-jsr310</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-freemarker</artifactId>
+            <exclusions>
+                <exclusion>
+                    <groupId>ch.qos.logback</groupId>
+                    <artifactId>logback-core</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>ch.qos.logback</groupId>
+                    <artifactId>logback-classic</artifactId>
+                </exclusion>
+                <exclusion>
+                    <groupId>org.springframework.boot</groupId>
+                    <artifactId>spring-boot-starter-logging</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/impl/AbstractMailServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/impl/AbstractMailServiceImpl.java b/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/impl/AbstractMailServiceImpl.java
new file mode 100644
--- /dev/null	(date 1726289844765)
+++ b/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/impl/AbstractMailServiceImpl.java	(date 1726289844765)
@@ -0,0 +1,50 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.mail.service.impl;
+
+import lombok.RequiredArgsConstructor;
+import leyramu.qinian.asc.common.mail.service.MailService;
+import org.springframework.boot.autoconfigure.mail.MailProperties;
+import org.springframework.mail.SimpleMailMessage;
+import org.springframework.mail.javamail.JavaMailSenderImpl;
+
+/**
+ * 邮件服务实现
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+@RequiredArgsConstructor
+public abstract class AbstractMailServiceImpl implements MailService {
+
+	/**
+	 * 邮件配置
+	 */
+	private final MailProperties mailProperties;
+
+	/**
+	 * 发送邮件
+	 * @param subject 邮件主题
+	 * @param content 邮件内容
+	 * @param toMail 接收人
+	 */
+	protected void sendMail(String subject, String content, String toMail) {
+		JavaMailSenderImpl sender = new JavaMailSenderImpl();
+		SimpleMailMessage mailMessage = new SimpleMailMessage();
+		sender.setHost(mailProperties.getHost());
+		sender.setUsername(mailProperties.getUsername());
+		sender.setPassword(mailProperties.getPassword());
+		mailMessage.setTo(toMail);
+		mailMessage.setSubject(subject);
+		mailMessage.setFrom(mailProperties.getUsername());
+		mailMessage.setText(content);
+		sender.send(mailMessage);
+	}
+}
Index: asc-java/asc-common/asc-common-datascope/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-datascope/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-datascope/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1722344113639)
+++ b/asc-java/asc-common/asc-common-datascope/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1722344113639)
@@ -0,0 +1,9 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.softwarecup.digEdu.common.datascope.aspect.DataScopeAspect
Index: asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/impl/QQMailServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/impl/QQMailServiceImpl.java b/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/impl/QQMailServiceImpl.java
new file mode 100644
--- /dev/null	(date 1726290259920)
+++ b/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/service/impl/QQMailServiceImpl.java	(date 1726290259920)
@@ -0,0 +1,64 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.mail.service.impl;
+
+import lombok.SneakyThrows;
+import lombok.extern.slf4j.Slf4j;
+import leyramu.qinian.asc.common.core.utils.JacksonUtil;
+import leyramu.qinian.asc.common.core.utils.RandomStringUtil;
+import leyramu.qinian.asc.common.core.utils.TemplateUtil;
+import leyramu.qinian.asc.common.i18n.dto.ApiLog;
+import leyramu.qinian.asc.common.i18n.dto.Cache;
+import org.springframework.boot.autoconfigure.mail.MailProperties;
+
+import java.util.Map;
+
+import static leyramu.qinian.asc.common.core.constant.Constants.FAIL;
+import static leyramu.qinian.asc.common.core.constant.Constants.SUCCESS;
+import static leyramu.qinian.asc.common.core.constant.StringConstant.EMPTY;
+
+/**
+ * QQ邮箱发送验证码
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+@Slf4j
+public class QQMailServiceImpl extends AbstractMailServiceImpl {
+
+	private static final String CAPTCHA_TEMPLATE = "验证码：${captcha}，${minute}分钟内容有效，您正在登录，若非本人操作，请勿泄露。";
+
+	public QQMailServiceImpl(MailProperties mailProperties) {
+		super(mailProperties);
+	}
+
+	@Override
+	@SneakyThrows
+	public void send(ApiLog apiLog, String mail, int minute, Cache cache) {
+		String desc = "QQ邮箱";
+		String subject = "验证码";
+		String captcha = RandomStringUtil.randomNumeric(6);
+		Map<String, Object> param = Map.of("captcha", captcha, "minute", minute);
+		String content = TemplateUtil.getContent(CAPTCHA_TEMPLATE, param);
+		String params = JacksonUtil.toJsonStr(Map.of("mail", mail, "content", content));
+		try {
+			// 发送邮件
+			sendMail(subject, content, mail);
+			// 写入缓存
+			cache.set(captcha, (long) minute * 60 * 1000);
+			apiLog.update(params, SUCCESS, EMPTY, desc);
+		}
+		catch (Exception e) {
+			log.error("错误信息：{}", e.getMessage(), e);
+			apiLog.update(params, FAIL, e.getMessage(), desc);
+		}
+	}
+
+}
Index: asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/FishingPlatoon.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/FishingPlatoon.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/FishingPlatoon.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/FishingPlatoon.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/FishingPlatoon.java
--- a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/FishingPlatoon.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/FishingPlatoon.java	(date 1726310283650)
@@ -6,7 +6,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.experimental.Accessors;
-import org.qinian.enums.UserStatus;
+import leyramu.qinian.asc.common.base.enums.UserStatus;
 
 import java.io.Serializable;
 import java.time.LocalDateTime;
Index: asc-java/asc-common/asc-common-datascope/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-datascope/pom.xml b/asc-java/asc-common/asc-common-datascope/pom.xml
new file mode 100644
--- /dev/null	(date 1726317191627)
+++ b/asc-java/asc-common/asc-common-datascope/pom.xml	(date 1726317191627)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8"?><!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
+    <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
+    <parent>
+        <groupId>leyramu.qinian</groupId>
+        <artifactId>asc-common</artifactId>
+        <relativePath>../pom.xml</relativePath>
+        <version>1.0.0</version>
+    </parent>
+
+    <!--      模块描述      -->
+    <description>管理微服务数据范围和权限范围</description>
+
+    <!--      工件 ID      -->
+    <artifactId>asc-common-datascope</artifactId>
+
+    <!--      依赖      -->
+    <dependencies>
+        <!--    Asc Common Security    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-security</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/entity/SendMailApiLog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/entity/SendMailApiLog.java b/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/entity/SendMailApiLog.java
new file mode 100644
--- /dev/null	(date 1726289844756)
+++ b/asc-java/asc-common/asc-common-mail/src/main/java/leyramu/qinian/asc/common/mail/entity/SendMailApiLog.java	(date 1726289844756)
@@ -0,0 +1,45 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.mail.entity;
+
+import leyramu.qinian.asc.common.i18n.dto.ApiLog;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * 发送邮件验证码日志
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class SendMailApiLog extends ApiLog {
+
+    /**
+     * 获取API编码
+     *
+     * @return String
+     */
+    @Override
+    protected String getApiCode() {
+        return "sendMailCaptcha";
+    }
+
+    /**
+     * 获取API名称
+     *
+     * @return String
+     */
+    @Override
+    protected String getApiName() {
+        return "发送邮箱验证码";
+    }
+}
Index: asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Fishermen.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Fishermen.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/Fishermen.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Fishermen.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/Fishermen.java
--- a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Fishermen.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/Fishermen.java	(date 1726310283665)
@@ -6,7 +6,7 @@
 import lombok.Data;
 import lombok.EqualsAndHashCode;
 import lombok.experimental.Accessors;
-import org.qinian.enums.UserStatus;
+import leyramu.qinian.asc.common.base.enums.UserStatus;
 
 import java.io.Serializable;
 import java.time.LocalDateTime;
Index: asc-java/asc-common/asc-common-mail/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-mail/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-mail/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1726288143491)
+++ b/asc-java/asc-common/asc-common-mail/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1726288143491)
@@ -0,0 +1,1 @@
+leyramu.qinian.asc.common.mail.config.MailAutoConfig
Index: asc-java/asc-gateway/asc-gateway-api/src/main/resources/scg-keystore.p12
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-gateway/asc-gateway-api/src/main/resources/scg-keystore.p12 b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/scg-keystore.p12
new file mode 100644
--- /dev/null	(date 1722612195683)
+++ b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/scg-keystore.p12	(date 1722612195683)
@@ -0,0 +1,45 @@
+0�
+�0�
+�	*�H��
+��
+��
+�0�
+�0��	*�H��
+�����0��0��*�H��
+
+��@0�<0f	*�H��
+
+0Y08	*�H��
+0+���'OV�aX�A2Ym�T�' 0*�H��
+	 0	`�He*
+E����# �W�N���.��
+�K�"��I�	��틪�z����{��:9}��/��Kk�<�mc�����j�ktsa�ң.� Ǻ����pa��Z�ҩ�G�Ɇ������Ya���}�R��]DY��&�#v��G+T#?�D�DAx�]�N�ʀ��k�S�	IF�32��:\$[:���W5���g�����8�`Ɣ����(�0�:	����7$ %�S+�y����<�w�\Z �=G�%����T�����6;/KΩ�h�w�o��=���Ej�ˬ<��2�+�"��ӎ���x�;�Fods.4˗|U�����"A��D�X��Z�_�u�|8?iT2��u�V��'�WT�y�����=�n��x��\�QD���g�ܓ�ĭZav������̯��jL��H
+ǌw����p�i����|�SM�}�q���ϦZ-�I������d��z�ΕX\����mCV��S�ڙ�W�P@��<3T������=�E|Z����#4KvU��83�aE p�Ҕ7h�'��猷)W�
+@T��:�H�!�2\� �)f��I�`�P��QH�%ڇ��ȋ�fVqo=�x0S�J33�ă��'���r̥���+���m�C�;�}ʴ5~�"I����D��B�=7L�k�N~[@9���Q"��U�s<�o?KE�z�pܦ��V�D�����ލ�4�H����a)��}�a��;��~~6�g����u����=ղ����/�*��(p��4��%G���S��`
+���B���f��UC�FE��Ӳʎ��zv�ZY�&��d�D�J3
+�?O�Qg>5&�"S�i��
+�	wH���G���t�di^���`�]⡬aW*3�h\-d��3
+�kp_i�G
+�җ�W���[��J-ևk��%ln�l����-K��\�=A� xlP���J�0�Q.'�)�_@3%Tfo,JYD�?A]��Z �gtv�2��Z#���FV0UFX���K�s�@ܗe<�W�1�.��PY'fE��̏��D�|W��:��bt�*Ő�Km<�G��#�0T�������/�qę�m�!��V���/�]�����J,� �/�]X$X�?yX\Z~�cBF8�����D����ea�{=(��vLn��5HV��D�^�6ԻQ�.����5��2�T
+9ՙq3v93�hc��~g�&�
+��n����8�*���Gr|i	;������F�����1X03	*�H��
+	1&$ d i g e d u - g a t e w a y - a p i0!	*�H��
+	1Time 17226121956130��	*�H��
+���0�� 0��	*�H��
+0f	*�H��
+
+0Y08	*�H��
+0+#�S�-���̨s�3
+S�' 0*�H��
+	 0	`�He*�Łr�9�t�!x�尀�0K/�
+'��6��HCJ� X��@���(��ȥϑ'�}%���&�*[VPo�m�_����J�H��U�i8�f�k��8Ԛ��U�@+_����#˅T�χ翑��N
+q{t%-�+����S{��(C|Q+y� �#7V�:�L[�Ȭn���@V*%�<X�P��J��>:�� �F;�@@��.�S�TK�W��QWf�����l�������ò)NzɱN�3��<�c��Re��¡c~P�.��+3�{wF���R�'�%�᷶�D��[��<��<��� ;���Q#˯|U���n>4~Ȋ��?���H��/6?��c3��_Z`��yO��~h�B.M��A��>�no1X����[aRq�J�\E �se��8�d`�BS~��u�떷��o��%����>(�u�k	�>�\a!V��b]�B�H��2a����>=�Th�eZ�)Uб�G�Vrm����֏՜:
+L��lt!�o`d�{|��@�I�5®8���� ��.�0���l����d�e����x
+���)d�T	�I��N9�]w�������O;��7��z�
+���
+fT�7��<�6��<H��è�Α%Ԍx�;uA��<�N
+F[X"a�-�
+��.�� ��ӎ�_~�j9@~xr;[C*�n��fnwp����T�R�Ux��xw��#{��|��/s�/���k#Բ�8cG[[2N5�z�-��(H�#��Tu �g�ߣ�%��<b��ӴJ_Q���g���=U��n�.���6�N�>N�L��T����?mJ���{�}D�[�OQ| ���8A]		��	ҵ�4s3��Ő*�a=l��9\f��ǥ�]6$<����InSG�r���z��`>9X�[�X��o>$�-�� :���E%@�����TO6F��QdF���!��m�Yk_�YzP����R�Ól=�*�x�6ov��{���Q{l[�R~l,ް�����.֨�Ć�uxk��
+�5\�Q�N�¬���mDC��ۼF���
+߀[ָ}�<r�vք~��(�$H�_(�����_�M�>Rr�Ď@�j���yB0M010
+	`�He  M�\�[8����ƛxu)�����8��tŌ:Y�����+Q���尝�0'
\ No newline at end of file
Index: asc-java/asc-gateway/asc-gateway-api/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-gateway/asc-gateway-api/src/main/resources/application.yml b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/application.yml
new file mode 100644
--- /dev/null	(date 1726208704609)
+++ b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/application.yml	(date 1726208704609)
@@ -0,0 +1,83 @@
+# =========================== 服务器配置 ===========================
+server:
+  port: ${SERVER_PORT:9090}
+  compression:
+    enabled: true
+  ssl:
+    enabled: @SSL-ENABLED@
+    key-store: classpath:scg-keystore.p12
+    key-alias: ${spring.application.name}
+    key-store-type: PKCS12
+    key-store-password: Zcx@223852//
+    key-password: Zcx@223852//
+  http2:
+    enabled: @SSL-ENABLED@
+  forward-headers-strategy: native
+  shutdown: graceful
+  netty:
+    max-initial-line-length: 4096
+#  servlet:
+#    context-path: /api
+
+# =========================== spring 配置 ===========================
+spring:
+  main:
+    web-application-type: reactive
+  threads:
+    virtual:
+      enabled: true
+  application:
+    name: @pom.artifactId@
+  profiles:
+    active: @PROFILE-ACTIVE@
+  webflux:
+    multipart:
+      max-parts: -1
+      max-disk-usage-per-part: -1
+      max-in-memory-size: 4096
+  cloud:
+    sentinel:
+      filter:
+        enabled: true
+      eager: true
+      transport:
+        dashboard: ${SENTINEL-SERVER-ADDRESS}
+      datasource:
+        ds1:
+          nacos:
+            server-addr: @NACOS-SERVER-ADDRESS@
+            username: @NACOS-USERNAME@
+            password: @NACOS-PASSWORD@
+            dataId: sentinel-${pom.artifactId}
+            groupId: ${NACOS-GATEWAY-GROUP}
+            data-type: json
+            rule-type: gw-flow
+    loadbalancer:
+      cache:
+        caffeine:
+          spec: initialCapacity=30,expireAfterWrite=30s,maximumSize=4096
+        enabled: true
+      nacos:
+        enabled: true
+    gateway:
+      httpclient:
+        ssl:
+          use-insecure-trust-manager: true
+        wiretap: false
+        pool:
+          max-idle-time: 10m
+          max-connections: 10000
+          max-life-time: 5m
+          type: fixed
+          acquire-timeout: 60000
+        connect-timeout: 60000
+      httpserver:
+        wiretap: false
+      #      globalcors:
+      #        cors-configurations:
+      #          '[/**]':
+      #            allowed-origins: 'http://localhost:5174'
+      #            allowed-methods: '*'
+      #            allowed-headers: '*'
+      #            allow-credentials: true
+      #            max-age: 3600
Index: asc-java/asc-gateway/asc-gateway-api/src/main/resources/bootstrap.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-gateway/asc-gateway-api/src/main/resources/bootstrap.yml b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/bootstrap.yml
new file mode 100644
--- /dev/null	(date 1725622915395)
+++ b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/bootstrap.yml	(date 1725622915395)
@@ -0,0 +1,19 @@
+# =========================== spring 配置 ===========================
+spring:
+  cloud:
+    nacos:
+      server-addr: ${NACOS-SERVER-ADDRESS}
+      username: ${NACOS-USERNAME}
+      password: ${NACOS-PASSWORD}
+      config:
+        group: ${NACOS-GATEWAY-GROUP}
+        namespace: ${NACOS-NAMESPACE}
+        refresh-enabled: true
+        file-extension: yml
+        shared-configs:
+          - application-${PROFILE-ACTIVE}.${spring.cloud.nacos.config.file-extension}
+      discovery:
+        ephemeral: true
+        group: ${NACOS-SERVICE-GROUP}
+        namespace: ${NACOS-NAMESPACE}
+        cluster-name: ${pom.artifactId}
Index: asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/utils/MessageUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/utils/MessageUtil.java b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/utils/MessageUtil.java
new file mode 100644
--- /dev/null	(date 1726289601277)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/utils/MessageUtil.java	(date 1726289601277)
@@ -0,0 +1,57 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.i18n.utils;
+
+import org.springframework.context.i18n.LocaleContextHolder;
+import org.springframework.context.support.ReloadableResourceBundleMessageSource;
+
+import java.nio.charset.StandardCharsets;
+
+/**
+ * 国际化消息工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+public class MessageUtil {
+
+    /**
+     * 静态内部类，用于加载资源文件
+     */
+    private static final ReloadableResourceBundleMessageSource RESOURCE_BUNDLE_MESSAGE_SOURCE;
+
+    /* 静态代码块，用于初始化资源文件加载器 */
+    static {
+        RESOURCE_BUNDLE_MESSAGE_SOURCE = new ReloadableResourceBundleMessageSource();
+        RESOURCE_BUNDLE_MESSAGE_SOURCE.setDefaultEncoding(StandardCharsets.UTF_8.name());
+        RESOURCE_BUNDLE_MESSAGE_SOURCE.setBasename("classpath:i18n/message");
+    }
+
+    /**
+     * 根据消息代码获取消息内容
+     *
+     * @param code 消息代码
+     * @return 消息内容
+     */
+    public static String getMessage(String code) {
+        return getMessage(code, null);
+    }
+
+    /**
+     * 根据消息代码和参数获取消息内容
+     *
+     * @param code 消息代码
+     * @param args 参数数组
+     * @return 消息内容
+     */
+    public static String getMessage(String code, Object[] args) {
+        return RESOURCE_BUNDLE_MESSAGE_SOURCE.getMessage(code, args, LocaleContextHolder.getLocale());
+    }
+}
Index: asc-java/asc-gateway/asc-gateway-api/Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-gateway/asc-gateway-api/Dockerfile b/asc-java/asc-gateway/asc-gateway-api/Dockerfile
new file mode 100644
--- /dev/null	(date 1725613766154)
+++ b/asc-java/asc-gateway/asc-gateway-api/Dockerfile	(date 1725613766154)
@@ -0,0 +1,19 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+
+FROM docker.io/sunrdocker/jdk22-jre-font-openssl-alpine:latest
+
+LABEL maintainer="Miraitowa_zcx"
+LABEL description="digEdu-gateway-api"
+
+COPY target/digEdu-gateway-api.jar app.jar
+
+EXPOSE 9090
+
+CMD java $JVM_OPTS -jar app.jar >/dev/null 2>&1
Index: asc-java/asc-common/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-java</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-common</artifactId>\r\n\r\n    <!--      打包方式      -->\r\n    <packaging>pom</packaging>\r\n\r\n    <modules>\r\n        <module>asc-common-utils</module>\r\n        <module>asc-common-bom</module>\r\n    </modules>\r\n\r\n    <properties>\r\n        <java.version>17</java.version>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <!--      依赖      -->\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>io.springfox</groupId>\r\n            <artifactId>springfox-swagger2</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>io.swagger.core.v3</groupId>\r\n            <artifactId>swagger-models</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Swagger Annotations    -->\r\n        <dependency>\r\n            <groupId>io.swagger.core.v3</groupId>\r\n            <artifactId>swagger-annotations</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Actuator    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-actuator</artifactId>\r\n        </dependency>\r\n\r\n        <!-- Spring Boot Admin Client -->\r\n        <dependency>\r\n            <groupId>de.codecentric</groupId>\r\n            <artifactId>spring-boot-admin-starter-client</artifactId>\r\n            <version>3.3.3</version>\r\n        </dependency>\r\n\r\n\r\n        <dependency>\r\n            <groupId>io.github.openfeign</groupId>\r\n            <artifactId>feign-okhttp</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-amqp</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-configuration-processor</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n\r\n        <!--    MyBatis Plus    -->\r\n        <dependency>\r\n            <groupId>com.baomidou</groupId>\r\n            <artifactId>mybatis-plus-spring-boot3-starter</artifactId>\r\n            <version>3.5.7</version>\r\n        </dependency>\r\n\r\n        <!--    MySQL    -->\r\n        <dependency>\r\n            <groupId>mysql</groupId>\r\n            <artifactId>mysql-connector-java</artifactId>\r\n            <version>8.0.33</version>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n\r\n        <!--    Redis    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-redis</artifactId>\r\n        </dependency>\r\n\r\n        <!--sentinel-->\r\n        <dependency>\r\n            <groupId>com.alibaba.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>cn.hutool</groupId>\r\n            <artifactId>hutool-all</artifactId>\r\n            <version>5.8.25</version>\r\n        </dependency>\r\n\r\n        <!--    commons-codec    -->\r\n        <dependency>\r\n            <groupId>commons-codec</groupId>\r\n            <artifactId>commons-codec</artifactId>\r\n        </dependency>\r\n\r\n        <!--    aspectj    -->\r\n        <dependency>\r\n            <groupId>org.aspectj</groupId>\r\n            <artifactId>aspectjweaver</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.apache.commons</groupId>\r\n            <artifactId>commons-lang3</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>commons-codec</groupId>\r\n            <artifactId>commons-codec</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Commons Io    -->\r\n        <dependency>\r\n            <groupId>commons-io</groupId>\r\n            <artifactId>commons-io</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.alibaba.fastjson2</groupId>\r\n            <artifactId>fastjson2</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.fasterxml.jackson.datatype</groupId>\r\n            <artifactId>jackson-datatype-jsr310</artifactId>\r\n        </dependency>\r\n\r\n        <!-- Jackson -->\r\n        <dependency>\r\n            <groupId>com.fasterxml.jackson.datatype</groupId>\r\n            <artifactId>jackson-datatype-jsr310</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.fasterxml.jackson.core</groupId>\r\n            <artifactId>jackson-databind</artifactId>\r\n        </dependency>\r\n\r\n        <!--    JWT 令牌    -->\r\n        <dependency>\r\n            <groupId>com.auth0</groupId>\r\n            <artifactId>java-jwt</artifactId>\r\n            <version>4.3.0</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt-api</artifactId>\r\n        </dependency>\r\n\r\n        <!--    布隆过滤器    -->\r\n        <dependency>\r\n            <groupId>com.google.guava</groupId>\r\n            <artifactId>guava</artifactId>\r\n            <version>32.1.2-jre</version>\r\n        </dependency>\r\n\r\n        <!--    Java Servlet    -->\r\n        <dependency>\r\n            <groupId>jakarta.servlet</groupId>\r\n            <artifactId>jakarta.servlet-api</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Java Servlet API    -->\r\n        <dependency>\r\n            <groupId>jakarta.xml.bind</groupId>\r\n            <artifactId>jakarta.xml.bind-api</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Redis    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-redis</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Web    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n    </dependencies>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/pom.xml b/asc-java/asc-common/pom.xml
--- a/asc-java/asc-common/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-common/pom.xml	(date 1726317683554)
@@ -1,205 +1,40 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 
+    <!--      模块版本号      -->
     <modelVersion>4.0.0</modelVersion>
 
+    <!--      父工程      -->
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-java</artifactId>
+        <relativePath>../pom.xml</relativePath>
         <version>1.0.0</version>
     </parent>
 
-    <artifactId>asc-common</artifactId>
-
-    <!--      打包方式      -->
-    <packaging>pom</packaging>
-
+    <!--      子模块      -->
     <modules>
-        <module>asc-common-utils</module>
+        <module>asc-common-core</module>
+        <module>asc-common-redis</module>
+        <module>asc-common-mail</module>
+        <!--        <module>asc-common-utils</module>-->
         <module>asc-common-bom</module>
+        <module>asc-common-i18n</module>
+        <module>asc-common-base</module>
+        <module>asc-common-security</module>
+        <module>asc-common-datascope</module>
+        <module>asc-common-datasource</module>
+        <module>asc-common-log</module>
+        <module>asc-common-swagger</module>
     </modules>
 
-    <properties>
-        <java.version>17</java.version>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
-    <!--      依赖      -->
-    <dependencies>
-        <dependency>
-            <groupId>io.springfox</groupId>
-            <artifactId>springfox-swagger2</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>io.swagger.core.v3</groupId>
-            <artifactId>swagger-models</artifactId>
-        </dependency>
-
-        <!--    Swagger Annotations    -->
-        <dependency>
-            <groupId>io.swagger.core.v3</groupId>
-            <artifactId>swagger-annotations</artifactId>
-        </dependency>
-
-        <!--    Spring Boot Actuator    -->
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-actuator</artifactId>
-        </dependency>
-
-        <!-- Spring Boot Admin Client -->
-        <dependency>
-            <groupId>de.codecentric</groupId>
-            <artifactId>spring-boot-admin-starter-client</artifactId>
-            <version>3.3.3</version>
-        </dependency>
-
-
-        <dependency>
-            <groupId>io.github.openfeign</groupId>
-            <artifactId>feign-okhttp</artifactId>
-        </dependency>
+    <!--      打包方式      -->
+    <packaging>pom</packaging>
 
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-amqp</artifactId>
-        </dependency>
+    <!--      模块描述      -->
+    <description>管理所有微服务的通用工具工程</description>
 
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-configuration-processor</artifactId>
-            <optional>true</optional>
-        </dependency>
-
-        <!--    MyBatis Plus    -->
-        <dependency>
-            <groupId>com.baomidou</groupId>
-            <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
-            <version>3.5.7</version>
-        </dependency>
-
-        <!--    MySQL    -->
-        <dependency>
-            <groupId>mysql</groupId>
-            <artifactId>mysql-connector-java</artifactId>
-            <version>8.0.33</version>
-            <scope>runtime</scope>
-        </dependency>
-
-        <!--    Redis    -->
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-redis</artifactId>
-        </dependency>
-
-        <!--sentinel-->
-        <dependency>
-            <groupId>com.alibaba.cloud</groupId>
-            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>cn.hutool</groupId>
-            <artifactId>hutool-all</artifactId>
-            <version>5.8.25</version>
-        </dependency>
-
-        <!--    commons-codec    -->
-        <dependency>
-            <groupId>commons-codec</groupId>
-            <artifactId>commons-codec</artifactId>
-        </dependency>
-
-        <!--    aspectj    -->
-        <dependency>
-            <groupId>org.aspectj</groupId>
-            <artifactId>aspectjweaver</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>org.apache.commons</groupId>
-            <artifactId>commons-lang3</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>commons-codec</groupId>
-            <artifactId>commons-codec</artifactId>
-        </dependency>
-
-        <!--    Commons Io    -->
-        <dependency>
-            <groupId>commons-io</groupId>
-            <artifactId>commons-io</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>com.alibaba.fastjson2</groupId>
-            <artifactId>fastjson2</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>com.fasterxml.jackson.datatype</groupId>
-            <artifactId>jackson-datatype-jsr310</artifactId>
-        </dependency>
-
-        <!-- Jackson -->
-        <dependency>
-            <groupId>com.fasterxml.jackson.datatype</groupId>
-            <artifactId>jackson-datatype-jsr310</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>com.fasterxml.jackson.core</groupId>
-            <artifactId>jackson-databind</artifactId>
-        </dependency>
-
-        <!--    JWT 令牌    -->
-        <dependency>
-            <groupId>com.auth0</groupId>
-            <artifactId>java-jwt</artifactId>
-            <version>4.3.0</version>
-        </dependency>
-
-        <dependency>
-            <groupId>io.jsonwebtoken</groupId>
-            <artifactId>jjwt-api</artifactId>
-        </dependency>
-
-        <!--    布隆过滤器    -->
-        <dependency>
-            <groupId>com.google.guava</groupId>
-            <artifactId>guava</artifactId>
-            <version>32.1.2-jre</version>
-        </dependency>
-
-        <!--    Java Servlet    -->
-        <dependency>
-            <groupId>jakarta.servlet</groupId>
-            <artifactId>jakarta.servlet-api</artifactId>
-        </dependency>
-
-        <!--    Java Servlet API    -->
-        <dependency>
-            <groupId>jakarta.xml.bind</groupId>
-            <artifactId>jakarta.xml.bind-api</artifactId>
-        </dependency>
-
-        <!--    Spring Boot Redis    -->
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-redis</artifactId>
-        </dependency>
-
-        <!--    Web    -->
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-web</artifactId>
-        </dependency>
-
-    </dependencies>
+    <!--      工件 ID      -->
+    <artifactId>asc-common</artifactId>
 </project>
Index: asc-java/asc-cloud/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-java</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-cloud</artifactId>\r\n\r\n    <packaging>pom</packaging>\r\n\r\n    <modules>\r\n        <module>asc-cloud-seata</module>\r\n        <module>asc-cloud-sentinel</module>\r\n        <module>asc-cloud-register</module>\r\n    </modules>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-cloud/pom.xml b/asc-java/asc-cloud/pom.xml
--- a/asc-java/asc-cloud/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-cloud/pom.xml	(date 1726318728068)
@@ -3,7 +3,7 @@
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-java</artifactId>
         <version>1.0.0</version>
     </parent>
@@ -17,11 +17,4 @@
         <module>asc-cloud-sentinel</module>
         <module>asc-cloud-register</module>
     </modules>
-
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
 </project>
Index: asc-java/asc-gateway/asc-gateway-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-gateway</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-gateway-api</artifactId>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <!--      构建插件      -->\r\n    <build>\r\n        <plugins>\r\n            <!--    Spring Boot Maven Plugin    -->\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-gateway/asc-gateway-api/pom.xml b/asc-java/asc-gateway/asc-gateway-api/pom.xml
--- a/asc-java/asc-gateway/asc-gateway-api/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-gateway/asc-gateway-api/pom.xml	(date 1726316409472)
@@ -1,30 +1,72 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<?xml version="1.0" encoding="UTF-8"?><!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
     <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-gateway</artifactId>
+        <relativePath>../pom.xml</relativePath>
         <version>1.0.0</version>
     </parent>
 
+    <!--      模块描述      -->
+    <description>所有 API 网关</description>
+
+    <!--      工件 ID      -->
     <artifactId>asc-gateway-api</artifactId>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
+    <!--      依赖      -->
+    <dependencies>
+        <!--    Spring Boot Swagger    -->
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-boot-starter</artifactId>
+        </dependency>
+
+        <!--    验证码    -->
+        <dependency>
+            <groupId>pro.fessional</groupId>
+            <artifactId>kaptcha</artifactId>
+        </dependency>
+
+        <!--    Spring Boot Redis Reactive    -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
+        </dependency>
+
+        <!--    Asc Common Redis    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-redis</artifactId>
+        </dependency>
+    </dependencies>
 
     <!--      构建插件      -->
     <build>
+        <finalName>${project.artifactId}</finalName>
         <plugins>
-            <!--    Spring Boot Maven Plugin    -->
             <plugin>
                 <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-maven-plugin</artifactId>
-                <version>${spring-boot.version}</version>
+                <executions>
+                    <execution>
+                        <goals>
+                            <goal>repackage</goal>
+                        </goals>
+                    </execution>
+                </executions>
             </plugin>
         </plugins>
     </build>
Index: asc-java/asc-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-java</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-api</artifactId>\r\n\r\n    <packaging>pom</packaging>\r\n\r\n    <modules>\r\n        <module>asc-api-domain</module>\r\n        <module>asc-api-system</module>\r\n    </modules>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <!-- Spring Cloud Openfeign -->\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-openfeign</artifactId>\r\n        </dependency>\r\n\r\n        <!-- Spring Cloud Loadbalancer -->\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-loadbalancer</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.qinian</groupId>\r\n            <artifactId>asc-common-utils</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/pom.xml b/asc-java/asc-api/pom.xml
--- a/asc-java/asc-api/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/pom.xml	(date 1726317781842)
@@ -1,11 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
 
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-java</artifactId>
         <version>1.0.0</version>
     </parent>
@@ -19,12 +18,6 @@
         <module>asc-api-system</module>
     </modules>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <dependencies>
         <!-- Spring Cloud Openfeign -->
         <dependency>
@@ -38,9 +31,15 @@
             <artifactId>spring-cloud-starter-loadbalancer</artifactId>
         </dependency>
 
+        <!--        <dependency>-->
+        <!--            <groupId>org.qinian</groupId>-->
+        <!--            <artifactId>asc-common-utils</artifactId>-->
+        <!--        </dependency>-->
+
+        <!--    Asc common i18n    -->
         <dependency>
-            <groupId>org.qinian</groupId>
-            <artifactId>asc-common-utils</artifactId>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-i18n</artifactId>
         </dependency>
     </dependencies>
 </project>
Index: asc-java/asc-common/asc-common-mail/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-mail/pom.xml b/asc-java/asc-common/asc-common-mail/pom.xml
new file mode 100644
--- /dev/null	(date 1726316409469)
+++ b/asc-java/asc-common/asc-common-mail/pom.xml	(date 1726316409469)
@@ -0,0 +1,28 @@
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
+    <parent>
+        <artifactId>asc-common</artifactId>
+        <groupId>leyramu.qinian</groupId>
+        <version>1.0.0</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>asc-common-mail</artifactId>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-mail</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-core</artifactId>
+        </dependency>
+
+        <!--    Asc common i18n    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-i18n</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-common/asc-common-datasource/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-datasource/pom.xml b/asc-java/asc-common/asc-common-datasource/pom.xml
new file mode 100644
--- /dev/null	(date 1726317473974)
+++ b/asc-java/asc-common/asc-common-datasource/pom.xml	(date 1726317473974)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8"?><!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
+    <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
+    <parent>
+        <groupId>leyramu.qinian</groupId>
+        <artifactId>asc-common</artifactId>
+        <relativePath>../pom.xml</relativePath>
+        <version>1.0.0</version>
+    </parent>
+
+    <!--      模块描述      -->
+    <description>管理微服务的多数据源工程</description>
+
+    <!--      工件 ID      -->
+    <artifactId>asc-common-datasource</artifactId>
+
+    <!--      依赖      -->
+    <dependencies>
+        <!--    Druid    -->
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>druid-spring-boot-3-starter</artifactId>
+        </dependency>
+
+        <!--    Dynamic DataSource    -->
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>dynamic-datasource-spring-boot3-starter</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: .idea/jsLibraryMappings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jsLibraryMappings.xml b/.idea/jsLibraryMappings.xml
new file mode 100644
--- /dev/null	(date 1725781519496)
+++ b/.idea/jsLibraryMappings.xml	(date 1725781519496)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JavaScriptLibraryMappings">
+    <excludedPredefinedLibrary name="AquaScanCloud/asc-vue/vue-admin/node_modules" />
+    <excludedPredefinedLibrary name="AquaScanCloud/asc-vue/vue-user/node_modules" />
+  </component>
+</project>
\ No newline at end of file
Index: asc-java/asc-gateway/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-java</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-gateway</artifactId>\r\n    <packaging>pom</packaging>\r\n    <modules>\r\n        <module>asc-gateway-api</module>\r\n    </modules>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <!--    Spring Cloud Alibaba Sentinel Gateway    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.cloud</groupId>\r\n            <artifactId>spring-cloud-alibaba-sentinel-gateway</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.qinian</groupId>\r\n            <artifactId>asc-common-utils</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Spring Cloud Gateway    -->\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-gateway</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Spring Cloud Alibaba Nacos Config    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Spring Cloud Alibaba Nacos Discovery    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\r\n        </dependency>\r\n\r\n        <!--   Spring Cloud Loadbalancer    -->\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-loadbalancer</artifactId>\r\n        </dependency>\r\n\r\n        <!--    bootstrap 引入    -->\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-bootstrap</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-gateway/pom.xml b/asc-java/asc-gateway/pom.xml
--- a/asc-java/asc-gateway/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-gateway/pom.xml	(date 1726316045235)
@@ -1,38 +1,33 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
     <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-java</artifactId>
         <version>1.0.0</version>
     </parent>
 
-    <artifactId>asc-gateway</artifactId>
-    <packaging>pom</packaging>
+    <!--      子模块      -->
     <modules>
         <module>asc-gateway-api</module>
     </modules>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
+    <!--      打包方式      -->
+    <packaging>pom</packaging>
+
+    <!--      模块描述      -->
+    <description>管理所有微服务的网关工程</description>
 
+    <!--      工件 ID      -->
+    <artifactId>asc-gateway</artifactId>
+
+    <!--      依赖      -->
     <dependencies>
-        <!--    Spring Cloud Alibaba Sentinel Gateway    -->
-        <dependency>
-            <groupId>com.alibaba.cloud</groupId>
-            <artifactId>spring-cloud-alibaba-sentinel-gateway</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>org.qinian</groupId>
-            <artifactId>asc-common-utils</artifactId>
-        </dependency>
-
         <!--    Spring Cloud Gateway    -->
         <dependency>
             <groupId>org.springframework.cloud</groupId>
@@ -50,6 +45,18 @@
             <groupId>com.alibaba.cloud</groupId>
             <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
         </dependency>
+
+        <!--    Spring Cloud Alibaba Sentinel    -->
+        <dependency>
+            <groupId>com.alibaba.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
+        </dependency>
+
+        <!--    Spring Cloud Alibaba Sentinel Gateway    -->
+        <dependency>
+            <groupId>com.alibaba.cloud</groupId>
+            <artifactId>spring-cloud-alibaba-sentinel-gateway</artifactId>
+        </dependency>
 
         <!--   Spring Cloud Loadbalancer    -->
         <dependency>
@@ -57,10 +64,23 @@
             <artifactId>spring-cloud-loadbalancer</artifactId>
         </dependency>
 
-        <!--    bootstrap 引入    -->
+        <!--    Spring Boot Actuator    -->
         <dependency>
-            <groupId>org.springframework.cloud</groupId>
-            <artifactId>spring-cloud-starter-bootstrap</artifactId>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+
+        <!--    Spring Boot Client    -->
+        <dependency>
+            <groupId>de.codecentric</groupId>
+            <artifactId>spring-boot-admin-starter-client</artifactId>
+            <version>${spring-boot-admin.version}</version>
+        </dependency>
+
+        <!--    Sentinel DataSource Nacos    -->
+        <dependency>
+            <groupId>com.alibaba.csp</groupId>
+            <artifactId>sentinel-datasource-nacos</artifactId>
         </dependency>
     </dependencies>
 </project>
Index: asc-java/asc-visual/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!--\r\n  ~ Copyright (c) 2024 Leyramu. All rights reserved.\r\n  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.\r\n  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.\r\n  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.\r\n  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.\r\n  -->\r\n\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\r\n    <!--      模块版本号      -->\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <!--      父工程      -->\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-java</artifactId>\r\n        <relativePath>../pom.xml</relativePath>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <!--      子模块      -->\r\n    <modules>\r\n        <module>asc-visual-monitor</module>\r\n    </modules>\r\n\r\n    <!--      打包方式      -->\r\n    <packaging>pom</packaging>\r\n\r\n    <!--      模块描述      -->\r\n    <description>系统图形化管理工程</description>\r\n\r\n    <!--      工件 ID      -->\r\n    <artifactId>asc-visual</artifactId>\r\n\r\n    <!--      依赖      -->\r\n    <dependencies>\r\n        <!--    Spring Cloud Alibaba Nacos    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Spring Cloud Alibaba Nacos Config    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Spring Cloud Alibaba Sentinel    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Web    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-visual/pom.xml b/asc-java/asc-visual/pom.xml
--- a/asc-java/asc-visual/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-visual/pom.xml	(date 1726315959075)
@@ -14,7 +14,7 @@
 
     <!--      父工程      -->
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-java</artifactId>
         <relativePath>../pom.xml</relativePath>
         <version>1.0.0</version>
Index: asc-java/asc-common/asc-common-datasource/src/main/java/leyramu/qinian/asc/common/datasource/annotation/Slave.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-datasource/src/main/java/leyramu/qinian/asc/common/datasource/annotation/Slave.java b/asc-java/asc-common/asc-common-datasource/src/main/java/leyramu/qinian/asc/common/datasource/annotation/Slave.java
new file mode 100644
--- /dev/null	(date 1722018976522)
+++ b/asc-java/asc-common/asc-common-datasource/src/main/java/leyramu/qinian/asc/common/datasource/annotation/Slave.java	(date 1722018976522)
@@ -0,0 +1,28 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.datasource.annotation;
+
+import com.baomidou.dynamic.datasource.annotation.DS;
+
+import java.lang.annotation.*;
+
+/**
+ * 从库数据源
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Target({ElementType.TYPE, ElementType.METHOD})
+@Retention(RetentionPolicy.RUNTIME)
+@Documented
+@DS("slave")
+public @interface Slave {
+
+}
Index: asc-java/asc-common/asc-common-datasource/src/main/java/leyramu/qinian/asc/common/datasource/annotation/Master.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-datasource/src/main/java/leyramu/qinian/asc/common/datasource/annotation/Master.java b/asc-java/asc-common/asc-common-datasource/src/main/java/leyramu/qinian/asc/common/datasource/annotation/Master.java
new file mode 100644
--- /dev/null	(date 1722018976530)
+++ b/asc-java/asc-common/asc-common-datasource/src/main/java/leyramu/qinian/asc/common/datasource/annotation/Master.java	(date 1722018976530)
@@ -0,0 +1,28 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.datasource.annotation;
+
+import com.baomidou.dynamic.datasource.annotation.DS;
+
+import java.lang.annotation.*;
+
+/**
+ * 主库数据源
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Target({ElementType.TYPE, ElementType.METHOD})
+@Retention(RetentionPolicy.RUNTIME)
+@Documented
+@DS("master")
+public @interface Master {
+
+}
Index: asc-java/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\r\n    <!--      模块版本号      -->\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <!--      组织 ID      -->\r\n    <groupId>org.qinian</groupId>\r\n\r\n    <!--      工件 ID      -->\r\n    <artifactId>asc-java</artifactId>\r\n\r\n    <!--      版本号      -->\r\n    <version>1.0.0</version>\r\n\r\n    <!--      打包方式      -->\r\n    <packaging>pom</packaging>\r\n\r\n    <!--      项目名称      -->\r\n    <name>aquaScanCloud</name>\r\n\r\n    <!--      模块描述      -->\r\n    <description>遥感渔排监测系统</description>\r\n\r\n    <!--      许可证      -->\r\n    <licenses>\r\n        <!--    Apache 许可证      -->\r\n        <license>\r\n            <name>Apache License, Version 2.0</name>\r\n            <url>https://www.apache.org/licenses/LICENSE-2.0</url>\r\n        </license>\r\n    </licenses>\r\n\r\n    <!--      开发者      -->\r\n    <developers>\r\n        <!--      第一开发者      -->\r\n        <developer>\r\n            <id>MaShuo-dzu</id>\r\n            <name>MaShuo-dzu</name>\r\n            <email>1757093754@qq.com</email>\r\n            <url>https://github.com/MaShuo-dzu</url>\r\n            <organization>leyramu</organization>\r\n            <organizationUrl>https://github.com/Leyramu</organizationUrl>\r\n            <timezone>+8</timezone>\r\n            <roles>\r\n                <role>admin</role>\r\n                <role>developer</role>\r\n                <role>maintainer</role>\r\n                <role>contributor</role>\r\n            </roles>\r\n        </developer>\r\n\r\n        <!--      第二开发者      -->\r\n        <developer>\r\n            <id>Miraitowa-zcx</id>\r\n            <name>Miraitowa_zcx</name>\r\n            <email>2038322151@qq.com</email>\r\n            <url>https://github.com/Miraitowa-zcx</url>\r\n            <organization>leyramu</organization>\r\n            <organizationUrl>https://github.com/Leyramu</organizationUrl>\r\n            <timezone>+8</timezone>\r\n            <roles>\r\n                <role>developer</role>\r\n                <role>contributor</role>\r\n            </roles>\r\n        </developer>\r\n    </developers>\r\n\r\n    <!--      SCM 信息      -->\r\n    <scm>\r\n        <url>https://github.com/Leyramu/AquaScanCloud</url>\r\n        <connection>git@github.com:Leyramu/AquaScanCloud.git</connection>\r\n        <developerConnection>https://github.com/leyramu</developerConnection>\r\n        <tag>HEAD</tag>\r\n    </scm>\r\n\r\n    <!--      父工程      -->\r\n    <!--    <parent>-->\r\n    <!--        <groupId>org.springframework.cloud</groupId>-->\r\n    <!--        <artifactId>spring-cloud-build</artifactId>-->\r\n    <!--        <version>4.1.3</version>-->\r\n    <!--        <relativePath />-->\r\n    <!--    </parent>-->\r\n\r\n    <!--      子模块      -->\r\n    <modules>\r\n        <module>asc-api</module>\r\n        <module>asc-gateway</module>\r\n        <module>asc-service</module>\r\n        <module>asc-common</module>\r\n        <module>asc-cloud</module>\r\n        <module>asc-visual</module>\r\n    </modules>\r\n\r\n    <!--      属性      -->\r\n    <properties>\r\n        <java.version>22</java.version>\r\n        <qinian-cloud.version>1.0.0</qinian-cloud.version>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\r\n        <spring-boot.version>3.3.3</spring-boot.version>\r\n        <spring-framework.version>6.1.12</spring-framework.version>\r\n        <spring-boot-admin.version>3.3.3</spring-boot-admin.version>\r\n        <spring-cloud.version>2023.0.3</spring-cloud.version>\r\n        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>\r\n        <spring-cloud-alibaba.version>2023.0.1.2</spring-cloud-alibaba.version>\r\n        <spring-ai.version>0.8.1</spring-ai.version>\r\n    </properties>\r\n\r\n    <!--      依赖      -->\r\n    <dependencies>\r\n        <!--    Spring Cloud Bootstrap    -->\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-bootstrap</artifactId>\r\n        </dependency>\r\n\r\n        <!--    Lombok    -->\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Test    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n            <exclusions>\r\n                <exclusion>\r\n                    <groupId>com.vaadin.external.google</groupId>\r\n                    <artifactId>android-json</artifactId>\r\n                </exclusion>\r\n            </exclusions>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <!--     Spring Cloud 依赖管理     -->\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <!--    Asc Common Dependencies    -->\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-common-bom</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n\r\n            <!--    Spring Framework Dependencies    -->\r\n            <dependency>\r\n                <groupId>org.springframework</groupId>\r\n                <artifactId>spring-framework-bom</artifactId>\r\n                <version>${spring-framework.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n\r\n            <!--    Spring Boot Dependencies    -->\r\n            <dependency>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-dependencies</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n\r\n            <!--    Spring Cloud Alibaba Dependencies    -->\r\n            <dependency>\r\n                <groupId>com.alibaba.cloud</groupId>\r\n                <artifactId>spring-cloud-alibaba-dependencies</artifactId>\r\n                <version>${spring-cloud-alibaba.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n\r\n            <!--    Spring Cloud  Dependencies    -->\r\n            <dependency>\r\n                <groupId>org.springframework.cloud</groupId>\r\n                <artifactId>spring-cloud-dependencies</artifactId>\r\n                <version>${spring-cloud.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n\r\n            <!--    Spring Cloud Ai    -->\r\n            <dependency>\r\n                <groupId>org.springframework.ai</groupId>\r\n                <artifactId>spring-ai-bom</artifactId>\r\n                <version>${spring-ai.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n\r\n    <!--      项目配置      -->\r\n    <profiles>\r\n        <!--    开发环境    -->\r\n        <profile>\r\n            <id>dev</id>\r\n            <properties>\r\n                <PROFILE-ACTIVE>dev</PROFILE-ACTIVE>\r\n                <SSL-ENABLED>false</SSL-ENABLED>\r\n                <JASYPT-ENCRYPTOR-PASSWORD>Leyramu_digEdu_Miraitowa_zcx</JASYPT-ENCRYPTOR-PASSWORD>\r\n                <DATASOURCE-USERNAME-NACOS>root</DATASOURCE-USERNAME-NACOS>\r\n                <DATASOURCE-PASSWORD-NACOS>Zcx@223852//</DATASOURCE-PASSWORD-NACOS>\r\n                <DATASOURCE-DRIVER-CLASS-NAME>com.mysql.cj.jdbc.Driver</DATASOURCE-DRIVER-CLASS-NAME>\r\n                <DATASOURCE-PLATFORM>mysql</DATASOURCE-PLATFORM>\r\n                <DATASOURCE-HOST>localhost</DATASOURCE-HOST>\r\n                <DATASOURCE-PORT>3307</DATASOURCE-PORT>\r\n                <DATASOURCE-DB-NACOS>asc_nacos_config</DATASOURCE-DB-NACOS>\r\n                <DATASOURCE-PARAM-NACOS>characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true</DATASOURCE-PARAM-NACOS>\r\n                <NACOS-SERVER-ADDRESS>localhost:8848</NACOS-SERVER-ADDRESS>\r\n                <NACOS-USERNAME>nacos</NACOS-USERNAME>\r\n                <NACOS-PASSWORD>Zcx@223852//</NACOS-PASSWORD>\r\n                <NACOS-GATEWAY-GROUP>GATEWAY_GROUP</NACOS-GATEWAY-GROUP>\r\n                <NACOS-SERVICE-GROUP>SERVICE_GROUP</NACOS-SERVICE-GROUP>\r\n                <NACOS-MONITOR-GROUP>MONITOR_GROUP</NACOS-MONITOR-GROUP>\r\n                <NACOS-NAMESPACE>a31d9d71-818b-4c5b-bc86-a2889c32bcbd</NACOS-NAMESPACE>\r\n                <SENTINEL-USERNAME>sentinel</SENTINEL-USERNAME>\r\n                <SENTINEL-PASSWORD>Zcx@223852//</SENTINEL-PASSWORD>\r\n                <SENTINEL-SERVER-ADDRESS>localhost:8972</SENTINEL-SERVER-ADDRESS>\r\n            </properties>\r\n        </profile>\r\n\r\n        <!--      生产环境      -->\r\n        <profile>\r\n            <id>prod</id>\r\n            <properties>\r\n                <PROFILE-ACTIVE>prod</PROFILE-ACTIVE>\r\n                <SSL-ENABLED>true</SSL-ENABLED>\r\n                <!--suppress UnresolvedMavenProperty >Jasypt 密码< -->\r\n                <JASYPT-ENCRYPTOR-PASSWORD>\r\n                    ${JASYPT-ENCRYPTOR-PASSWORD:Leyramu_digEdu_Miraitowa_zcx}\r\n                </JASYPT-ENCRYPTOR-PASSWORD>\r\n                <!--suppress UnresolvedMavenProperty >数据库用户名< -->\r\n                <DATASOURCE-USERNAME-NACOS>\r\n                    ${DATASOURCE_USERNAME_NACOS:ENC(cm9vdA==)}\r\n                </DATASOURCE-USERNAME-NACOS>\r\n                <!--suppress UnresolvedMavenProperty >数据库密码< -->\r\n                <DATASOURCE-PASSWORD-NACOS>\r\n                    ${DATASOURCE_PASSWORD_NACOS:ENC(WmN4QDIyMzg1Mi8v)}\r\n                </DATASOURCE-PASSWORD-NACOS>\r\n                <!--suppress UnresolvedMavenProperty >数据库驱动类名< -->\r\n                <DATASOURCE-DRIVER-CLASS-NAME>\r\n                    ${DATASOURCE_DRIVER_CLASS_NAME:com.mysql.cj.jdbc.Driver}\r\n                </DATASOURCE-DRIVER-CLASS-NAME>\r\n                <!--suppress UnresolvedMavenProperty >数据库平台< -->\r\n                <DATASOURCE-PLATFORM>\r\n                    ${DATASOURCE_PLATFORM:mysql}\r\n                </DATASOURCE-PLATFORM>\r\n                <!--suppress UnresolvedMavenProperty >数据库地址< -->\r\n                <DATASOURCE-HOST>\r\n                    ${DATASOURCE_HOST:localhost}\r\n                </DATASOURCE-HOST>\r\n                <!--suppress UnresolvedMavenProperty >数据库端口< -->\r\n                <DATASOURCE-PORT>\r\n                    ${DATASOURCE_PORT:3307}\r\n                </DATASOURCE-PORT>\r\n                <!--suppress UnresolvedMavenProperty >数据库名称< -->\r\n                <DATASOURCE-DB-NACOS>\r\n                    ${DATASOURCE_DB_NACOS:dig_edu_nacos_config}\r\n                </DATASOURCE-DB-NACOS>\r\n                <!--suppress UnresolvedMavenProperty >数据库参数< -->\r\n                <DATASOURCE-PARAM-NACOS>\r\n                    ${DATASOURCE_PARAM_NACOS:characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true}\r\n                </DATASOURCE-PARAM-NACOS>\r\n                <NACOS-SERVER-ADDRESS>localhost:8848</NACOS-SERVER-ADDRESS>\r\n                <NACOS-USERNAME>nacos</NACOS-USERNAME>\r\n                <NACOS-PASSWORD>Zcx@223852//</NACOS-PASSWORD>\r\n                <NACOS-GATEWAY-GROUP>GATEWAY_GROUP</NACOS-GATEWAY-GROUP>\r\n                <NACOS-NAMESPACE>a31d9d71-818b-4c5b-bc86-a2889c32bcbd</NACOS-NAMESPACE>\r\n                <SENTINEL-USERNAME>sentinel</SENTINEL-USERNAME>\r\n                <SENTINEL-PASSWORD>Zcx@223852//</SENTINEL-PASSWORD>\r\n                <SENTINEL-SERVER-ADDRESS>localhost:8972</SENTINEL-SERVER-ADDRESS>\r\n            </properties>\r\n        </profile>\r\n    </profiles>\r\n\r\n    <!--      构建插件      -->\r\n    <build>\r\n        <plugins>\r\n            <!--    编译插件    -->\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>${maven-compiler-plugin.version}</version>\r\n                <configuration>\r\n                    <source>${java.version}</source>\r\n                    <target>${java.version}</target>\r\n                    <encoding>${project.build.sourceEncoding}</encoding>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n\r\n        <!--    资源过滤    -->\r\n        <resources>\r\n            <!--     添加需要排除的文件     -->\r\n            <resource>\r\n                <directory>src/main/resources</directory>\r\n                <excludes>\r\n                    <exclude>application*.yml</exclude>\r\n                    <exclude>bootstrap*.yml</exclude>\r\n                    <exclude>log4j2*.xml</exclude>\r\n                    <exclude>*.json</exclude>\r\n                    <exclude>*.properties</exclude>\r\n                </excludes>\r\n            </resource>\r\n\r\n            <!--      添加需要包含的文件      -->\r\n            <resource>\r\n                <directory>src/main/resources</directory>\r\n                <filtering>true</filtering>\r\n                <includes>\r\n                    <include>application.properties</include>\r\n                    <include>application.yml</include>\r\n                    <include>application-${PROFILE-ACTIVE}.yml</include>\r\n                    <include>bootstrap.yml</include>\r\n                    <include>bootstrap-${PROFILE-ACTIVE}.yml</include>\r\n                    <include>log4j2.xml</include>\r\n                    <include>log4j2-${PROFILE-ACTIVE}.xml</include>\r\n                    <include>init_router.json</include>\r\n                    <include>log4j2.component.properties</include>\r\n                </includes>\r\n            </resource>\r\n        </resources>\r\n\r\n        <!--      插件管理      -->\r\n        <pluginManagement>\r\n            <plugins>\r\n                <!--    Spring Boot Maven 插件    -->\r\n                <plugin>\r\n                    <groupId>org.springframework.boot</groupId>\r\n                    <artifactId>spring-boot-maven-plugin</artifactId>\r\n                    <version>${spring-boot.version}</version>\r\n                    <executions>\r\n                        <execution>\r\n                            <goals>\r\n                                <goal>repackage</goal>\r\n                            </goals>\r\n                        </execution>\r\n                    </executions>\r\n                </plugin>\r\n            </plugins>\r\n        </pluginManagement>\r\n    </build>\r\n\r\n    <!--      仓库      -->\r\n    <repositories>\r\n        <!--    Spring Milestones    -->\r\n        <repository>\r\n            <id>spring-milestones</id>\r\n            <name>Spring Milestones</name>\r\n            <url>https://repo.spring.io/milestone</url>\r\n            <releases>\r\n                <enabled>true</enabled>\r\n            </releases>\r\n            <snapshots>\r\n                <enabled>false</enabled>\r\n            </snapshots>\r\n        </repository>\r\n\r\n        <!--    阿里云仓库    -->\r\n        <repository>\r\n            <id>public</id>\r\n            <name>aliyun nexus</name>\r\n            <url>https://maven.aliyun.com/repository/public</url>\r\n            <releases>\r\n                <enabled>true</enabled>\r\n            </releases>\r\n            <snapshots>\r\n                <enabled>false</enabled>\r\n            </snapshots>\r\n        </repository>\r\n\r\n        <!--    Maven 仓库    -->\r\n        <repository>\r\n            <id>central</id>\r\n            <name>Maven Central</name>\r\n            <url>https://repo1.maven.org/maven2</url>\r\n            <releases>\r\n                <enabled>true</enabled>\r\n            </releases>\r\n            <snapshots>\r\n                <enabled>false</enabled>\r\n            </snapshots>\r\n        </repository>\r\n    </repositories>\r\n\r\n    <!--      插件仓库      -->\r\n    <pluginRepositories>\r\n        <!--    Spring Milestones    -->\r\n        <pluginRepository>\r\n            <id>spring-milestones</id>\r\n            <name>Spring Milestones</name>\r\n            <url>https://repo.spring.io/milestone</url>\r\n            <releases>\r\n                <enabled>true</enabled>\r\n            </releases>\r\n            <snapshots>\r\n                <enabled>false</enabled>\r\n            </snapshots>\r\n        </pluginRepository>\r\n\r\n        <!--    阿里云仓库    -->\r\n        <pluginRepository>\r\n            <id>public</id>\r\n            <name>aliyun nexus</name>\r\n            <url>https://maven.aliyun.com/repository/public</url>\r\n            <releases>\r\n                <enabled>true</enabled>\r\n            </releases>\r\n            <snapshots>\r\n                <enabled>false</enabled>\r\n            </snapshots>\r\n        </pluginRepository>\r\n\r\n        <!--    Maven 仓库    -->\r\n        <pluginRepository>\r\n            <id>central</id>\r\n            <name>Maven Central</name>\r\n            <url>https://repo1.maven.org/maven2</url>\r\n            <releases>\r\n                <enabled>true</enabled>\r\n            </releases>\r\n            <snapshots>\r\n                <enabled>false</enabled>\r\n            </snapshots>\r\n        </pluginRepository>\r\n    </pluginRepositories>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/pom.xml b/asc-java/pom.xml
--- a/asc-java/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/pom.xml	(date 1726316384637)
@@ -6,7 +6,7 @@
     <modelVersion>4.0.0</modelVersion>
 
     <!--      组织 ID      -->
-    <groupId>org.qinian</groupId>
+    <groupId>leyramu.qinian</groupId>
 
     <!--      工件 ID      -->
     <artifactId>asc-java</artifactId>
@@ -142,7 +142,7 @@
         <dependencies>
             <!--    Asc Common Dependencies    -->
             <dependency>
-                <groupId>org.qinian</groupId>
+                <groupId>leyramu.qinian</groupId>
                 <artifactId>asc-common-bom</artifactId>
                 <version>${qinian-cloud.version}</version>
                 <type>pom</type>
@@ -219,7 +219,7 @@
                 <NACOS-GATEWAY-GROUP>GATEWAY_GROUP</NACOS-GATEWAY-GROUP>
                 <NACOS-SERVICE-GROUP>SERVICE_GROUP</NACOS-SERVICE-GROUP>
                 <NACOS-MONITOR-GROUP>MONITOR_GROUP</NACOS-MONITOR-GROUP>
-                <NACOS-NAMESPACE>a31d9d71-818b-4c5b-bc86-a2889c32bcbd</NACOS-NAMESPACE>
+                <NACOS-NAMESPACE>ae170a21-2c2e-4d4b-aa26-2b2cfaba4fb8</NACOS-NAMESPACE>
                 <SENTINEL-USERNAME>sentinel</SENTINEL-USERNAME>
                 <SENTINEL-PASSWORD>Zcx@223852//</SENTINEL-PASSWORD>
                 <SENTINEL-SERVER-ADDRESS>localhost:8972</SENTINEL-SERVER-ADDRESS>
@@ -272,7 +272,7 @@
                 <NACOS-USERNAME>nacos</NACOS-USERNAME>
                 <NACOS-PASSWORD>Zcx@223852//</NACOS-PASSWORD>
                 <NACOS-GATEWAY-GROUP>GATEWAY_GROUP</NACOS-GATEWAY-GROUP>
-                <NACOS-NAMESPACE>a31d9d71-818b-4c5b-bc86-a2889c32bcbd</NACOS-NAMESPACE>
+                <NACOS-NAMESPACE>ae170a21-2c2e-4d4b-aa26-2b2cfaba4fb8</NACOS-NAMESPACE>
                 <SENTINEL-USERNAME>sentinel</SENTINEL-USERNAME>
                 <SENTINEL-PASSWORD>Zcx@223852//</SENTINEL-PASSWORD>
                 <SENTINEL-SERVER-ADDRESS>localhost:8972</SENTINEL-SERVER-ADDRESS>
Index: asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/service/impl/FishRaftMonitorServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/service/impl/FishRaftMonitorServiceImpl.java b/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/service/impl/FishRaftMonitorServiceImpl.java
rename from asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/service/impl/FishRaftMonitorServiceImpl.java
rename to asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/service/impl/FishRaftMonitorServiceImpl.java
--- a/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/qinian/service/impl/FishRaftMonitorServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-raftMonitor-service/src/main/java/org/leyramu/service/impl/FishRaftMonitorServiceImpl.java	(date 1726316993102)
@@ -1,15 +1,15 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import lombok.RequiredArgsConstructor;
-import org.qinian.dao.FishRaftMonitorMapper;
+import org.leyramu.mapper.FishRaftMonitorMapper;
 import org.qinian.domain.dto.alert.AddAlertInfoDto;
 import org.qinian.domain.dto.raftMonitor.AddRaftMonitor;
 import org.qinian.domain.pojo.FishRaftMonitor;
-import org.qinian.enums.AlertLevels;
-import org.qinian.enums.AlertTypes;
-import org.qinian.model.RemoteAlertService;
-import org.qinian.service.IFishRaftMonitorService;
+import leyramu.qinian.asc.common.base.enums.AlertLevels;
+import leyramu.qinian.asc.common.base.enums.AlertTypes;
+import org.qinian.domain.model.RemoteAlertService;
+import org.leyramu.service.IFishRaftMonitorService;
 import org.springframework.data.redis.core.RedisTemplate;
 import org.springframework.stereotype.Service;
 
Index: asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/annotation/Log.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/annotation/Log.java b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/annotation/Log.java
new file mode 100644
--- /dev/null	(date 1722019526504)
+++ b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/annotation/Log.java	(date 1722019526504)
@@ -0,0 +1,57 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.log.annotation;
+
+import leyramu.softwarecup.digEdu.common.log.enums.BusinessType;
+import leyramu.softwarecup.digEdu.common.log.enums.OperatorType;
+
+import java.lang.annotation.*;
+
+/**
+ * 自定义操作日志记录注解
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Target({ElementType.PARAMETER, ElementType.METHOD})
+@Retention(RetentionPolicy.RUNTIME)
+@Documented
+public @interface Log {
+
+    /**
+     * 模块
+     */
+    String title() default "";
+
+    /**
+     * 功能
+     */
+    BusinessType businessType() default BusinessType.OTHER;
+
+    /**
+     * 操作人类别
+     */
+    OperatorType operatorType() default OperatorType.MANAGE;
+
+    /**
+     * 是否保存请求的参数
+     */
+    boolean isSaveRequestData() default true;
+
+    /**
+     * 是否保存响应的参数
+     */
+    boolean isSaveResponseData() default true;
+
+    /**
+     * 排除指定的请求参数
+     */
+    String[] excludeParamNames() default {};
+}
Index: asc-java/asc-visual/asc-visual-monitor/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!--\r\n  ~ Copyright (c) 2024 Leyramu. All rights reserved.\r\n  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.\r\n  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.\r\n  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.\r\n  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.\r\n  -->\r\n\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\r\n    <!--      模块版本号      -->\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <!--      父工程      -->\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-visual</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <!--      模块描述      -->\r\n    <description>微服务监控中心</description>\r\n\r\n    <!--      工件 ID      -->\r\n    <artifactId>asc-visual-monitor</artifactId>\r\n\r\n    <!--      依赖      -->\r\n    <dependencies>\r\n        <!--    Spring Boot Admin    -->\r\n        <dependency>\r\n            <groupId>de.codecentric</groupId>\r\n            <artifactId>spring-boot-admin-starter-server</artifactId>\r\n            <version>${spring-boot-admin.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Security    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-security</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <!--      构建插件      -->\r\n    <build>\r\n        <finalName>${project.artifactId}</finalName>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <executions>\r\n                    <execution>\r\n                        <goals>\r\n                            <goal>repackage</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-visual/asc-visual-monitor/pom.xml b/asc-java/asc-visual/asc-visual-monitor/pom.xml
--- a/asc-java/asc-visual/asc-visual-monitor/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-visual/asc-visual-monitor/pom.xml	(date 1726315973354)
@@ -14,7 +14,7 @@
 
     <!--      父工程      -->
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-visual</artifactId>
         <version>1.0.0</version>
     </parent>
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/RecognitionInfoServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/RecognitionInfoServiceImpl.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/impl/RecognitionInfoServiceImpl.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/RecognitionInfoServiceImpl.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/impl/RecognitionInfoServiceImpl.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/RecognitionInfoServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/impl/RecognitionInfoServiceImpl.java	(date 1726316993365)
@@ -1,9 +1,9 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
-import org.qinian.dao.RecognitionInfoMapper;
+import org.leyramu.mapper.RecognitionInfoMapper;
 import org.qinian.domain.pojo.RecognitionInfo;
-import org.qinian.service.IRecognitionInfoService;
+import org.leyramu.service.IRecognitionInfoService;
 import org.springframework.stereotype.Service;
 
 /**
Index: asc-java/asc-service/asc-algorithm-service/src/test/java/com/qinian/baidu/service/BaiDuTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.qinian.baidu.service;\r\n\r\nimport org.junit.jupiter.api.Test;\r\nimport org.qinian.AscAlgorithmServiceApplication;\r\nimport org.qinian.entity.BusinessLicInfo;\r\nimport org.qinian.service.BaiduOCRService;\r\nimport org.qinian.utils.Base64Util;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\n\r\nimport java.io.File;\r\n\r\n@SpringBootTest(classes = AscAlgorithmServiceApplication.class)\r\npublic class BaiDuTest {\r\n    @Autowired\r\n    private BaiduOCRService baiduOCRService;\r\n\r\n    @Test\r\n    public void BLTest() {\r\n        //获取本地的绝对路径图片\r\n        File file = new File(\"E:\\\\springProject\\\\AquaScanCloud\\\\asc-master\\\\asc-service\\\\asc-algorithm-service\\\\src\\\\main\\\\resources\\\\static\\\\0.jpg\");\r\n        //进行BASE64位编码\r\n        String imageBase = Base64Util.encodeImageToBase64(file, true);\r\n\r\n        BusinessLicInfo businessLicHashMapByImageBase = baiduOCRService.getBusinessLicHashMapByImageBase(imageBase);\r\n\r\n        System.out.println(businessLicHashMapByImageBase);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/test/java/com/qinian/baidu/service/BaiDuTest.java b/asc-java/asc-service/asc-algorithm-service/src/test/java/com/qinian/baidu/service/BaiDuTest.java
--- a/asc-java/asc-service/asc-algorithm-service/src/test/java/com/qinian/baidu/service/BaiDuTest.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/test/java/com/qinian/baidu/service/BaiDuTest.java	(date 1726316993160)
@@ -1,10 +1,10 @@
 package com.qinian.baidu.service;
 
 import org.junit.jupiter.api.Test;
-import org.qinian.AscAlgorithmServiceApplication;
-import org.qinian.entity.BusinessLicInfo;
-import org.qinian.service.BaiduOCRService;
-import org.qinian.utils.Base64Util;
+import org.leyramu.AscAlgorithmServiceApplication;
+import leyramu.qinian.asc.common.base.entity.BusinessLicInfo;
+import org.leyramu.service.BaiduOCRService;
+import leyramu.qinian.asc.common.base.utils.Base64Util;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.context.SpringBootTest;
 
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/AlgorithmServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/AlgorithmServiceImpl.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/impl/AlgorithmServiceImpl.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/AlgorithmServiceImpl.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/impl/AlgorithmServiceImpl.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/AlgorithmServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/impl/AlgorithmServiceImpl.java	(date 1726316993312)
@@ -1,9 +1,9 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
-import org.qinian.dao.AlgorithmMapper;
+import org.leyramu.mapper.AlgorithmMapper;
 import org.qinian.domain.pojo.Algorithm;
-import org.qinian.service.IAlgorithmService;
+import org.leyramu.service.IAlgorithmService;
 import org.springframework.stereotype.Service;
 
 /**
Index: asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/BaiduOCRServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/BaiduOCRServiceImpl.java b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/impl/BaiduOCRServiceImpl.java
rename from asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/BaiduOCRServiceImpl.java
rename to asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/impl/BaiduOCRServiceImpl.java
--- a/asc-java/asc-service/asc-algorithm-service/src/main/java/org/qinian/service/impl/BaiduOCRServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/src/main/java/org/leyramu/service/impl/BaiduOCRServiceImpl.java	(date 1726316993285)
@@ -1,9 +1,9 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import lombok.RequiredArgsConstructor;
-import org.qinian.entity.BusinessLicInfo;
-import org.qinian.service.BaiduOCRService;
-import org.qinian.utils.BaiDuOCRUtil;
+import leyramu.qinian.asc.common.base.entity.BusinessLicInfo;
+import org.leyramu.service.BaiduOCRService;
+import org.leyramu.utils.BaiDuOCRUtil;
 import org.springframework.stereotype.Service;
 
 import java.util.HashMap;
Index: asc-java/asc-common/asc-common-log/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-log/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-log/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1726317592689)
+++ b/asc-java/asc-common/asc-common-log/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1726317592689)
@@ -0,0 +1,10 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.qinian.asc.common.log.service.AsyncLogService
+leyramu.qinian.asc.common.log.aspect.LogAspect
Index: asc-java/asc-common/asc-common-bom/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!--\r\n  ~ Copyright (c) 2024 Leyramu. All rights reserved.\r\n  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.\r\n  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.\r\n  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.\r\n  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.\r\n  -->\r\n\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\r\n    <!--      模块版本号      -->\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <!--      组织 ID      -->\r\n    <groupId>org.qinian</groupId>\r\n\r\n    <!--      工件 ID      -->\r\n    <artifactId>asc-common-bom</artifactId>\r\n\r\n    <!--      版本号      -->\r\n    <version>1.0.0</version>\r\n\r\n    <!--      打包方式      -->\r\n    <packaging>pom</packaging>\r\n\r\n    <!--      模块描述      -->\r\n    <description>管理所有微服务业务依赖</description>\r\n\r\n    <!--      属性      -->\r\n    <properties>\r\n        <poi.version>5.3.0</poi.version>\r\n        <jjwt.version>0.12.6</jjwt.version>\r\n        <druid.version>1.2.23</druid.version>\r\n        <minio.version>8.5.11</minio.version>\r\n        <tobato.version>1.27.2</tobato.version>\r\n        <velocity.version>2.3</velocity.version>\r\n        <kaptcha.version>2.3.3</kaptcha.version>\r\n        <fastjson.version>2.0.52</fastjson.version>\r\n        <redisson.version>3.18.0</redisson.version>\r\n        <redisson.version>3.33.0</redisson.version>\r\n        <dynamic-ds.version>4.3.1</dynamic-ds.version>\r\n        <commons.io.version>2.16.1</commons.io.version>\r\n        <swagger.fox.version>3.0.0</swagger.fox.version>\r\n        <qinian-cloud.version>1.0.0</qinian-cloud.version>\r\n        <mybatis-plus.version>3.5.7</mybatis-plus.version>\r\n        <swagger.core.version>2.2.20</swagger.core.version>\r\n        <pagehelper.boot.version>2.1.0</pagehelper.boot.version>\r\n        <transmittable-thread-local.version>2.14.5</transmittable-thread-local.version>\r\n    </properties>\r\n\r\n    <!--     Spring Cloud 依赖管理     -->\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <!--    Swagger    -->\r\n            <dependency>\r\n                <groupId>io.springfox</groupId>\r\n                <artifactId>springfox-swagger2</artifactId>\r\n                <version>${swagger.fox.version}</version>\r\n            </dependency>\r\n\r\n            <!--    Swagger UI    -->\r\n            <dependency>\r\n                <groupId>io.springfox</groupId>\r\n                <artifactId>springfox-swagger-ui</artifactId>\r\n                <version>${swagger.fox.version}</version>\r\n            </dependency>\r\n\r\n            <!--    Swagger Models    -->\r\n            <dependency>\r\n                <groupId>io.swagger.core.v3</groupId>\r\n                <artifactId>swagger-models</artifactId>\r\n                <version>2.1.2</version>\r\n            </dependency>\r\n\r\n            <!--    Swagger Annotations    -->\r\n            <dependency>\r\n                <groupId>io.swagger.core.v3</groupId>\r\n                <artifactId>swagger-annotations</artifactId>\r\n                <version>${swagger.core.version}</version>\r\n            </dependency>\r\n\r\n            <!--    Spring Boot Swagger    -->\r\n            <dependency>\r\n                <groupId>io.springfox</groupId>\r\n                <artifactId>springfox-boot-starter</artifactId>\r\n                <version>${swagger.fox.version}</version>\r\n            </dependency>\r\n\r\n            <!--    FastDFS 分布式文件系统    -->\r\n            <dependency>\r\n                <groupId>com.github.tobato</groupId>\r\n                <artifactId>fastdfs-client</artifactId>\r\n                <version>${tobato.version}</version>\r\n            </dependency>\r\n\r\n            <!--     Minio     -->\r\n            <dependency>\r\n                <groupId>io.minio</groupId>\r\n                <artifactId>minio</artifactId>\r\n                <version>${minio.version}</version>\r\n            </dependency>\r\n\r\n            <!--    验证码    -->\r\n            <dependency>\r\n                <groupId>pro.fessional</groupId>\r\n                <artifactId>kaptcha</artifactId>\r\n                <version>${kaptcha.version}</version>\r\n            </dependency>\r\n\r\n            <!--    MyBatis Plus    -->\r\n            <dependency>\r\n                <groupId>com.baomidou</groupId>\r\n                <artifactId>mybatis-plus-spring-boot3-starter</artifactId>\r\n                <version>${mybatis-plus.version}</version>\r\n            </dependency>\r\n\r\n            <!--    io 常用工具类    -->\r\n            <dependency>\r\n                <groupId>commons-io</groupId>\r\n                <artifactId>commons-io</artifactId>\r\n                <version>${commons.io.version}</version>\r\n            </dependency>\r\n\r\n            <!--    excel 工具    -->\r\n            <dependency>\r\n                <groupId>org.apache.poi</groupId>\r\n                <artifactId>poi-ooxml</artifactId>\r\n                <version>${poi.version}</version>\r\n            </dependency>\r\n\r\n            <!--    代码生成使用模板    -->\r\n            <dependency>\r\n                <groupId>org.apache.velocity</groupId>\r\n                <artifactId>velocity-engine-core</artifactId>\r\n                <version>${velocity.version}</version>\r\n            </dependency>\r\n\r\n            <!--    JSON 解析器和生成器    -->\r\n            <dependency>\r\n                <groupId>com.alibaba.fastjson2</groupId>\r\n                <artifactId>fastjson2</artifactId>\r\n                <version>${fastjson.version}</version>\r\n            </dependency>\r\n\r\n            <!--    JWT API    -->\r\n            <dependency>\r\n                <groupId>io.jsonwebtoken</groupId>\r\n                <artifactId>jjwt-api</artifactId>\r\n                <version>${jjwt.version}</version>\r\n            </dependency>\r\n\r\n            <!--    JWT Impl    -->\r\n            <dependency>\r\n                <groupId>io.jsonwebtoken</groupId>\r\n                <artifactId>jjwt-impl</artifactId>\r\n                <version>${jjwt.version}</version>\r\n            </dependency>\r\n\r\n            <!--    JWT Jackson    -->\r\n            <dependency>\r\n                <groupId>io.jsonwebtoken</groupId>\r\n                <artifactId>jjwt-jackson</artifactId>\r\n                <version>${jjwt.version}</version>\r\n            </dependency>\r\n\r\n            <!--    线程传递值    -->\r\n            <dependency>\r\n                <groupId>com.alibaba</groupId>\r\n                <artifactId>transmittable-thread-local</artifactId>\r\n                <version>${transmittable-thread-local.version}</version>\r\n            </dependency>\r\n\r\n            <!--    Druid    -->\r\n            <dependency>\r\n                <groupId>com.alibaba</groupId>\r\n                <artifactId>druid-spring-boot-3-starter</artifactId>\r\n                <version>${druid.version}</version>\r\n            </dependency>\r\n\r\n            <!--    Dynamic DataSource    -->\r\n            <dependency>\r\n                <groupId>com.baomidou</groupId>\r\n                <artifactId>dynamic-datasource-spring-boot3-starter</artifactId>\r\n                <version>${dynamic-ds.version}</version>\r\n            </dependency>\r\n\r\n            <!--    Redisson    -->\r\n            <dependency>\r\n                <groupId>org.redisson</groupId>\r\n                <artifactId>redisson</artifactId>\r\n                <version>${redisson.version}</version>\r\n            </dependency>\r\n\r\n            <!--      =====================================================      -->\r\n            <!--                                                项目模块管理                                             -->\r\n            <!--      =====================================================      -->\r\n\r\n            <!--    Asc API    -->\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-api-domain</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-api-system</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <!--    Asc Cloud    -->\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-cloud-seata</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-admin-cloud</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <!--    Asc Common    -->\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-common-utils</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <!--    Asc Gateway    -->\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-gateway-api</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <!--    Asc Service    -->\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-alert-service</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-algorithm-service</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-fishRaft-service</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-raftMonitor-service</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-user-service</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n            <dependency>\r\n                <groupId>org.qinian</groupId>\r\n                <artifactId>asc-weather-service</artifactId>\r\n                <version>${qinian-cloud.version}</version>\r\n            </dependency>\r\n\r\n\r\n            <!--            &lt;!&ndash;    核心模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-common-core</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    Swagger 接口模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-common-swagger</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    系统接口模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-api-system</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    学生接口模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-api-student</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    权限接口    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-api-permission</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    教师接口    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-api-teacher</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    安全模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-common-security</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    Redis 模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-common-redis</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    基本模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-common-base</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    算法模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-common-algorithm</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    数据源模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-common-datasource</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    数据范围模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-common-datascope</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n\r\n            <!--            &lt;!&ndash;    日志模块    &ndash;&gt;-->\r\n            <!--            <dependency>-->\r\n            <!--                <groupId>leyramu.softwarecup</groupId>-->\r\n            <!--                <artifactId>digEdu-common-log</artifactId>-->\r\n            <!--                <version>${leyramu-digEdu.version}</version>-->\r\n            <!--            </dependency>-->\r\n        </dependencies>\r\n    </dependencyManagement>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-bom/pom.xml b/asc-java/asc-common/asc-common-bom/pom.xml
--- a/asc-java/asc-common/asc-common-bom/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-common/asc-common-bom/pom.xml	(date 1726317853797)
@@ -13,7 +13,7 @@
     <modelVersion>4.0.0</modelVersion>
 
     <!--      组织 ID      -->
-    <groupId>org.qinian</groupId>
+    <groupId>leyramu.qinian</groupId>
 
     <!--      工件 ID      -->
     <artifactId>asc-common-bom</artifactId>
@@ -196,174 +196,139 @@
             <!--                                                项目模块管理                                             -->
             <!--      =====================================================      -->
 
-            <!--    Asc API    -->
+            <!--    Asc Api Domain    -->
             <dependency>
-                <groupId>org.qinian</groupId>
+                <groupId>leyramu.qinian</groupId>
                 <artifactId>asc-api-domain</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
+            <!--            <dependency>-->
+            <!--                <groupId>org.qinian</groupId>-->
+            <!--                <artifactId>asc-api-system</artifactId>-->
+            <!--                <version>${qinian-cloud.version}</version>-->
+            <!--            </dependency>-->
+
+            <!--            &lt;!&ndash;    Asc Common    &ndash;&gt;-->
+            <!--            <dependency>-->
+            <!--                <groupId>org.qinian</groupId>-->
+            <!--                <artifactId>asc-common-utils</artifactId>-->
+            <!--                <version>${qinian-cloud.version}</version>-->
+            <!--            </dependency>-->
+
+            <!--    Asc Gateway    -->
             <dependency>
-                <groupId>org.qinian</groupId>
-                <artifactId>asc-api-system</artifactId>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-gateway-api</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
-            <!--    Asc Cloud    -->
+            <!--    Asc common i18n    -->
             <dependency>
-                <groupId>org.qinian</groupId>
-                <artifactId>asc-cloud-seata</artifactId>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-common-i18n</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
+            <!--    Asc Service    -->
             <dependency>
-                <groupId>org.qinian</groupId>
-                <artifactId>asc-admin-cloud</artifactId>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-alert-service</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
-            <!--    Asc Common    -->
             <dependency>
-                <groupId>org.qinian</groupId>
-                <artifactId>asc-common-utils</artifactId>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-algorithm-service</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
-            <!--    Asc Gateway    -->
             <dependency>
                 <groupId>org.qinian</groupId>
-                <artifactId>asc-gateway-api</artifactId>
+                <artifactId>asc-fishRaft-service</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
-            <!--    Asc Service    -->
             <dependency>
-                <groupId>org.qinian</groupId>
-                <artifactId>asc-alert-service</artifactId>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-raftMonitor-service</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
             <dependency>
-                <groupId>org.qinian</groupId>
-                <artifactId>asc-algorithm-service</artifactId>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-user-service</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
             <dependency>
-                <groupId>org.qinian</groupId>
-                <artifactId>asc-fishRaft-service</artifactId>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-weather-service</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
+            <!--    核心模块    -->
             <dependency>
-                <groupId>org.qinian</groupId>
-                <artifactId>asc-raftMonitor-service</artifactId>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-common-core</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
+            <!--    Swagger 接口模块    -->
             <dependency>
-                <groupId>org.qinian</groupId>
-                <artifactId>asc-user-service</artifactId>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-common-swagger</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
+            <!--    系统接口模块    -->
             <dependency>
-                <groupId>org.qinian</groupId>
-                <artifactId>asc-weather-service</artifactId>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-api-system</artifactId>
                 <version>${qinian-cloud.version}</version>
             </dependency>
 
-
-            <!--            &lt;!&ndash;    核心模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-common-core</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
-
-            <!--            &lt;!&ndash;    Swagger 接口模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-common-swagger</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
-
-            <!--            &lt;!&ndash;    系统接口模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-api-system</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
-
-            <!--            &lt;!&ndash;    学生接口模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-api-student</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
-
-            <!--            &lt;!&ndash;    权限接口    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-api-permission</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
-
-            <!--            &lt;!&ndash;    教师接口    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-api-teacher</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
-
-            <!--            &lt;!&ndash;    安全模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-common-security</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
+            <!--    安全模块    -->
+            <dependency>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-common-security</artifactId>
+                <version>${qinian-cloud.version}</version>
+            </dependency>
 
-            <!--            &lt;!&ndash;    Redis 模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-common-redis</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
+            <!--    Redis 模块    -->
+            <dependency>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-common-redis</artifactId>
+                <version>${qinian-cloud.version}</version>
+            </dependency>
 
-            <!--            &lt;!&ndash;    基本模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-common-base</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
+            <!--    基本模块    -->
+            <dependency>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-common-base</artifactId>
+                <version>${qinian-cloud.version}</version>
+            </dependency>
 
-            <!--            &lt;!&ndash;    算法模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-common-algorithm</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
+            <!--    数据源模块    -->
+            <dependency>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-common-datasource</artifactId>
+                <version>${qinian-cloud.version}</version>
+            </dependency>
 
-            <!--            &lt;!&ndash;    数据源模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-common-datasource</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
+            <!--    数据范围模块    -->
+            <dependency>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-common-datascope</artifactId>
+                <version>${qinian-cloud.version}</version>
+            </dependency>
 
-            <!--            &lt;!&ndash;    数据范围模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-common-datascope</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
-
-            <!--            &lt;!&ndash;    日志模块    &ndash;&gt;-->
-            <!--            <dependency>-->
-            <!--                <groupId>leyramu.softwarecup</groupId>-->
-            <!--                <artifactId>digEdu-common-log</artifactId>-->
-            <!--                <version>${leyramu-digEdu.version}</version>-->
-            <!--            </dependency>-->
+            <!--    日志模块    -->
+            <dependency>
+                <groupId>leyramu.qinian</groupId>
+                <artifactId>asc-common-log</artifactId>
+                <version>${qinian-cloud.version}</version>
+            </dependency>
         </dependencies>
     </dependencyManagement>
 </project>
Index: asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/impl/FishRaftPointServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/impl/FishRaftPointServiceImpl.java b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/impl/FishRaftPointServiceImpl.java
rename from asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/impl/FishRaftPointServiceImpl.java
rename to asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/impl/FishRaftPointServiceImpl.java
--- a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/impl/FishRaftPointServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/impl/FishRaftPointServiceImpl.java	(date 1726316993406)
@@ -1,9 +1,9 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
-import org.qinian.dao.FishRaftPointMapper;
+import org.leyramu.mapper.FishRaftPointMapper;
 import org.qinian.domain.pojo.FishRaftPoint;
-import org.qinian.service.IFishRaftPointService;
+import org.leyramu.service.IFishRaftPointService;
 import org.springframework.stereotype.Service;
 
 import java.util.List;
Index: asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/impl/LocationServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/impl/LocationServiceImpl.java b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/impl/LocationServiceImpl.java
rename from asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/impl/LocationServiceImpl.java
rename to asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/impl/LocationServiceImpl.java
--- a/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/qinian/service/impl/LocationServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-fishRaft-service/src/main/java/org/leyramu/service/impl/LocationServiceImpl.java	(date 1726316993325)
@@ -1,12 +1,12 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import cn.hutool.core.bean.BeanUtil;
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
-import org.qinian.dao.LocationMapper;
+import org.leyramu.mapper.LocationMapper;
 import org.qinian.domain.dto.fishRaft.AddLocationDto;
 import org.qinian.domain.pojo.Location;
-import org.qinian.service.ILocationService;
-import org.qinian.utils.LocationUtil;
+import org.leyramu.service.ILocationService;
+import leyramu.qinian.asc.common.base.utils.LocationUtil;
 import org.springframework.stereotype.Service;
 
 /**
Index: asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/weather/WeatherAddDto.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/weather/WeatherAddDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/weather/WeatherAddDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/weather/WeatherAddDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/weather/WeatherAddDto.java
--- a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/weather/WeatherAddDto.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/weather/WeatherAddDto.java	(date 1726310283779)
@@ -3,7 +3,7 @@
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
-import org.qinian.entity.WeatherInfo;
+import leyramu.qinian.asc.common.base.entity.WeatherInfo;
 
 @Data
 @AllArgsConstructor
Index: asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/OperatorType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/OperatorType.java b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/OperatorType.java
new file mode 100644
--- /dev/null	(date 1722019526498)
+++ b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/OperatorType.java	(date 1722019526498)
@@ -0,0 +1,34 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.log.enums;
+
+/**
+ * 操作人类别
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+public enum OperatorType {
+
+    /**
+     * 其它
+     */
+    OTHER,
+
+    /**
+     * 后台用户
+     */
+    MANAGE,
+
+    /**
+     * 手机端用户
+     */
+    MOBILE
+}
Index: asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/BusinessStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/BusinessStatus.java b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/BusinessStatus.java
new file mode 100644
--- /dev/null	(date 1722019526489)
+++ b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/BusinessStatus.java	(date 1722019526489)
@@ -0,0 +1,29 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.log.enums;
+
+/**
+ * 操作状态
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+public enum BusinessStatus {
+
+    /**
+     * 成功
+     */
+    SUCCESS,
+
+    /**
+     * 失败
+     */
+    FAIL,
+}
Index: asc-java/asc-service/asc-email-service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-service</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-email-service</artifactId>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <!--        mail-->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-mail</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-email-service/pom.xml b/asc-java/asc-service/asc-email-service/pom.xml
--- a/asc-java/asc-service/asc-email-service/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-email-service/pom.xml	(date 1726315789812)
@@ -4,19 +4,13 @@
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-service</artifactId>
         <version>1.0.0</version>
     </parent>
 
     <artifactId>asc-email-service</artifactId>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <dependencies>
         <!--        mail-->
         <dependency>
@@ -24,4 +18,4 @@
             <artifactId>spring-boot-starter-mail</artifactId>
         </dependency>
     </dependencies>
-</project>
\ No newline at end of file
+</project>
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/RandomStringUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/RandomStringUtil.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/RandomStringUtil.java
new file mode 100644
--- /dev/null	(date 1726306233448)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/RandomStringUtil.java	(date 1726306233448)
@@ -0,0 +1,354 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils;
+
+import java.util.Random;
+
+/**
+ * <p>
+ * Operations for random <code>String</code>s.
+ * </p>
+ * <p>
+ * Currently <em>private high surrogate</em> characters are ignored. These are unicode
+ * characters that fall between the values 56192 (db80) and 56319 (dbff) as we don't know
+ * how to handle them. High and low surrogates are correctly dealt with - that is if a
+ * high surrogate is randomly chosen, 55296 (d800) to 56191 (db7f) then it is followed by
+ * a low surrogate. If a low surrogate is chosen, 56320 (dc00) to 57343 (dfff) then it is
+ * placed after a randomly chosen high surrogate.
+ * </p>
+ *
+ * <p>
+ * #ThreadSafe#
+ * </p>
+ *
+ * @author Apache Software Foundation
+ * @author <a href="mailto:steven@caswell.name">Steven Caswell</a>
+ * @author Gary Gregory
+ * @author Phil Steitz
+ * @version $Id: RandomStringUtils.java 1056988 2011-01-09 17:58:53Z niallp $
+ * @since 1.0
+ */
+public final class RandomStringUtil {
+
+	/**
+	 * <p>
+	 * Random object used by random method. This has to be not local to the random method
+	 * so as to not return the same value in the same millisecond.
+	 * </p>
+	 */
+	private static final Random RANDOM = new Random();
+
+	/**
+	 * <p>
+	 * <code>RandomStringUtils</code> instances should NOT be constructed in standard
+	 * programming. Instead, the class should be used as
+	 * <code>RandomStringUtils.random(5);</code>.
+	 * </p>
+	 *
+	 * <p>
+	 * This constructor is public to permit tools that require a JavaBean instance to
+	 * operate.
+	 * </p>
+	 */
+	public RandomStringUtil() {
+		super();
+	}
+
+	// Random
+	// -----------------------------------------------------------------------
+
+	/**
+	 * <p>
+	 * Creates a random string whose length is the number of characters specified.
+	 * </p>
+	 *
+	 * <p>
+	 * Characters will be chosen from the set of all characters.
+	 * </p>
+	 * @param count the length of random string to create
+	 * @return the random string
+	 */
+	public static String random(int count) {
+		return random(count, false, false);
+	}
+
+	/**
+	 * <p>
+	 * Creates a random string whose length is the number of characters specified.
+	 * </p>
+	 *
+	 * <p>
+	 * Characters will be chosen from the set of characters whose ASCII value is between
+	 * <code>32</code> and <code>126</code> (inclusive).
+	 * </p>
+	 * @param count the length of random string to create
+	 * @return the random string
+	 */
+	public static String randomAscii(int count) {
+		return random(count, 32, 127, false, false);
+	}
+
+	/**
+	 * <p>
+	 * Creates a random string whose length is the number of characters specified.
+	 * </p>
+	 *
+	 * <p>
+	 * Characters will be chosen from the set of alphabetic characters.
+	 * </p>
+	 * @param count the length of random string to create
+	 * @return the random string
+	 */
+	public static String randomAlphabetic(int count) {
+		return random(count, true, false);
+	}
+
+	/**
+	 * <p>
+	 * Creates a random string whose length is the number of characters specified.
+	 * </p>
+	 *
+	 * <p>
+	 * Characters will be chosen from the set of alpha-numeric characters.
+	 * </p>
+	 * @param count the length of random string to create
+	 * @return the random string
+	 */
+	public static String randomAlphanumeric(int count) {
+		return random(count, true, true);
+	}
+
+	/**
+	 * <p>
+	 * Creates a random string whose length is the number of characters specified.
+	 * </p>
+	 *
+	 * <p>
+	 * Characters will be chosen from the set of numeric characters.
+	 * </p>
+	 * @param count the length of random string to create
+	 * @return the random string
+	 */
+	public static String randomNumeric(int count) {
+		return random(count, false, true);
+	}
+
+	/**
+	 * <p>
+	 * Creates a random string whose length is the number of characters specified.
+	 * </p>
+	 *
+	 * <p>
+	 * Characters will be chosen from the set of alpha-numeric characters as indicated by
+	 * the arguments.
+	 * </p>
+	 * @param count the length of random string to create
+	 * @param letters if <code>true</code>, generated string will include alphabetic
+	 * characters
+	 * @param numbers if <code>true</code>, generated string will include numeric
+	 * characters
+	 * @return the random string
+	 */
+	public static String random(int count, boolean letters, boolean numbers) {
+		return random(count, 0, 0, letters, numbers);
+	}
+
+	/**
+	 * <p>
+	 * Creates a random string whose length is the number of characters specified.
+	 * </p>
+	 *
+	 * <p>
+	 * Characters will be chosen from the set of alpha-numeric characters as indicated by
+	 * the arguments.
+	 * </p>
+	 * @param count the length of random string to create
+	 * @param start the position in set of chars to start at
+	 * @param end the position in set of chars to end before
+	 * @param letters if <code>true</code>, generated string will include alphabetic
+	 * characters
+	 * @param numbers if <code>true</code>, generated string will include numeric
+	 * characters
+	 * @return the random string
+	 */
+	public static String random(int count, int start, int end, boolean letters, boolean numbers) {
+		return random(count, start, end, letters, numbers, null, RANDOM);
+	}
+
+	/**
+	 * <p>
+	 * Creates a random string based on a variety of options, using default source of
+	 * randomness.
+	 * </p>
+	 *
+	 * <p>
+	 * This method has exactly the same semantics as
+	 * {@link #random(int, int, int, boolean, boolean, char[], Random)}, but instead of
+	 * using an externally supplied source of randomness, it uses the internal static
+	 * {@link Random} instance.
+	 * </p>
+	 * @param count the length of random string to create
+	 * @param start the position in set of chars to start at
+	 * @param end the position in set of chars to end before
+	 * @param letters only allow letters?
+	 * @param numbers only allow numbers?
+	 * @param chars the set of chars to choose randoms from. If <code>null</code>, then it
+	 * will use the set of all chars.
+	 * @return the random string
+	 * @throws ArrayIndexOutOfBoundsException if there are not
+	 * <code>(end - start) + 1</code> characters in the set array.
+	 */
+	public static String random(int count, int start, int end, boolean letters, boolean numbers, char[] chars) {
+		return random(count, start, end, letters, numbers, chars, RANDOM);
+	}
+
+	/**
+	 * <p>
+	 * Creates a random string based on a variety of options, using supplied source of
+	 * randomness.
+	 * </p>
+	 *
+	 * <p>
+	 * If start and end are both <code>0</code>, start and end are set to <code>' '</code>
+	 * and <code>'z'</code>, the ASCII printable characters, will be used, unless letters
+	 * and numbers are both <code>false</code>, in which case, start and end are set to
+	 * <code>0</code> and <code>Integer.MAX_VALUE</code>.
+	 *
+	 * <p>
+	 * If set is not <code>null</code>, characters between start and end are chosen.
+	 * </p>
+	 *
+	 * <p>
+	 * This method accepts a user-supplied {@link Random} instance to use as a source of
+	 * randomness. By seeding a single {@link Random} instance with a fixed seed and using
+	 * it for each call, the same random sequence of strings can be generated repeatedly
+	 * and predictably.
+	 * </p>
+	 * @param count the length of random string to create
+	 * @param start the position in set of chars to start at
+	 * @param end the position in set of chars to end before
+	 * @param letters only allow letters?
+	 * @param numbers only allow numbers?
+	 * @param chars the set of chars to choose randoms from. If <code>null</code>, then it
+	 * will use the set of all chars.
+	 * @param random a source of randomness.
+	 * @return the random string
+	 * @throws ArrayIndexOutOfBoundsException if there are not
+	 * <code>(end - start) + 1</code> characters in the set array.
+	 * @throws IllegalArgumentException if <code>count</code> &lt; 0.
+	 * @since 2.0
+	 */
+	public static String random(int count, int start, int end, boolean letters, boolean numbers, char[] chars,
+			Random random) {
+		if (count == 0) {
+			return "";
+		}
+		else if (count < 0) {
+			throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
+		}
+		if ((start == 0) && (end == 0)) {
+			end = 'z' + 1;
+			start = ' ';
+			if (!letters && !numbers) {
+				start = 0;
+				end = Integer.MAX_VALUE;
+			}
+		}
+
+		char[] buffer = new char[count];
+		int gap = end - start;
+
+		while (count-- != 0) {
+			char ch;
+			if (chars == null) {
+				ch = (char) (random.nextInt(gap) + start);
+			}
+			else {
+				ch = chars[random.nextInt(gap) + start];
+			}
+			if ((letters && Character.isLetter(ch)) || (numbers && Character.isDigit(ch)) || (!letters && !numbers)) {
+				if (ch >= 56320 && ch <= 57343) {
+					if (count == 0) {
+						count++;
+					}
+					else {
+						// low surrogate, insert high surrogate after putting it in
+						buffer[count] = ch;
+						count--;
+						buffer[count] = (char) (55296 + random.nextInt(128));
+					}
+				}
+				else if (ch >= 55296 && ch <= 56191) {
+					if (count == 0) {
+						count++;
+					}
+					else {
+						// high surrogate, insert low surrogate before putting it in
+						buffer[count] = (char) (56320 + random.nextInt(128));
+						count--;
+						buffer[count] = ch;
+					}
+				}
+				else if (ch >= 56192 && ch <= 56319) {
+					// private high surrogate, no effing clue, so skip it
+					count++;
+				}
+				else {
+					buffer[count] = ch;
+				}
+			}
+			else {
+				count++;
+			}
+		}
+		return new String(buffer);
+	}
+
+	/**
+	 * <p>
+	 * Creates a random string whose length is the number of characters specified.
+	 * </p>
+	 *
+	 * <p>
+	 * Characters will be chosen from the set of characters specified.
+	 * </p>
+	 * @param count the length of random string to create
+	 * @param chars the String containing the set of characters to use, may be null
+	 * @return the random string
+	 * @throws IllegalArgumentException if <code>count</code> &lt; 0.
+	 */
+	public static String random(int count, String chars) {
+		if (chars == null) {
+			return random(count, 0, 0, false, false, null, RANDOM);
+		}
+		return random(count, chars.toCharArray());
+	}
+
+	/**
+	 * <p>
+	 * Creates a random string whose length is the number of characters specified.
+	 * </p>
+	 *
+	 * <p>
+	 * Characters will be chosen from the set of characters specified.
+	 * </p>
+	 * @param count the length of random string to create
+	 * @param chars the character array containing the set of characters to use, may be
+	 * null
+	 * @return the random string
+	 * @throws IllegalArgumentException if <code>count</code> &lt; 0.
+	 */
+	public static String random(int count, char[] chars) {
+		if (chars == null) {
+			return random(count, 0, 0, false, false, null, RANDOM);
+		}
+		return random(count, 0, chars.length, false, false, chars, RANDOM);
+	}
+
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/JacksonUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/JacksonUtil.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/JacksonUtil.java
new file mode 100644
--- /dev/null	(date 1726306389844)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/JacksonUtil.java	(date 1726306389844)
@@ -0,0 +1,212 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils;
+
+import com.fasterxml.jackson.databind.DeserializationFeature;
+import com.fasterxml.jackson.databind.JavaType;
+import com.fasterxml.jackson.databind.JsonNode;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.fasterxml.jackson.databind.type.CollectionType;
+import com.fasterxml.jackson.databind.type.MapType;
+import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;
+import lombok.SneakyThrows;
+import lombok.extern.slf4j.Slf4j;
+
+import java.io.InputStream;
+import java.util.Collection;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * Jackson工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Slf4j
+public final class JacksonUtil {
+
+    /**
+     * 空JSON字符串
+     */
+    public static final String EMPTY_JSON = "{}";
+
+    /**
+     * 映射器配置
+     */
+    private static final ObjectMapper MAPPER = new ObjectMapper()
+            // 没有的属性不报错
+            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)
+            .registerModule(new JavaTimeModule());
+
+    /**
+     * json字符转Bean
+     *
+     * @param json  json字符串
+     * @param clazz 类
+     * @param <T>   类型
+     * @return Bean
+     */
+    @SneakyThrows
+    public static <T> T toBean(String json, Class<T> clazz) {
+        return MAPPER.readValue(json, javaType(clazz));
+
+    }
+
+    /**
+     * json字符转Bean
+     *
+     * @param arr   字节数组
+     * @param clazz 类
+     * @param <T>   类型
+     * @return Bean
+     */
+    @SneakyThrows
+    public static <T> T toBean(byte[] arr, Class<T> clazz) {
+        return MAPPER.readValue(arr, javaType(clazz));
+
+    }
+
+    /**
+     * 创建JavaType
+     *
+     * @param clazz 类型
+     * @param <T>   泛型
+     * @return JavaType
+     */
+    public static <T> JavaType javaType(Class<T> clazz) {
+        return MAPPER.getTypeFactory().constructType(clazz);
+    }
+
+    /**
+     * 流转为Bean
+     *
+     * @param inputStream 流
+     * @param clazz       类
+     * @param <T>         泛型
+     * @return Bean
+     */
+    @SneakyThrows
+    public static <T> T toBean(InputStream inputStream, Class<T> clazz) {
+        return MAPPER.readValue(inputStream, javaType(clazz));
+    }
+
+    /**
+     * 序列化为json字符串
+     *
+     * @param obj 对象
+     * @return json字符串
+     */
+    @SneakyThrows
+    public static String toJsonStr(Object obj) {
+        return toJsonStr(obj, false);
+    }
+
+    /**
+     * 序列化为字符串
+     *
+     * @param obj      对象
+     * @param isFormat 是否格式化
+     * @return json字符串
+     */
+    @SneakyThrows
+    public static String toJsonStr(Object obj, boolean isFormat) {
+        if (obj instanceof String str) {
+            return str;
+        }
+        if (isFormat) {
+            return MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(obj);
+        }
+        return MAPPER.writeValueAsString(obj);
+    }
+
+    /**
+     * json字符串转对象集合
+     *
+     * @param json  json数组
+     * @param clazz 类型
+     * @param <T>   泛型
+     * @return 对象集合
+     */
+    @SneakyThrows
+    public static <T> List<T> toList(String json, Class<T> clazz) {
+        return MAPPER.readValue(json, collectionType(clazz));
+    }
+
+    public static <T> CollectionType collectionType(Class<T> clazz) {
+        return MAPPER.getTypeFactory().constructCollectionType(Collection.class, clazz);
+    }
+
+    /**
+     * Json反序列化Map
+     *
+     * @param json       json字符串
+     * @param keyClass   K 键类
+     * @param valueClass V 值类
+     * @param <K>        键泛型
+     * @param <V>        值泛型
+     * @return map
+     */
+    @SneakyThrows
+    public static <K, V> Map<K, V> toMap(String json, Class<K> keyClass, Class<V> valueClass) {
+        return MAPPER.readValue(json, mapType(keyClass, valueClass));
+    }
+
+    /**
+     * 创建mapType
+     *
+     * @param keyClass   键类
+     * @param valueClass 值类
+     * @param <K>        键泛型
+     * @param <V>        值泛型
+     * @return MapType
+     */
+    public static <K, V> MapType mapType(Class<K> keyClass, Class<V> valueClass) {
+        return MAPPER.getTypeFactory().constructMapType(Map.class, keyClass, valueClass);
+    }
+
+    /**
+     * Map转对象
+     *
+     * @param obj   对象
+     * @param clazz 类型
+     * @param <T>   泛型
+     * @return 对象
+     */
+    public static <T> T toValue(Object obj, Class<T> clazz) {
+        return MAPPER.convertValue(obj, clazz);
+    }
+
+    /**
+     * Map转对象
+     *
+     * @param obj        对象
+     * @param keyClass   键类
+     * @param valueClass 值类
+     * @param <K>        键泛型
+     * @param <T>        泛型
+     * @param <V>        值泛型
+     * @return 对象
+     */
+    public static <T, K, V> T toMap(Object obj, Class<K> keyClass, Class<V> valueClass) {
+        return MAPPER.convertValue(obj, mapType(keyClass, valueClass));
+    }
+
+    /**
+     * json字符串转树节点
+     *
+     * @param json json字符串
+     * @return 树节点
+     */
+    @SneakyThrows
+    public static JsonNode readTree(String json) {
+        return MAPPER.readTree(json);
+    }
+}
Index: asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/aspect/LogAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/aspect/LogAspect.java b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/aspect/LogAspect.java
new file mode 100644
--- /dev/null	(date 1722092495778)
+++ b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/aspect/LogAspect.java	(date 1722092495778)
@@ -0,0 +1,223 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.log.aspect;
+
+import com.alibaba.fastjson2.JSON;
+import jakarta.servlet.http.HttpServletResponse;
+import leyramu.softwarecup.digEdu.common.core.utils.ServletUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.StringUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.ip.IpUtils;
+import leyramu.softwarecup.digEdu.common.log.annotation.Log;
+import leyramu.softwarecup.digEdu.common.log.enums.BusinessStatus;
+import leyramu.softwarecup.digEdu.common.log.filter.PropertyPreExcludeFilter;
+import leyramu.softwarecup.digEdu.common.log.service.AsyncLogService;
+import leyramu.softwarecup.digEdu.common.security.utils.SecurityUtils;
+import leyramu.softwarecup.digEdu.system.api.domain.SysOperLog;
+import lombok.RequiredArgsConstructor;
+import org.apache.commons.lang3.ArrayUtils;
+import org.aspectj.lang.JoinPoint;
+import org.aspectj.lang.annotation.AfterReturning;
+import org.aspectj.lang.annotation.AfterThrowing;
+import org.aspectj.lang.annotation.Aspect;
+import org.aspectj.lang.annotation.Before;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.core.NamedThreadLocal;
+import org.springframework.http.HttpMethod;
+import org.springframework.stereotype.Component;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.util.Collection;
+import java.util.Map;
+import java.util.Objects;
+
+/**
+ * 操作日志记录处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Aspect
+@Component
+@RequiredArgsConstructor
+public class LogAspect {
+    private static final Logger log = LoggerFactory.getLogger(LogAspect.class);
+
+    /** 排除敏感属性字段 */
+    public static final String[] EXCLUDE_PROPERTIES = {"password", "oldPassword", "newPassword", "confirmPassword"};
+
+    /** 计算操作消耗时间 */
+    private static final ThreadLocal<Long> TIME_THREADLOCAL = new NamedThreadLocal<>("Cost Time");
+
+    /**
+     * 日志记录
+     */
+    private final AsyncLogService asyncLogService;
+
+    /**
+     * 处理请求前执行
+     */
+    @Before(value = "@annotation(controllerLog)")
+    public void boBefore(JoinPoint joinPoint, Log controllerLog) {
+        TIME_THREADLOCAL.set(System.currentTimeMillis());
+    }
+
+    /**
+     * 处理完请求后执行
+     *
+     * @param joinPoint 切点
+     */
+    @AfterReturning(pointcut = "@annotation(controllerLog)", returning = "jsonResult")
+    public void doAfterReturning(JoinPoint joinPoint, Log controllerLog, Object jsonResult) {
+        handleLog(joinPoint, controllerLog, null, jsonResult);
+    }
+
+    /**
+     * 拦截异常操作
+     *
+     * @param joinPoint 切点
+     * @param e 异常
+     */
+    @AfterThrowing(value = "@annotation(controllerLog)", throwing = "e")
+    public void doAfterThrowing(JoinPoint joinPoint, Log controllerLog, Exception e) {
+        handleLog(joinPoint, controllerLog, e, null);
+    }
+
+    protected void handleLog(final JoinPoint joinPoint, Log controllerLog, final Exception e, Object jsonResult) {
+        try {
+            SysOperLog operLog = new SysOperLog();
+            operLog.setStatus(BusinessStatus.SUCCESS.ordinal());
+            // 请求的地址
+            String ip = IpUtils.getIpAddr();
+            operLog.setOperIp(ip);
+            operLog.setOperUrl(StringUtils.substring(Objects.requireNonNull(ServletUtils.getRequest()).getRequestURI(), 0, 255));
+            String username = SecurityUtils.getUsername();
+            if (StringUtils.isNotBlank(username)) {
+                operLog.setOperName(username);
+            }
+
+            if (e != null) {
+                operLog.setStatus(BusinessStatus.FAIL.ordinal());
+                operLog.setErrorMsg(StringUtils.substring(e.getMessage(), 0, 2000));
+            }
+            // 设置方法名称
+            String className = joinPoint.getTarget().getClass().getName();
+            String methodName = joinPoint.getSignature().getName();
+            operLog.setMethod(className + "." + methodName + "()");
+            // 设置请求方式
+            operLog.setRequestMethod(ServletUtils.getRequest().getMethod());
+            // 处理设置注解上的参数
+            getControllerMethodDescription(joinPoint, controllerLog, operLog, jsonResult);
+            // 设置消耗时间
+            operLog.setCostTime(System.currentTimeMillis() - TIME_THREADLOCAL.get());
+            // 保存数据库
+            asyncLogService.saveSysLog(operLog);
+        } catch (Exception exp) {
+            // 记录本地异常日志
+            log.error("异常信息:{}", exp.getMessage());
+        } finally {
+            TIME_THREADLOCAL.remove();
+        }
+    }
+
+    /**
+     * 获取注解中对方法的描述信息 用于Controller层注解
+     *
+     * @param log 日志
+     * @param operLog 操作日志
+     */
+    public void getControllerMethodDescription(JoinPoint joinPoint, Log log, SysOperLog operLog, Object jsonResult) {
+        // 设置action动作
+        operLog.setBusinessType(log.businessType().ordinal());
+        // 设置标题
+        operLog.setTitle(log.title());
+        // 设置操作人类别
+        operLog.setOperatorType(log.operatorType().ordinal());
+        // 是否需要保存request，参数和值
+        if (log.isSaveRequestData()) {
+            // 获取参数的信息，传入到数据库中。
+            setRequestValue(joinPoint, operLog, log.excludeParamNames());
+        }
+        // 是否需要保存response，参数和值
+        if (log.isSaveResponseData() && StringUtils.isNotNull(jsonResult)) {
+            operLog.setJsonResult(StringUtils.substring(JSON.toJSONString(jsonResult), 0, 2000));
+        }
+    }
+
+    /**
+     * 获取请求的参数，放到log中
+     *
+     * @param operLog 操作日志
+     */
+    private void setRequestValue(JoinPoint joinPoint, SysOperLog operLog, String[] excludeParamNames) {
+        String requestMethod = operLog.getRequestMethod();
+        Map<?, ?> paramsMap = ServletUtils.getParamMap(ServletUtils.getRequest());
+        if (StringUtils.isEmpty(paramsMap)
+                && (HttpMethod.PUT.name().equals(requestMethod) || HttpMethod.POST.name().equals(requestMethod))) {
+            String params = argsArrayToString(joinPoint.getArgs(), excludeParamNames);
+            operLog.setOperParam(StringUtils.substring(params, 0, 2000));
+        } else {
+            operLog.setOperParam(StringUtils.substring(JSON.toJSONString(paramsMap, excludePropertyPreFilter(excludeParamNames)), 0, 2000));
+        }
+    }
+
+    /**
+     * 参数拼装
+     */
+    private String argsArrayToString(Object[] paramsArray, String[] excludeParamNames) {
+        StringBuilder params = new StringBuilder();
+        if (paramsArray != null) {
+            for (Object o : paramsArray) {
+                if (StringUtils.isNotNull(o) && !isFilterObject(o)) {
+                    try {
+                        String jsonObj = JSON.toJSONString(o, excludePropertyPreFilter(excludeParamNames));
+                        params.append(jsonObj).append(" ");
+                    } catch (Exception ignored) {
+                    }
+                }
+            }
+        }
+        return params.toString().trim();
+    }
+
+    /**
+     * 忽略敏感属性
+     */
+    public PropertyPreExcludeFilter excludePropertyPreFilter(String[] excludeParamNames) {
+        return new PropertyPreExcludeFilter().addExcludes(ArrayUtils.addAll(EXCLUDE_PROPERTIES, excludeParamNames));
+    }
+
+    /**
+     * 判断是否需要过滤的对象。
+     *
+     * @param o 对象信息。
+     * @return 如果是需要过滤的对象，则返回true；否则返回false。
+     */
+    @SuppressWarnings("rawtypes")
+    public boolean isFilterObject(final Object o) {
+        Class<?> clazz = o.getClass();
+        if (clazz.isArray()) {
+            return clazz.getComponentType().isAssignableFrom(MultipartFile.class);
+        } else if (Collection.class.isAssignableFrom(clazz)) {
+            Collection collection = (Collection) o;
+            for (Object value : collection) {
+                return value instanceof MultipartFile;
+            }
+        } else if (Map.class.isAssignableFrom(clazz)) {
+            Map map = (Map) o;
+            for (Object value : map.entrySet()) {
+                Map.Entry entry = (Map.Entry) value;
+                return entry.getValue() instanceof MultipartFile;
+            }
+        }
+        return o instanceof MultipartFile || o instanceof HttpServletResponse || o instanceof BindingResult;
+    }
+}
Index: asc-java/asc-service/asc-alert-service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-service</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-alert-service</artifactId>\r\n\r\n    <properties>\r\n        <java.version>17</java.version>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <!--      构建插件      -->\r\n    <build>\r\n        <plugins>\r\n            <!--    Spring Boot Maven Plugin    -->\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-alert-service/pom.xml b/asc-java/asc-service/asc-alert-service/pom.xml
--- a/asc-java/asc-service/asc-alert-service/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-alert-service/pom.xml	(date 1726317327870)
@@ -1,23 +1,17 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
     <modelVersion>4.0.0</modelVersion>
+
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-service</artifactId>
         <version>1.0.0</version>
     </parent>
 
     <artifactId>asc-alert-service</artifactId>
 
-    <properties>
-        <java.version>17</java.version>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <!--      构建插件      -->
     <build>
         <plugins>
@@ -29,4 +23,4 @@
             </plugin>
         </plugins>
     </build>
-</project>
\ No newline at end of file
+</project>
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/TemplateUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/TemplateUtil.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/TemplateUtil.java
new file mode 100644
--- /dev/null	(date 1726306389841)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/utils/TemplateUtil.java	(date 1726306389841)
@@ -0,0 +1,59 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.utils;
+
+import freemarker.template.Configuration;
+import freemarker.template.Template;
+import freemarker.template.TemplateException;
+import org.springframework.ui.freemarker.FreeMarkerTemplateUtils;
+
+import java.io.IOException;
+import java.util.Map;
+
+import static freemarker.template.Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS;
+
+/**
+ * 模板工具类.
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public final class TemplateUtil extends FreeMarkerTemplateUtils {
+
+    /**
+     * 模板配置
+     */
+    private static final Configuration CONFIGURATION = new Configuration(DEFAULT_INCOMPATIBLE_IMPROVEMENTS);
+
+    /**
+     * 根据模板获取内容
+     *
+     * @param template 模板
+     * @param params   参数
+     * @return 内容
+     * @throws IOException       异常
+     * @throws TemplateException 异常
+     */
+    public static String getContent(String template, Map<String, Object> params) throws IOException, TemplateException {
+        Template temp = getTemplate(template);
+        return FreeMarkerTemplateUtils.processTemplateIntoString(temp, params);
+    }
+
+    /**
+     * 获取模板
+     *
+     * @param template 模板名称
+     * @return 模板
+     * @throws IOException 异常
+     */
+    private static Template getTemplate(String template) throws IOException {
+        return new Template("template", template, CONFIGURATION);
+    }
+}
Index: asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/filter/PropertyPreExcludeFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/filter/PropertyPreExcludeFilter.java b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/filter/PropertyPreExcludeFilter.java
new file mode 100644
--- /dev/null	(date 1722019526486)
+++ b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/filter/PropertyPreExcludeFilter.java	(date 1722019526486)
@@ -0,0 +1,36 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.log.filter;
+
+import com.alibaba.fastjson2.filter.SimplePropertyPreFilter;
+import lombok.NoArgsConstructor;
+
+/**
+ * 排除JSON敏感属性
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@NoArgsConstructor
+public class PropertyPreExcludeFilter extends SimplePropertyPreFilter {
+
+    /**
+     * 添加排除属性
+     *
+     * @param filters 过滤属性
+     * @return /
+     */
+    public PropertyPreExcludeFilter addExcludes(String... filters) {
+        for (String filter : filters) {
+            this.getExcludes().add(filter);
+        }
+        return this;
+    }
+}
Index: asc-java/asc-service/asc-user-service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-service</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-user-service</artifactId>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <!--      构建插件      -->\r\n    <build>\r\n        <plugins>\r\n            <!--    Spring Boot Maven Plugin    -->\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/pom.xml b/asc-java/asc-service/asc-user-service/pom.xml
--- a/asc-java/asc-service/asc-user-service/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/pom.xml	(date 1726317348417)
@@ -1,22 +1,15 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-service</artifactId>
         <version>1.0.0</version>
     </parent>
 
     <artifactId>asc-user-service</artifactId>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <!--      构建插件      -->
     <build>
         <plugins>
@@ -28,4 +21,11 @@
             </plugin>
         </plugins>
     </build>
-</project>
\ No newline at end of file
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-amqp</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/alert/AddAlertInfoDto.java
===================================================================
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/alert/AddAlertInfoDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/alert/AddAlertInfoDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/alert/AddAlertInfoDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/alert/AddAlertInfoDto.java
--- a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/alert/AddAlertInfoDto.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/alert/AddAlertInfoDto.java	(date 1726310283615)
@@ -3,8 +3,8 @@
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
-import org.qinian.enums.AlertLevels;
-import org.qinian.enums.AlertTypes;
+import leyramu.qinian.asc.common.base.enums.AlertLevels;
+import leyramu.qinian.asc.common.base.enums.AlertTypes;
 
 @Data
 @AllArgsConstructor
Index: asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/service/AsyncLogService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/service/AsyncLogService.java b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/service/AsyncLogService.java
new file mode 100644
--- /dev/null	(date 1722092495774)
+++ b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/service/AsyncLogService.java	(date 1722092495774)
@@ -0,0 +1,44 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.log.service;
+
+import leyramu.softwarecup.digEdu.common.core.constant.SecurityConstants;
+import leyramu.softwarecup.digEdu.system.api.RemoteLogService;
+import leyramu.softwarecup.digEdu.system.api.domain.SysOperLog;
+import lombok.RequiredArgsConstructor;
+import org.springframework.scheduling.annotation.Async;
+import org.springframework.stereotype.Service;
+
+/**
+ * 异步调用日志服务
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Service
+@RequiredArgsConstructor
+public class AsyncLogService {
+
+    /**
+     * 异步调用日志服务
+     */
+    private final RemoteLogService remoteLogService;
+
+    /**
+     * 保存系统日志记录
+     *
+     * @param sysOperLog 系统日志
+     * @throws Exception 异常
+     */
+    @Async
+    public void saveSysLog(SysOperLog sysOperLog) throws Exception {
+        remoteLogService.saveLog(sysOperLog, SecurityConstants.INNER);
+    }
+}
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/AdminServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/AdminServiceImpl.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/AdminServiceImpl.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/AdminServiceImpl.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/AdminServiceImpl.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/AdminServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/AdminServiceImpl.java	(date 1726316993254)
@@ -1,20 +1,19 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import lombok.RequiredArgsConstructor;
-import org.qinian.dao.AdminMapper;
+import org.apache.coyote.BadRequestException;
+import org.leyramu.mapper.AdminMapper;
 import org.qinian.domain.dto.UpdatePWDDTO;
 import org.qinian.domain.dto.admin.AdminLoginFormDTO;
 import org.qinian.domain.pojo.Admin;
 import org.qinian.domain.vo.UserLoginVO;
-import org.qinian.exception.BadRequestException;
-import org.qinian.properties.JwtProperties;
-import org.qinian.service.IAdminService;
-import org.qinian.utils.AESUtil;
-import org.qinian.utils.Base64Util;
-import org.qinian.utils.JwtTool;
-import org.springframework.security.crypto.password.PasswordEncoder;
+import leyramu.qinian.asc.common.base.properties.JwtProperties;
+import org.leyramu.service.IAdminService;
+import leyramu.qinian.asc.common.base.utils.AESUtil;
+import leyramu.qinian.asc.common.base.utils.Base64Util;
+import leyramu.qinian.asc.common.base.utils.JwtTool;
 import org.springframework.stereotype.Service;
 
 import java.nio.charset.StandardCharsets;
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/BusinessLicenseServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/BusinessLicenseServiceImpl.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/BusinessLicenseServiceImpl.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/BusinessLicenseServiceImpl.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/BusinessLicenseServiceImpl.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/BusinessLicenseServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/BusinessLicenseServiceImpl.java	(date 1726316993171)
@@ -1,16 +1,17 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import lombok.RequiredArgsConstructor;
+import org.json.JSONException;
 import org.json.JSONObject;
-import org.qinian.dao.BusinessLicenseMapper;
-import org.qinian.domain.Result;
+import org.leyramu.mapper.BusinessLicenseMapper;
+import domain.Result;
 import org.qinian.domain.pojo.BusinessLicense;
-import org.qinian.entity.BusinessLicInfo;
-import org.qinian.entity.QCCInfo;
-import org.qinian.model.RemoteBLOCRService;
-import org.qinian.service.IBusinessLicenseService;
-import org.qinian.utils.QCCUtil;
+import leyramu.qinian.asc.common.base.entity.BusinessLicInfo;
+import leyramu.qinian.asc.common.base.entity.QCCInfo;
+import org.qinian.domain.model.RemoteBLOCRService;
+import org.leyramu.service.IBusinessLicenseService;
+import leyramu.qinian.asc.common.base.utils.QCCUtil;
 import org.springframework.stereotype.Service;
 
 /**
@@ -27,7 +28,7 @@
     private final RemoteBLOCRService remoteBLOCRService;
 
     @Override
-    public QCCInfo checkBL(String imageBase) {
+    public QCCInfo checkBL(String imageBase) throws JSONException {
         // 1.ocr识别
         Result result = remoteBLOCRService.getBusinessLic(imageBase);
 
Index: asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/AscMonitorApplication.java
===================================================================
diff --git a/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/AscMonitorApplication.java b/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/qinian/asc/visual/monitor/AscMonitorApplication.java
rename from asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/AscMonitorApplication.java
rename to asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/qinian/asc/visual/monitor/AscMonitorApplication.java
--- a/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/AscMonitorApplication.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/qinian/asc/visual/monitor/AscMonitorApplication.java	(date 1726310617728)
@@ -6,7 +6,7 @@
  * By using this project, users acknowledge and agree to abide by these terms and conditions.
  */
 
-package leyramu.softwarecup.digEdu.monitor;
+package leyramu.qinian.asc.visual.monitor;
 
 import de.codecentric.boot.admin.server.config.EnableAdminServer;
 import lombok.extern.slf4j.Slf4j;
Index: asc-java/asc-service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-java</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-service</artifactId>\r\n    <packaging>pom</packaging>\r\n    <modules>\r\n        <module>asc-user-service</module>\r\n        <module>asc-alert-service</module>\r\n        <module>asc-algorithm-service</module>\r\n        <module>asc-fishRaft-service</module>\r\n        <module>asc-raftMonitor-service</module>\r\n        <module>asc-weather-service</module>\r\n        <module>asc-email-service</module>\r\n    </modules>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <!-- SpringCloud Alibaba Nacos -->\r\n        <dependency>\r\n            <groupId>com.alibaba.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\r\n        </dependency>\r\n\r\n        <!-- SpringCloud Alibaba Nacos Config -->\r\n        <dependency>\r\n            <groupId>com.alibaba.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>\r\n        </dependency>\r\n\r\n        <!-- SpringBoot Web -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <!-- SpringBoot Actuator -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-actuator</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>javax.servlet</groupId>\r\n            <artifactId>javax.servlet-api</artifactId>\r\n            <version>4.0.1</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n\r\n        <!--    common-base 依赖    -->\r\n        <dependency>\r\n            <groupId>org.qinian</groupId>\r\n            <artifactId>asc-common-utils</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.qinian</groupId>\r\n            <artifactId>asc-api-domain</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.qinian</groupId>\r\n            <artifactId>asc-api-system</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/pom.xml b/asc-java/asc-service/pom.xml
--- a/asc-java/asc-service/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/pom.xml	(date 1726316483952)
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-java</artifactId>
+        <relativePath>../pom.xml</relativePath>
         <version>1.0.0</version>
     </parent>
 
@@ -19,14 +19,9 @@
         <module>asc-raftMonitor-service</module>
         <module>asc-weather-service</module>
         <module>asc-email-service</module>
+        <module>asc-service-system</module>
     </modules>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <dependencies>
         <!-- SpringCloud Alibaba Nacos -->
         <dependency>
@@ -59,20 +54,33 @@
             <scope>provided</scope>
         </dependency>
 
-        <!--    common-base 依赖    -->
+        <!--    Asc common i18n    -->
         <dependency>
-            <groupId>org.qinian</groupId>
-            <artifactId>asc-common-utils</artifactId>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-i18n</artifactId>
         </dependency>
 
+<!--        &lt;!&ndash;    common-base 依赖    &ndash;&gt;-->
+<!--        <dependency>-->
+<!--            <groupId>leyramu.qinian</groupId>-->
+<!--            <artifactId>asc-common-utils</artifactId>-->
+<!--        </dependency>-->
+
         <dependency>
-            <groupId>org.qinian</groupId>
+            <groupId>leyramu.qinian</groupId>
             <artifactId>asc-api-domain</artifactId>
         </dependency>
 
+        <!--        <dependency>-->
+        <!--            <groupId>org.qinian</groupId>-->
+        <!--            <artifactId>asc-api-system</artifactId>-->
+        <!--        </dependency>-->
+
+        <!--  cn.hutool  -->
         <dependency>
-            <groupId>org.qinian</groupId>
-            <artifactId>asc-api-system</artifactId>
+            <groupId>cn.hutool</groupId>
+            <artifactId>hutool-all</artifactId>
+            <version>5.8.25</version>
         </dependency>
     </dependencies>
 </project>
Index: asc-java/asc-api/asc-api-domain/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-api</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-api-domain</artifactId>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-domain/pom.xml b/asc-java/asc-api/asc-api-domain/pom.xml
--- a/asc-java/asc-api/asc-api-domain/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-api/asc-api-domain/pom.xml	(date 1726316026170)
@@ -1,20 +1,21 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-api</artifactId>
         <version>1.0.0</version>
     </parent>
 
     <artifactId>asc-api-domain</artifactId>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
+    <dependencies>
+        <!--    Asc common base    -->
+<!--        <dependency>-->
+<!--            <groupId>leyramu.qinian</groupId>-->
+<!--            <artifactId>asc-common-base</artifactId>-->
+<!--        </dependency>-->
+    </dependencies>
 
 </project>
Index: asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/Cache.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/Cache.java b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/Cache.java
new file mode 100644
--- /dev/null	(date 1726290396627)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu/qinian/asc/common/i18n/dto/Cache.java	(date 1726290396627)
@@ -0,0 +1,27 @@
+/*
+ * Copyright (c) 2022-2024 KCloud-Platform-IoT Author or Authors. All Rights Reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ *
+ */
+
+package leyramu.qinian.asc.common.i18n.dto;
+
+/**
+ * @author laokou
+ */
+public interface Cache {
+
+	void set(Object value, long expireTime);
+
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/StringConstant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/StringConstant.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/StringConstant.java
new file mode 100644
--- /dev/null	(date 1726290380299)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/constant/StringConstant.java	(date 1726290380299)
@@ -0,0 +1,95 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.constant;
+
+
+/**
+ * 字符串常量
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+public final class StringConstant {
+
+	/**
+	 * 空字符串.
+	 */
+	public static final String EMPTY = "";
+
+	/**
+	 * 分割参数.
+	 */
+	public static final String AT = "@";
+
+	public static final String TRUE = "true";
+
+	public static final String SLASH = "/";
+
+	public static final String ERECT = "|";
+
+	public static final String DROP = "、";
+
+	public static final String BACKSLASH = "\\";
+
+	public static final String STAR = "*";
+
+	public static final String PERCENT = "%";
+
+	public static final String DOT = ".";
+
+	public static final String RISK = ":";
+
+	public static final String COMMA = ",";
+
+	public static final String CHINESE_COMMA = "，";
+
+	public static final String LEFT = "(";
+
+	public static final String RIGHT = ")";
+
+	public static final String SPACE = " ";
+
+	public static final String EQUAL = "=";
+
+	public static final String UNDER = "_";
+
+	public static final String DOUBLE_QUOT = "\"";
+
+	public static final String SINGLE_QUOT = "'";
+
+	/**
+	 * 分割参数.
+	 */
+	public static final String AND = "&";
+
+	/**
+	 * 分割参数.
+	 */
+	public static final String ROD = "-";
+
+	/**
+	 * 分割参数.
+	 */
+	public static final String WELL_NO = "#";
+
+	/**
+	 * 分割参数.
+	 */
+	public static final String DOLLAR = "$";
+
+	/**
+	 * 分割参数.
+	 */
+	public static final String START_START = "**";
+
+	private StringConstant() {
+	}
+
+}
Index: asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/BusinessType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/BusinessType.java b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/BusinessType.java
new file mode 100644
--- /dev/null	(date 1722019526495)
+++ b/asc-java/asc-common/asc-common-log/src/main/java/leyramu/qinian/asc/common/log/enums/BusinessType.java	(date 1722019526495)
@@ -0,0 +1,69 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.log.enums;
+
+/**
+ * 业务操作类型
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+public enum BusinessType {
+
+    /**
+     * 其它
+     */
+    OTHER,
+
+    /**
+     * 新增
+     */
+    INSERT,
+
+    /**
+     * 修改
+     */
+    UPDATE,
+
+    /**
+     * 删除
+     */
+    DELETE,
+
+    /**
+     * 授权
+     */
+    GRANT,
+
+    /**
+     * 导出
+     */
+    EXPORT,
+
+    /**
+     * 导入
+     */
+    IMPORT,
+
+    /**
+     * 强退
+     */
+    FORCE,
+
+    /**
+     * 生成代码
+     */
+    GENCODE,
+
+    /**
+     * 清空数据
+     */
+    CLEAN,
+}
Index: asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/impl/EmailServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/impl/EmailServiceImpl.java b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/impl/EmailServiceImpl.java
rename from asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/impl/EmailServiceImpl.java
rename to asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/impl/EmailServiceImpl.java
--- a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/impl/EmailServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/impl/EmailServiceImpl.java	(date 1726316993226)
@@ -1,11 +1,11 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import jakarta.mail.internet.MimeMessage;
 import lombok.RequiredArgsConstructor;
 import org.qinian.domain.dto.email.SendEmailWithAttachmentDto;
 import org.qinian.domain.dto.email.SendSimpleEmailDto;
 import org.qinian.domain.dto.email.SendVerificationCodeDto;
-import org.qinian.service.EmailService;
+import org.leyramu.service.EmailService;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.mail.SimpleMailMessage;
 import org.springframework.mail.javamail.JavaMailSender;
@@ -23,6 +23,7 @@
     /**
      * 发送简单邮件
      */
+    @Override
     public void sendSimpleEmail(SendSimpleEmailDto sendSimpleEmailDto) {
         SimpleMailMessage message = new SimpleMailMessage();
         message.setTo(sendSimpleEmailDto.getTo());
@@ -36,6 +37,7 @@
     /**
      * 发送验证码邮件
      */
+    @Override
     public void sendVerificationCode(SendVerificationCodeDto sendVerificationCodeDto) {
         SimpleMailMessage message = new SimpleMailMessage();
         message.setTo(sendVerificationCodeDto.getTo());
@@ -51,6 +53,7 @@
      *
      * @throws Exception 异常
      */
+    @Override
     public void sendEmailWithAttachment(SendEmailWithAttachmentDto sendEmailWithAttachmentDto) throws Exception {
         MimeMessage mimeMessage = mailSender.createMimeMessage();
         MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);
Index: asc-java/asc-cloud/asc-cloud-sentinel/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!--\r\n  ~ Copyright (c) 2024 Leyramu. All rights reserved.\r\n  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.\r\n  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.\r\n  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.\r\n  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.\r\n  -->\r\n\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\r\n    <!--      模块版本号      -->\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <!--      父工程      -->\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-cloud</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <!--      项目描述      -->\r\n    <description>Sentinel 流量限流控制器</description>\r\n\r\n    <!--      工件 ID      -->\r\n    <artifactId>asc-cloud-sentinel</artifactId>\r\n\r\n    <!--      属性      -->\r\n    <properties>\r\n        <java.version>17</java.version>\r\n        <log4j.version>2.23.1</log4j.version>\r\n        <sentinel.version>1.8.8</sentinel.version>\r\n        <curator.version>5.7.0</curator.version>\r\n        <fastjson.version>2.0.52</fastjson.version>\r\n        <resource.delimiter>@</resource.delimiter>\r\n        <httpcore.version>4.4.16</httpcore.version>\r\n        <httpclient.version>4.5.14</httpclient.version>\r\n        <spring-boot.version>2.5.12</spring-boot.version>\r\n        <httpcore-nio.version>4.4.16</httpcore-nio.version>\r\n        <system-rules.version>1.19.0</system-rules.version>\r\n        <commons-lang.version>2.6</commons-lang.version>\r\n        <apollo-openapi.version>2.2.0</apollo-openapi.version>\r\n        <httpasyncclient.version>4.1.5</httpasyncclient.version>\r\n        <maven-checkstyle-plugin.version>3.4.0</maven-checkstyle-plugin.version>\r\n    </properties>\r\n\r\n    <!--      依赖      -->\r\n    <dependencies>\r\n        <!--    Sentinel Core    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.csp</groupId>\r\n            <artifactId>sentinel-core</artifactId>\r\n            <version>${sentinel.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Sentinel Web    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.csp</groupId>\r\n            <artifactId>sentinel-web-servlet</artifactId>\r\n            <version>${sentinel.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Sentinel Apache Http Client Adapter    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.csp</groupId>\r\n            <artifactId>sentinel-transport-simple-http</artifactId>\r\n            <version>${sentinel.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Sentinel Param Flow Control    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.csp</groupId>\r\n            <artifactId>sentinel-parameter-flow-control</artifactId>\r\n            <version>${sentinel.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Sentinel Gateway Adapter    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.csp</groupId>\r\n            <artifactId>sentinel-api-gateway-adapter-common</artifactId>\r\n            <version>${sentinel.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Sentinel DataSource    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.csp</groupId>\r\n            <artifactId>sentinel-datasource-nacos</artifactId>\r\n            <version>${sentinel.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <!--    Fastjson    -->\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>fastjson</artifactId>\r\n            <version>${fastjson.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Web    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n            <version>${spring-boot.version}</version>\r\n            <exclusions>\r\n                <exclusion>\r\n                    <groupId>org.springframework.boot</groupId>\r\n                    <artifactId>spring-boot-starter-tomcat</artifactId>\r\n                </exclusion>\r\n            </exclusions>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Logging    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-logging</artifactId>\r\n            <version>${spring-boot.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Test    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <version>${spring-boot.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Undertow    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-undertow</artifactId>\r\n            <version>${spring-boot.version}</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n\r\n        <!--    Log4j    -->\r\n        <dependency>\r\n            <groupId>org.apache.logging.log4j</groupId>\r\n            <artifactId>log4j-core</artifactId>\r\n            <version>${log4j.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Commons Lang    -->\r\n        <dependency>\r\n            <groupId>commons-lang</groupId>\r\n            <artifactId>commons-lang</artifactId>\r\n            <version>${commons-lang.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Apache Http Client    -->\r\n        <dependency>\r\n            <groupId>org.apache.httpcomponents</groupId>\r\n            <artifactId>httpclient</artifactId>\r\n            <version>${httpclient.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Apache Http Client Core    -->\r\n        <dependency>\r\n            <groupId>org.apache.httpcomponents</groupId>\r\n            <artifactId>httpcore</artifactId>\r\n            <version>${httpcore.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Apache Http Async Client    -->\r\n        <dependency>\r\n            <groupId>org.apache.httpcomponents</groupId>\r\n            <artifactId>httpasyncclient</artifactId>\r\n            <version>${httpasyncclient.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Apache Http Client NIO    -->\r\n        <dependency>\r\n            <groupId>org.apache.httpcomponents</groupId>\r\n            <artifactId>httpcore-nio</artifactId>\r\n            <version>${httpcore-nio.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Apollo    -->\r\n        <dependency>\r\n            <groupId>com.ctrip.framework.apollo</groupId>\r\n            <artifactId>apollo-openapi</artifactId>\r\n            <version>${apollo-openapi.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <!--    Curator    -->\r\n        <dependency>\r\n            <groupId>org.apache.curator</groupId>\r\n            <artifactId>curator-recipes</artifactId>\r\n            <version>${curator.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <!--    JUnit    -->\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <!--    Mockito    -->\r\n        <dependency>\r\n            <groupId>org.mockito</groupId>\r\n            <artifactId>mockito-core</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <!--    System Rules    -->\r\n        <dependency>\r\n            <groupId>com.github.stefanbirkner</groupId>\r\n            <artifactId>system-rules</artifactId>\r\n            <version>${system-rules.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <!--     Spring Boot 依赖管理     -->\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <!--      Spring Boot Starter Parent      -->\r\n            <dependency>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-starter-parent</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n\r\n    <!--    构建工具    -->\r\n    <build>\r\n        <!--    最终名称    -->\r\n        <finalName>${project.artifactId}</finalName>\r\n        <plugins>\r\n            <!--    编译插件    -->\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>${maven-compiler-plugin.version}</version>\r\n                <configuration>\r\n                    <source>${java.version}</source>\r\n                    <target>${java.version}</target>\r\n                    <encoding>${project.build.sourceEncoding}</encoding>\r\n                    <compilerArgs>\r\n                        <arg>-Xlint:deprecation</arg>\r\n                        <arg>-parameters</arg>\r\n                    </compilerArgs>\r\n                </configuration>\r\n            </plugin>\r\n\r\n            <!--      打包插件      -->\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n                <configuration>\r\n                    <mainClass>com.alibaba.csp.sentinel.dashboard.AscSentinelApplication</mainClass>\r\n                </configuration>\r\n                <executions>\r\n                    <execution>\r\n                        <goals>\r\n                            <goal>repackage</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n\r\n            <!--      检查代码格式      -->\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-checkstyle-plugin</artifactId>\r\n                <version>${maven-checkstyle-plugin.version}</version>\r\n                <configuration>\r\n                    <skip>true</skip>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n\r\n        <!--      资源过滤      -->\r\n        <resources>\r\n            <!--      过滤掉 webapp 目录下的静态资源      -->\r\n            <resource>\r\n                <directory>src/main/resources</directory>\r\n                <filtering>true</filtering>\r\n            </resource>\r\n\r\n            <!--      过滤掉 node_modules 目录      -->\r\n            <resource>\r\n                <directory>src/main/webapp/</directory>\r\n                <excludes>\r\n                    <exclude>resources/node_modules/**</exclude>\r\n                </excludes>\r\n            </resource>\r\n        </resources>\r\n\r\n        <!--      插件管理      -->\r\n        <pluginManagement>\r\n            <plugins>\r\n                <!--      Maven 资源过滤      -->\r\n                <plugin>\r\n                    <groupId>org.apache.maven.plugins</groupId>\r\n                    <artifactId>maven-resources-plugin</artifactId>\r\n                    <configuration>\r\n                        <delimiters>\r\n                            <delimiter>${resource.delimiter}</delimiter>\r\n                        </delimiters>\r\n                        <useDefaultDelimiters>false</useDefaultDelimiters>\r\n                    </configuration>\r\n                </plugin>\r\n            </plugins>\r\n        </pluginManagement>\r\n    </build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-cloud/asc-cloud-sentinel/pom.xml b/asc-java/asc-cloud/asc-cloud-sentinel/pom.xml
--- a/asc-java/asc-cloud/asc-cloud-sentinel/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-cloud/asc-cloud-sentinel/pom.xml	(date 1726318749638)
@@ -14,7 +14,7 @@
 
     <!--      父工程      -->
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-cloud</artifactId>
         <version>1.0.0</version>
     </parent>
Index: asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/service/impl/WeatherMonitorServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/service/impl/WeatherMonitorServiceImpl.java b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/service/impl/WeatherMonitorServiceImpl.java
rename from asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/service/impl/WeatherMonitorServiceImpl.java
rename to asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/service/impl/WeatherMonitorServiceImpl.java
--- a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/service/impl/WeatherMonitorServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/service/impl/WeatherMonitorServiceImpl.java	(date 1726316993204)
@@ -1,14 +1,14 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import lombok.RequiredArgsConstructor;
-import org.qinian.dao.WeatherMonitorMapper;
+import org.leyramu.mapper.WeatherMonitorMapper;
 import org.qinian.domain.dto.alert.AddAlertInfoDto;
 import org.qinian.domain.pojo.WeatherMonitor;
-import org.qinian.enums.AlertLevels;
-import org.qinian.enums.AlertTypes;
-import org.qinian.model.RemoteAlertService;
-import org.qinian.service.IWeatherMonitorService;
+import leyramu.qinian.asc.common.base.enums.AlertLevels;
+import leyramu.qinian.asc.common.base.enums.AlertTypes;
+import org.qinian.domain.model.RemoteAlertService;
+import org.leyramu.service.IWeatherMonitorService;
 import org.springframework.data.redis.core.RedisTemplate;
 import org.springframework.stereotype.Service;
 
Index: asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/impl/AlertTypeServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/impl/AlertTypeServiceImpl.java b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/impl/AlertTypeServiceImpl.java
rename from asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/impl/AlertTypeServiceImpl.java
rename to asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/impl/AlertTypeServiceImpl.java
--- a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/impl/AlertTypeServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/impl/AlertTypeServiceImpl.java	(date 1726316993267)
@@ -1,9 +1,9 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
-import org.qinian.dao.AlertTypeMapper;
+import org.leyramu.mapper.AlertTypeMapper;
 import org.qinian.domain.pojo.AlertType;
-import org.qinian.service.IAlertTypeService;
+import org.leyramu.service.IAlertTypeService;
 import org.springframework.stereotype.Service;
 
 /**
Index: asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/impl/CodeServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/impl/CodeServiceImpl.java b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/impl/CodeServiceImpl.java
rename from asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/impl/CodeServiceImpl.java
rename to asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/impl/CodeServiceImpl.java
--- a/asc-java/asc-service/asc-email-service/src/main/java/org/qinian/service/impl/CodeServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-email-service/src/main/java/org/leyramu/service/impl/CodeServiceImpl.java	(date 1726316993118)
@@ -1,7 +1,7 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import lombok.RequiredArgsConstructor;
-import org.qinian.service.CodeService;
+import org.leyramu.service.CodeService;
 import org.springframework.data.redis.core.RedisTemplate;
 import org.springframework.data.redis.core.ValueOperations;
 import org.springframework.stereotype.Service;
@@ -11,6 +11,7 @@
 @Service
 @RequiredArgsConstructor
 public class CodeServiceImpl implements CodeService {
+
     private final RedisTemplate<String, Object> redisTemplate;
 
     /**
@@ -18,6 +19,7 @@
      *
      * @param length 验证码长度
      */
+    @Override
     public String generateVerifyCode(String email, int length) {
         String strRange = "1234567890";
         StringBuilder strBuilder = new StringBuilder();
@@ -39,6 +41,7 @@
      * 校验验证码（可用作帐号登录、注册、修改信息等业务）
      * 校验验证码：0验证码错误、1验证码正确、2验证码过期
      */
+    @Override
     public Integer checkVerifyCode(String email, String code) {
         int result = 1;
         ValueOperations<String, Object> valueOperations = redisTemplate.opsForValue();
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/IdentityCardServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/IdentityCardServiceImpl.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/IdentityCardServiceImpl.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/IdentityCardServiceImpl.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/IdentityCardServiceImpl.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/IdentityCardServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/IdentityCardServiceImpl.java	(date 1726316993409)
@@ -1,9 +1,9 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
-import org.qinian.dao.IdentityCardMapper;
+import org.leyramu.mapper.IdentityCardMapper;
 import org.qinian.domain.pojo.IdentityCard;
-import org.qinian.service.IIdentityCardService;
+import org.leyramu.service.IIdentityCardService;
 import org.springframework.stereotype.Service;
 
 /**
Index: asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/impl/AlertInfoServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/impl/AlertInfoServiceImpl.java b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/impl/AlertInfoServiceImpl.java
rename from asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/impl/AlertInfoServiceImpl.java
rename to asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/impl/AlertInfoServiceImpl.java
--- a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/service/impl/AlertInfoServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/service/impl/AlertInfoServiceImpl.java	(date 1726316993221)
@@ -1,9 +1,9 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
-import org.qinian.dao.AlertInfoMapper;
+import org.leyramu.mapper.AlertInfoMapper;
 import org.qinian.domain.pojo.AlertInfo;
-import org.qinian.service.IAlertInfoService;
+import org.leyramu.service.IAlertInfoService;
 import org.springframework.stereotype.Service;
 
 import java.util.List;
@@ -23,4 +23,4 @@
     public List<AlertInfo> getAllByRaftId(Long id) {
         return baseMapper.getAllByRaftId(id);
     }
-}
\ No newline at end of file
+}
Index: asc-java/asc-cloud/asc-cloud-register/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?><!--\r\n  ~ Copyright (c) 2024 Leyramu. All rights reserved.\r\n  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.\r\n  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.\r\n  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.\r\n  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.\r\n  -->\r\n\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\r\n    <!--      模块版本号      -->\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <!--      父工程      -->\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-cloud</artifactId>\r\n        <relativePath>../pom.xml</relativePath>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <!--      项目描述      -->\r\n    <description>Nacos 注册/配置中心</description>\r\n\r\n    <!--      工件 ID      -->\r\n    <artifactId>asc-cloud-register</artifactId>\r\n\r\n    <!--      属性      -->\r\n    <properties>\r\n        <java.version>1.8</java.version>\r\n        <nacos.version>2.4.0.1</nacos.version>\r\n        <slf4j.version>1.7.36</slf4j.version>\r\n        <spring-boot.version>2.7.18</spring-boot.version>\r\n        <liquibase-core.version>4.29.1</liquibase-core.version>\r\n        <commons-io.version>2.16.1</commons-io.version>\r\n    </properties>\r\n\r\n    <!--      依赖      -->\r\n    <dependencies>\r\n        <!--    XueXiaowei Nacos Console UI    -->\r\n        <dependency>\r\n            <groupId>io.xuxiaowei.nacos</groupId>\r\n            <artifactId>nacos-console-ui</artifactId>\r\n            <version>${nacos.version}</version>\r\n        </dependency>\r\n\r\n        <!--    XueXiaowei Nacos Config    -->\r\n        <dependency>\r\n            <groupId>io.xuxiaowei.nacos</groupId>\r\n            <artifactId>nacos-config</artifactId>\r\n            <version>${nacos.version}</version>\r\n        </dependency>\r\n\r\n        <!--    XueXiaowei Nacos Naming    -->\r\n        <dependency>\r\n            <groupId>io.xuxiaowei.nacos</groupId>\r\n            <artifactId>nacos-naming</artifactId>\r\n            <version>${nacos.version}</version>\r\n        </dependency>\r\n\r\n        <!--    XueXiaowei Nacos Default Plugin All    -->\r\n        <dependency>\r\n            <groupId>io.xuxiaowei.nacos</groupId>\r\n            <artifactId>nacos-default-plugin-all</artifactId>\r\n            <version>${nacos.version}</version>\r\n        </dependency>\r\n\r\n        <!--    XueXiaowei Nacos Istio    -->\r\n        <dependency>\r\n            <groupId>io.xuxiaowei.nacos</groupId>\r\n            <artifactId>nacos-istio</artifactId>\r\n            <version>${nacos.version}</version>\r\n        </dependency>\r\n\r\n        <!--    XueXiaowei Nacos Prometheus    -->\r\n        <dependency>\r\n            <groupId>io.xuxiaowei.nacos</groupId>\r\n            <artifactId>nacos-prometheus</artifactId>\r\n            <version>${nacos.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Log4j    -->\r\n        <dependency>\r\n            <groupId>org.slf4j</groupId>\r\n            <artifactId>log4j-over-slf4j</artifactId>\r\n            <version>${slf4j.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Apache Commons Logging    -->\r\n        <dependency>\r\n            <groupId>org.slf4j</groupId>\r\n            <artifactId>jcl-over-slf4j</artifactId>\r\n            <version>${slf4j.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Jul to SLF4J    -->\r\n        <dependency>\r\n            <groupId>org.slf4j</groupId>\r\n            <artifactId>jul-to-slf4j</artifactId>\r\n            <version>${slf4j.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Jasypt    -->\r\n        <dependency>\r\n            <groupId>com.github.ulisesbocchio</groupId>\r\n            <artifactId>jasypt-spring-boot-starter</artifactId>\r\n            <version>3.0.5</version>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Undertow    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-undertow</artifactId>\r\n            <version>${spring-boot.version}</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n\r\n        <!--    Spring Boot Security    -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-security</artifactId>\r\n            <version>${spring-boot.version}</version>\r\n        </dependency>\r\n\r\n        <!--    Liquibase    -->\r\n        <dependency>\r\n            <groupId>org.liquibase</groupId>\r\n            <artifactId>liquibase-core</artifactId>\r\n            <version>${liquibase-core.version}</version>\r\n            <exclusions>\r\n                <exclusion>\r\n                    <groupId>commons-io</groupId>\r\n                    <artifactId>commons-io</artifactId>\r\n                </exclusion>\r\n                <exclusion>\r\n                    <groupId>org.apache.commons</groupId>\r\n                    <artifactId>commons-text</artifactId>\r\n                </exclusion>\r\n            </exclusions>\r\n        </dependency>\r\n\r\n        <!--    Commons IO    -->\r\n        <dependency>\r\n            <groupId>commons-io</groupId>\r\n            <artifactId>commons-io</artifactId>\r\n            <version>${commons-io.version}</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <!--     Spring Boot 依赖管理     -->\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <!--      Spring Boot Starter Parent      -->\r\n            <dependency>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-starter-parent</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n                <type>pom</type>\r\n                <scope>import</scope>\r\n            </dependency>\r\n        </dependencies>\r\n    </dependencyManagement>\r\n\r\n    <!--    构建工具    -->\r\n    <build>\r\n        <finalName>${project.artifactId}</finalName>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n                <executions>\r\n                    <execution>\r\n                        <goals>\r\n                            <goal>repackage</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-cloud/asc-cloud-register/pom.xml b/asc-java/asc-cloud/asc-cloud-register/pom.xml
--- a/asc-java/asc-cloud/asc-cloud-register/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-cloud/asc-cloud-register/pom.xml	(date 1726318749633)
@@ -14,7 +14,7 @@
 
     <!--      父工程      -->
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-cloud</artifactId>
         <relativePath>../pom.xml</relativePath>
         <version>1.0.0</version>
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/FishermenServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/FishermenServiceImpl.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/FishermenServiceImpl.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/FishermenServiceImpl.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/FishermenServiceImpl.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/FishermenServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/FishermenServiceImpl.java	(date 1726316993280)
@@ -1,27 +1,23 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import lombok.RequiredArgsConstructor;
-import org.qinian.dao.FishermenMapper;
-import org.qinian.dao.FishingPlatoonMapper;
+import org.leyramu.mapper.FishermenMapper;
+import org.leyramu.mapper.FishingPlatoonMapper;
 import org.qinian.domain.dto.UpdatePWDDTO;
 import org.qinian.domain.dto.fishermen.FishermenLoginFormDTO;
 import org.qinian.domain.dto.fishermen.FishermenRegisterFormDTO;
 import org.qinian.domain.pojo.Fishermen;
 import org.qinian.domain.pojo.FishingPlatoon;
 import org.qinian.domain.vo.UserLoginVO;
-import org.qinian.enums.UserStatus;
-import org.qinian.exception.BadRequestException;
-import org.qinian.exception.ForbiddenException;
-import org.qinian.properties.JwtProperties;
-import org.qinian.service.IFishermenService;
-import org.qinian.utils.AESUtil;
-import org.qinian.utils.Base64Util;
-import org.qinian.utils.JwtTool;
-import org.springframework.security.crypto.password.PasswordEncoder;
+import leyramu.qinian.asc.common.base.enums.UserStatus;
+import leyramu.qinian.asc.common.base.properties.JwtProperties;
+import org.leyramu.service.IFishermenService;
+import leyramu.qinian.asc.common.base.utils.AESUtil;
+import leyramu.qinian.asc.common.base.utils.Base64Util;
+import leyramu.qinian.asc.common.base.utils.JwtTool;
 import org.springframework.stereotype.Service;
-import org.springframework.util.Assert;
 
 import java.nio.charset.StandardCharsets;
 import java.time.LocalDateTime;
Index: asc-java/asc-cloud/asc-cloud-seata/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\r\n    <!--      模块版本号      -->\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <!--      父工程      -->\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-cloud</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <!--      项目描述      -->\r\n    <description>微服务分布式事务工程</description>\r\n\r\n    <!--      工件 ID      -->\r\n    <artifactId>asc-cloud-seata</artifactId>\r\n\r\n    <!--      依赖      -->\r\n    <dependencies>\r\n        <!--    Spring Cloud Seata    -->\r\n        <dependency>\r\n            <groupId>com.alibaba.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-alibaba-seata</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-cloud/asc-cloud-seata/pom.xml b/asc-java/asc-cloud/asc-cloud-seata/pom.xml
--- a/asc-java/asc-cloud/asc-cloud-seata/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-cloud/asc-cloud-seata/pom.xml	(date 1726318749641)
@@ -7,7 +7,7 @@
 
     <!--      父工程      -->
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-cloud</artifactId>
         <version>1.0.0</version>
     </parent>
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/FishingPlatoonServiceImpl.java
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/FishingPlatoonServiceImpl.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/FishingPlatoonServiceImpl.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/FishingPlatoonServiceImpl.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/FishingPlatoonServiceImpl.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/service/impl/FishingPlatoonServiceImpl.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/service/impl/FishingPlatoonServiceImpl.java	(date 1726316993361)
@@ -1,26 +1,22 @@
-package org.qinian.service.impl;
+package org.leyramu.service.impl;
 
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import lombok.RequiredArgsConstructor;
-import org.qinian.dao.FishingPlatoonMapper;
+import org.leyramu.mapper.FishingPlatoonMapper;
 import org.qinian.domain.dto.UpdatePWDDTO;
 import org.qinian.domain.dto.fishingPlatoon.FishingPlatoonLoginFormDTO;
 import org.qinian.domain.dto.fishingPlatoon.FishingPlatoonRegisterFormDTO;
 import org.qinian.domain.pojo.FishingPlatoon;
 import org.qinian.domain.vo.UserLoginVO;
-import org.qinian.enums.UserStatus;
-import org.qinian.exception.BadRequestException;
-import org.qinian.exception.ForbiddenException;
-import org.qinian.properties.JwtProperties;
-import org.qinian.service.IFishingPlatoonService;
-import org.qinian.utils.AESUtil;
-import org.qinian.utils.Base64Util;
-import org.qinian.utils.JwtTool;
+import leyramu.qinian.asc.common.base.enums.UserStatus;
+import leyramu.qinian.asc.common.base.properties.JwtProperties;
+import org.leyramu.service.IFishingPlatoonService;
+import leyramu.qinian.asc.common.base.utils.AESUtil;
+import leyramu.qinian.asc.common.base.utils.Base64Util;
+import leyramu.qinian.asc.common.base.utils.JwtTool;
 import org.springframework.amqp.rabbit.core.RabbitTemplate;
-import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.stereotype.Service;
-import org.springframework.util.Assert;
 
 import java.nio.charset.StandardCharsets;
 import java.time.LocalDateTime;
Index: asc-java/asc-common/asc-common-log/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-log/pom.xml b/asc-java/asc-common/asc-common-log/pom.xml
new file mode 100644
--- /dev/null	(date 1726317592686)
+++ b/asc-java/asc-common/asc-common-log/pom.xml	(date 1726317592686)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8"?><!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
+    <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
+    <parent>
+        <groupId>leyramu.qinian</groupId>
+        <artifactId>asc-common</artifactId>
+        <relativePath>../pom.xml</relativePath>
+        <version>1.0.0</version>
+    </parent>
+
+    <!--      模块描述      -->
+    <description>管理微服务的日志记录工程</description>
+
+    <!--      工件 ID      -->
+    <artifactId>asc-common-log</artifactId>
+
+    <!--      依赖      -->
+    <dependencies>
+        <!--    Asc Common Security    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-security</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-common/asc-common-log/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-log/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-log/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1722344113855)
+++ b/asc-java/asc-common/asc-common-log/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1722344113855)
@@ -0,0 +1,10 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.softwarecup.digEdu.common.log.service.AsyncLogService
+leyramu.softwarecup.digEdu.common.log.aspect.LogAspect
Index: asc-java/asc-service/asc-weather-service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-service</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-weather-service</artifactId>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <!--      构建插件      -->\r\n    <build>\r\n        <plugins>\r\n            <!--    Spring Boot Maven Plugin    -->\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-weather-service/pom.xml b/asc-java/asc-service/asc-weather-service/pom.xml
--- a/asc-java/asc-service/asc-weather-service/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-weather-service/pom.xml	(date 1726316505225)
@@ -1,22 +1,15 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-service</artifactId>
         <version>1.0.0</version>
     </parent>
 
     <artifactId>asc-weather-service</artifactId>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <!--      构建插件      -->
     <build>
         <plugins>
@@ -28,4 +21,12 @@
             </plugin>
         </plugins>
     </build>
-</project>
\ No newline at end of file
+
+    <dependencies>
+        <!--    Asc Common Redis    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-redis</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-service/asc-raftMonitor-service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-service</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-raftMonitor-service</artifactId>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <!--      构建插件      -->\r\n    <build>\r\n        <plugins>\r\n            <!--    Spring Boot Maven Plugin    -->\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-raftMonitor-service/pom.xml b/asc-java/asc-service/asc-raftMonitor-service/pom.xml
--- a/asc-java/asc-service/asc-raftMonitor-service/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-raftMonitor-service/pom.xml	(date 1726316516766)
@@ -1,22 +1,15 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xmlns="http://maven.apache.org/POM/4.0.0"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-service</artifactId>
         <version>1.0.0</version>
     </parent>
 
     <artifactId>asc-raftMonitor-service</artifactId>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <!--      构建插件      -->
     <build>
         <plugins>
@@ -28,4 +21,12 @@
             </plugin>
         </plugins>
     </build>
-</project>
\ No newline at end of file
+
+    <dependencies>
+        <!--    Asc Common Redis    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-redis</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-service/asc-algorithm-service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.qinian</groupId>\r\n        <artifactId>asc-service</artifactId>\r\n        <version>1.0.0</version>\r\n    </parent>\r\n\r\n    <artifactId>asc-algorithm-service</artifactId>\r\n\r\n    <properties>\r\n        <maven.compiler.source>17</maven.compiler.source>\r\n        <maven.compiler.target>17</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <!--百度文字识别接口-->\r\n        <dependency>\r\n            <groupId>com.baidu.aip</groupId>\r\n            <artifactId>java-sdk</artifactId>\r\n            <version>4.3.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.ibm.icu</groupId>\r\n            <artifactId>icu4j</artifactId>\r\n            <version>61.1</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n\r\n    </dependencies>\r\n    <!--      构建插件      -->\r\n    <build>\r\n        <plugins>\r\n            <!--    Spring Boot Maven Plugin    -->\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <version>${spring-boot.version}</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/pom.xml b/asc-java/asc-service/asc-algorithm-service/pom.xml
--- a/asc-java/asc-service/asc-algorithm-service/pom.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-algorithm-service/pom.xml	(date 1726317300187)
@@ -4,19 +4,13 @@
          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
     <modelVersion>4.0.0</modelVersion>
     <parent>
-        <groupId>org.qinian</groupId>
+        <groupId>leyramu.qinian</groupId>
         <artifactId>asc-service</artifactId>
         <version>1.0.0</version>
     </parent>
 
     <artifactId>asc-algorithm-service</artifactId>
 
-    <properties>
-        <maven.compiler.source>17</maven.compiler.source>
-        <maven.compiler.target>17</maven.compiler.target>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-
     <dependencies>
         <!--百度文字识别接口-->
         <dependency>
@@ -43,4 +37,4 @@
             </plugin>
         </plugins>
     </build>
-</project>
\ No newline at end of file
+</project>
Index: asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerBeanPostProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerBeanPostProcessor.java b/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerBeanPostProcessor.java
new file mode 100644
--- /dev/null	(date 1722446153621)
+++ b/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerBeanPostProcessor.java	(date 1722446153621)
@@ -0,0 +1,81 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.swagger.config;
+
+import lombok.NonNull;
+import org.springframework.beans.BeansException;
+import org.springframework.beans.factory.config.BeanPostProcessor;
+import org.springframework.util.ReflectionUtils;
+import org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping;
+import springfox.documentation.spring.web.plugins.WebFluxRequestHandlerProvider;
+import springfox.documentation.spring.web.plugins.WebMvcRequestHandlerProvider;
+
+import java.lang.reflect.Field;
+import java.util.List;
+import java.util.Objects;
+
+/**
+ * swagger 在 springboot 2.6.x 不兼容问题的处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+public class SwaggerBeanPostProcessor implements BeanPostProcessor {
+
+    /**
+     * postProcessAfterInitialization
+     *
+     * @param bean     bean
+     * @param beanName beanName
+     * @return Object
+     * @throws BeansException BeansException
+     */
+    @Override
+    public Object postProcessAfterInitialization(@NonNull Object bean, @NonNull String beanName) throws BeansException {
+        if (bean instanceof WebMvcRequestHandlerProvider || bean instanceof WebFluxRequestHandlerProvider) {
+            customizeSpringfoxHandlerMappings(Objects.requireNonNull(getHandlerMappings(bean)));
+        }
+        return bean;
+    }
+
+    /**
+     * customizeSpringfoxHandlerMappings
+     *
+     * @param mappings mappings
+     */
+    private <T extends RequestMappingInfoHandlerMapping> void customizeSpringfoxHandlerMappings(List<T> mappings) {
+        List<T> copy = mappings.stream().filter(mapping -> mapping.getPatternParser() == null)
+                .toList();
+        mappings.clear();
+        mappings.addAll(copy);
+    }
+
+    /**
+     * getHandlerMappings
+     *
+     * @param bean bean
+     * @return List
+     */
+    @SuppressWarnings("unchecked")
+    private List<RequestMappingInfoHandlerMapping> getHandlerMappings(Object bean) {
+        try {
+            Field field = ReflectionUtils.findField(bean.getClass(), "handlerMappings");
+            if (field != null) {
+                field.setAccessible(true);
+            }
+            if (field != null) {
+                return (List<RequestMappingInfoHandlerMapping>) field.get(bean);
+            }
+        } catch (IllegalArgumentException | IllegalAccessException e) {
+            throw new IllegalStateException(e);
+        }
+        return null;
+    }
+}
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1728569278048)
@@ -1,5 +1,68 @@
 <component name="InspectionProjectProfileManager">
   <profile version="1.0">
     <option name="myName" value="Project Default" />
+    <inspection_tool class="AliAccessStaticViaInstance" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AliArrayNamingShouldHaveBracket" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AliControlFlowStatementWithoutBraces" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AliDeprecation" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AliEqualsAvoidNull" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AliLongLiteralsEndingWithLowercaseL" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AliMissingOverrideAnnotation" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AliWrapperTypeEquality" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAbstractClassShouldStartWithAbstractNaming" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAbstractMethodOrInterfaceMethodMustUseJavadoc" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidApacheBeanUtilsCopy" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidCallStaticSimpleDateFormat" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidCommentBehindStatement" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidComplexCondition" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidConcurrentCompetitionRandom" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidDoubleOrFloatEqualCompare" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidManuallyCreateThread" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidMissUseOfMathRandom" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidNegationOperator" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidNewDateGetTime" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidPatternCompileInMethod" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidReturnInFinally" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidStartWithDollarAndUnderLineNaming" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaAvoidUseTimer" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaBigDecimalAvoidDoubleConstructor" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaBooleanPropertyShouldNotStartWithIs" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaClassCastExceptionWithSubListToArrayList" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaClassCastExceptionWithToArray" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaClassMustHaveAuthor" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaClassNamingShouldBeCamel" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaCollectionInitShouldAssignCapacity" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaCommentsMustBeJavadocFormat" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaConcurrentExceptionWithModifyOriginSubList" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaConstantFieldShouldBeUpperCase" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaCountDownShouldInFinally" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaDontModifyInForeachCircle" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaEnumConstantsMustHaveComment" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaExceptionClassShouldEndWithException" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaIbatisMethodQueryForList" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaLockShouldWithTryFinally" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaLowerCamelCaseVariableNaming" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaMethodReturnWrapperType" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaMethodTooLong" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaPackageNaming" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaPojoMustOverrideToString" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaPojoMustUsePrimitiveField" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaPojoNoDefaultValue" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaRemoveCommentedCode" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaServiceOrDaoClassShouldEndWithImpl" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaSneakyThrowsWithoutExceptionType" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaStringConcat" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaSwitchExpression" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaSwitchStatement" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaTestClassShouldEndWithTestNaming" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaThreadLocalShouldRemove" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaThreadPoolCreation" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaThreadShouldSetName" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaTransactionMustHaveRollback" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaUndefineMagicConstant" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaUnsupportedExceptionWithModifyAsList" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaUseQuietReferenceNotation" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="AlibabaUseRightCaseForDateFormat" enabled="true" level="WARNING" enabled_by_default="true" />
+    <inspection_tool class="MapOrSetKeyShouldOverrideHashCodeEquals" enabled="true" level="WARNING" enabled_by_default="true" />
   </profile>
 </component>
\ No newline at end of file
Index: asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/annotation/EnableCustomSwagger2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/annotation/EnableCustomSwagger2.java b/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/annotation/EnableCustomSwagger2.java
new file mode 100644
--- /dev/null	(date 1722080606261)
+++ b/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/annotation/EnableCustomSwagger2.java	(date 1722080606261)
@@ -0,0 +1,29 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.swagger.annotation;
+
+import leyramu.softwarecup.digEdu.common.swagger.config.SwaggerAutoConfiguration;
+import org.springframework.context.annotation.Import;
+
+import java.lang.annotation.*;
+
+/**
+ * 开启swagger 2
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Target({ElementType.TYPE})
+@Retention(RetentionPolicy.RUNTIME)
+@Documented
+@Inherited
+@Import({SwaggerAutoConfiguration.class})
+public @interface EnableCustomSwagger2 {
+}
Index: asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/service/RedisService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/service/RedisService.java b/asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/service/RedisService.java
new file mode 100644
--- /dev/null	(date 1726310617750)
+++ b/asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/service/RedisService.java	(date 1726310617750)
@@ -0,0 +1,270 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.redis.service;
+
+import lombok.RequiredArgsConstructor;
+import org.springframework.data.redis.core.BoundSetOperations;
+import org.springframework.data.redis.core.HashOperations;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.core.ValueOperations;
+import org.springframework.stereotype.Component;
+
+import java.util.*;
+import java.util.concurrent.TimeUnit;
+
+/**
+ * spring redis 工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ **/
+@Component
+@RequiredArgsConstructor
+@SuppressWarnings(value = {"unchecked", "rawtypes"})
+public class RedisService {
+
+    public final RedisTemplate redisTemplate;
+
+    /**
+     * 缓存基本的对象，Integer、String、实体类等
+     *
+     * @param key   缓存的键值
+     * @param value 缓存的值
+     */
+    public <T> void setCacheObject(final String key, final T value) {
+        redisTemplate.opsForValue().set(key, value);
+    }
+
+    /**
+     * 缓存基本的对象，Integer、String、实体类等
+     *
+     * @param key      缓存的键值
+     * @param value    缓存的值
+     * @param timeout  时间
+     * @param timeUnit 时间颗粒度
+     */
+    public <T> void setCacheObject(final String key, final T value, final Long timeout, final TimeUnit timeUnit) {
+        redisTemplate.opsForValue().set(key, value, timeout, timeUnit);
+    }
+
+    /**
+     * 设置有效时间
+     *
+     * @param key     Redis键
+     * @param timeout 超时时间
+     * @return true=设置成功；false=设置失败
+     */
+    public boolean expire(final String key, final long timeout) {
+        return expire(key, timeout, TimeUnit.SECONDS);
+    }
+
+    /**
+     * 设置有效时间
+     *
+     * @param key     Redis键
+     * @param timeout 超时时间
+     * @param unit    时间单位
+     * @return true=设置成功；false=设置失败
+     */
+    public boolean expire(final String key, final long timeout, final TimeUnit unit) {
+        return Boolean.TRUE.equals(redisTemplate.expire(key, timeout, unit));
+    }
+
+    /**
+     * 获取有效时间
+     *
+     * @param key Redis键
+     * @return 有效时间
+     */
+    public long getExpire(final String key) {
+        if (key == null) {
+            throw new NullPointerException("key参数不能为空");
+        }
+
+        Long expireTime = redisTemplate.getExpire(key);
+        if (expireTime == null) {
+            return -1;
+        }
+
+        return expireTime.intValue();
+    }
+
+    /**
+     * 判断 key是否存在
+     *
+     * @param key 键
+     * @return true 存在 false不存在
+     */
+    public Boolean hasKey(String key) {
+        return redisTemplate.hasKey(key);
+    }
+
+    /**
+     * 获得缓存的基本对象。
+     *
+     * @param key 缓存键值
+     * @return 缓存键值对应的数据
+     */
+    public <T> T getCacheObject(final String key) {
+        ValueOperations<String, T> operation = redisTemplate.opsForValue();
+        return operation.get(key);
+    }
+
+    /**
+     * 删除单个对象
+     *
+     * @param key 缓存键值
+     * @return 删除成功返回true
+     */
+    public boolean deleteObject(final String key) {
+        return Boolean.TRUE.equals(redisTemplate.delete(key));
+    }
+
+    /**
+     * 删除集合对象
+     *
+     * @param collection 多个对象
+     * @return 删除成功返回true
+     */
+    public boolean deleteObject(final Collection collection) {
+        if (collection == null || collection.isEmpty()) {
+            return false;
+        }
+        Long result = redisTemplate.delete(collection);
+        if (result == null) {
+            return false;
+        }
+        return result > 0;
+    }
+
+    /**
+     * 缓存List数据
+     *
+     * @param key      缓存的键值
+     * @param dataList 待缓存的List数据
+     * @return 缓存的对象
+     */
+    public <T> long setCacheList(final String key, final List<T> dataList) {
+        Long count = redisTemplate.opsForList().rightPushAll(key, dataList);
+        return count == null ? 0 : count;
+    }
+
+    /**
+     * 获得缓存的list对象
+     *
+     * @param key 缓存的键值
+     * @return 缓存键值对应的数据
+     */
+    public <T> List<T> getCacheList(final String key) {
+        return redisTemplate.opsForList().range(key, 0, -1);
+    }
+
+    /**
+     * 缓存Set
+     *
+     * @param key     缓存键值
+     * @param dataSet 缓存的数据
+     * @return 缓存数据的对象
+     */
+    public <T> BoundSetOperations<String, T> setCacheSet(final String key, final Set<T> dataSet) {
+        BoundSetOperations<String, T> setOperation = redisTemplate.boundSetOps(key);
+        for (T t : dataSet) {
+            setOperation.add(t);
+        }
+        return setOperation;
+    }
+
+    /**
+     * 获得缓存的set
+     *
+     * @param key 键
+     * @return 集合
+     */
+    public <T> Set<T> getCacheSet(final String key) {
+        return redisTemplate.opsForSet().members(key);
+    }
+
+    /**
+     * 缓存Map
+     *
+     * @param key 键
+     * @param dataMap 数据映射
+     */
+    public <T> void setCacheMap(final String key, final Map<String, T> dataMap) {
+        if (dataMap != null) {
+            redisTemplate.opsForHash().putAll(key, dataMap);
+        }
+    }
+
+    /**
+     * 获得缓存的Map
+     *
+     * @param key 键
+     * @return 映射
+     */
+    public <T> Map<String, T> getCacheMap(final String key) {
+        return redisTemplate.opsForHash().entries(key);
+    }
+
+    /**
+     * 往Hash中存入数据
+     *
+     * @param key   Redis键
+     * @param hKey  Hash键
+     * @param value 值
+     */
+    public <T> void setCacheMapValue(final String key, final String hKey, final T value) {
+        redisTemplate.opsForHash().put(key, hKey, value);
+    }
+
+    /**
+     * 获取Hash中的数据
+     *
+     * @param key  Redis键
+     * @param hKey Hash键
+     * @return Hash中的对象
+     */
+    public <T> T getCacheMapValue(final String key, final String hKey) {
+        HashOperations<String, String, T> opsForHash = redisTemplate.opsForHash();
+        return opsForHash.get(key, hKey);
+    }
+
+    /**
+     * 获取多个Hash中的数据
+     *
+     * @param key   Redis键
+     * @param hKeys Hash键集合
+     * @return Hash对象集合
+     */
+    public <T> List<T> getMultiCacheMapValue(final String key, final Collection<Object> hKeys) {
+        return redisTemplate.opsForHash().multiGet(key, hKeys);
+    }
+
+    /**
+     * 删除Hash中的某条数据
+     *
+     * @param key  Redis键
+     * @param hKey Hash键
+     * @return 是否成功
+     */
+    public boolean deleteCacheMapValue(final String key, final String hKey) {
+        return redisTemplate.opsForHash().delete(key, hKey) > 0;
+    }
+
+    /**
+     * 获得缓存的基本对象列表
+     *
+     * @param pattern 字符串前缀
+     * @return 对象列表
+     */
+    public Collection<String> keys(final String pattern) {
+        return redisTemplate.keys(pattern);
+    }
+}
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"asc-cloud-seata\" />\r\n        <module name=\"asc-common-utils\" />\r\n        <module name=\"asc-weather-service\" />\r\n        <module name=\"asc-api-domain\" />\r\n        <module name=\"asc-email-service\" />\r\n        <module name=\"asc-algorithm-service\" />\r\n        <module name=\"asc-raftMonitor-service\" />\r\n        <module name=\"asc-cloud-register\" />\r\n        <module name=\"asc-gateway-api\" />\r\n        <module name=\"asc-fishRaft-service\" />\r\n        <module name=\"asc-alert-service\" />\r\n        <module name=\"asc-user-service\" />\r\n        <module name=\"asc-visual-monitor\" />\r\n        <module name=\"asc-cloud-sentinel\" />\r\n        <module name=\"asc-api-system\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n    <bytecodeTargetLevel>\r\n      <module name=\"asc-admin-cloud\" target=\"22\" />\r\n      <module name=\"digEdu-cloud-sentinel\" target=\"17\" />\r\n      <module name=\"digEdu-visual\" target=\"1.5\" />\r\n      <module name=\"digEdu-visual-monitor\" target=\"1.8\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"asc-admin-cloud\" options=\"\" />\r\n      <module name=\"asc-alert-service\" options=\"\" />\r\n      <module name=\"asc-algorithm-service\" options=\"\" />\r\n      <module name=\"asc-api-domain\" options=\"\" />\r\n      <module name=\"asc-api-system\" options=\"\" />\r\n      <module name=\"asc-cloud-seata\" options=\"\" />\r\n      <module name=\"asc-cloud-sentinel\" options=\"-Xlint:deprecation -parameters\" />\r\n      <module name=\"asc-common-utils\" options=\"\" />\r\n      <module name=\"asc-email-service\" options=\"\" />\r\n      <module name=\"asc-fishRaft-service\" options=\"\" />\r\n      <module name=\"asc-gateway-api\" options=\"\" />\r\n      <module name=\"asc-raftMonitor-service\" options=\"\" />\r\n      <module name=\"asc-user-service\" options=\"\" />\r\n      <module name=\"asc-weather-service\" options=\"\" />\r\n      <module name=\"digEdu-cloud-sentinel\" options=\"-parameters -Xlint:deprecation -parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/.idea/compiler.xml	(date 1726318027081)
@@ -7,26 +7,38 @@
         <sourceOutputDir name="target/generated-sources/annotations" />
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
         <outputRelativeToContentRoot value="true" />
-        <module name="asc-cloud-seata" />
-        <module name="asc-common-utils" />
+        <module name="asc-common-redis" />
         <module name="asc-weather-service" />
+        <module name="asc-common-swagger" />
+        <module name="asc-algorithm-service" />
+        <module name="asc-service-system" />
+        <module name="asc-common-datasource" />
+        <module name="asc-common-core" />
+        <module name="asc-common-i18n" />
+        <module name="asc-gateway-api" />
+        <module name="asc-common-mail" />
+        <module name="asc-user-service" />
+        <module name="asc-api-system" />
+        <module name="asc-common-datascope" />
+        <module name="asc-cloud-seata" />
         <module name="asc-api-domain" />
         <module name="asc-email-service" />
-        <module name="asc-algorithm-service" />
+        <module name="asc-common-log" />
         <module name="asc-raftMonitor-service" />
         <module name="asc-cloud-register" />
-        <module name="asc-gateway-api" />
+        <module name="asc-common-base" />
         <module name="asc-fishRaft-service" />
         <module name="asc-alert-service" />
-        <module name="asc-user-service" />
+        <module name="asc-common-security" />
         <module name="asc-visual-monitor" />
         <module name="asc-cloud-sentinel" />
-        <module name="asc-api-system" />
       </profile>
     </annotationProcessing>
     <bytecodeTargetLevel>
       <module name="asc-admin-cloud" target="22" />
+      <module name="asc-common-utils" target="17" />
       <module name="digEdu-cloud-sentinel" target="17" />
+      <module name="digEdu-common-core" target="22" />
       <module name="digEdu-visual" target="1.5" />
       <module name="digEdu-visual-monitor" target="1.8" />
     </bytecodeTargetLevel>
Index: asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/config/FastJson2JsonRedisSerializer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/config/FastJson2JsonRedisSerializer.java b/asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/config/FastJson2JsonRedisSerializer.java
new file mode 100644
--- /dev/null	(date 1726310617700)
+++ b/asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/config/FastJson2JsonRedisSerializer.java	(date 1726310617700)
@@ -0,0 +1,87 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.redis.config;
+
+import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
+
+import org.springframework.data.redis.serializer.RedisSerializer;
+import org.springframework.data.redis.serializer.SerializationException;
+import com.alibaba.fastjson2.JSON;
+import com.alibaba.fastjson2.JSONReader;
+import com.alibaba.fastjson2.JSONWriter;
+import com.alibaba.fastjson2.filter.Filter;
+import leyramu.qinian.asc.common.core.constant.Constants;
+
+/**
+ * Redis使用FastJson序列化
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+public class FastJson2JsonRedisSerializer<T> implements RedisSerializer<T> {
+
+    /**
+     * 默认编码
+     */
+    public static final Charset DEFAULT_CHARSET = StandardCharsets.UTF_8;
+
+    /**
+     * 默认白名单
+     */
+    static final Filter AUTO_TYPE_FILTER = JSONReader.autoTypeFilter(Constants.JSON_WHITELIST_STR);
+
+    /**
+     * 待序列化的类
+     */
+    private final Class<T> clazz;
+
+    /**
+     * 构造函数
+     *
+     * @param clazz 待序列化的类
+     */
+    public FastJson2JsonRedisSerializer(Class<T> clazz) {
+        super();
+        this.clazz = clazz;
+    }
+
+    /**
+     * 序列化
+     *
+     * @param t 待序列化的对象
+     * @return 序列化后的字节数组
+     * @throws SerializationException 序列化异常
+     */
+    @Override
+    public byte[] serialize(T t) throws SerializationException {
+        if (t == null) {
+            return new byte[0];
+        }
+        return JSON.toJSONString(t, JSONWriter.Feature.WriteClassName).getBytes(DEFAULT_CHARSET);
+    }
+
+    /**
+     * 反序列化
+     *
+     * @param bytes 字节数组
+     * @return 反序列化后的对象
+     * @throws SerializationException 反序列化异常
+     */
+    @Override
+    public T deserialize(byte[] bytes) throws SerializationException {
+        if (bytes == null || bytes.length == 0) {
+            return null;
+        }
+        String str = new String(bytes, DEFAULT_CHARSET);
+
+        return JSON.parseObject(str, clazz, AUTO_TYPE_FILTER);
+    }
+}
Index: asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/config/RedisConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/config/RedisConfig.java b/asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/config/RedisConfig.java
new file mode 100644
--- /dev/null	(date 1726310617683)
+++ b/asc-java/asc-common/asc-common-redis/src/main/java/leyramu/qinian/asc/common/redis/config/RedisConfig.java	(date 1726310617683)
@@ -0,0 +1,77 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.redis.config;
+
+import org.springframework.boot.autoconfigure.AutoConfigureBefore;
+import org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration;
+import org.springframework.cache.annotation.EnableCaching;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Primary;
+import org.springframework.data.redis.cache.RedisCacheConfiguration;
+import org.springframework.data.redis.cache.RedisCacheManager;
+import org.springframework.data.redis.cache.RedisCacheWriter;
+import org.springframework.data.redis.connection.RedisConnectionFactory;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.serializer.RedisSerializationContext;
+import org.springframework.data.redis.serializer.StringRedisSerializer;
+
+import java.time.Duration;
+import java.util.Objects;
+
+/**
+ * Redis 数据库配置
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/6/9
+ */
+@Configuration
+@EnableCaching
+@AutoConfigureBefore(RedisAutoConfiguration.class)
+public class RedisConfig {
+
+    /**
+     * Redis 配置
+     *
+     * @param factory Redis 连接工厂
+     * @return Redis 配置
+     */
+    @Bean
+    @Primary
+    public RedisTemplate<String, Object> redisTemplate(RedisConnectionFactory factory) {
+        RedisTemplate<String, Object> redisTemplate = new RedisTemplate<>();
+        redisTemplate.setConnectionFactory(factory);
+        FastJson2JsonRedisSerializer<Object> serializer = new FastJson2JsonRedisSerializer<>(Object.class);
+        // 值采用json序列化
+        redisTemplate.setValueSerializer(serializer);
+        //使用StringRedisSerializer来序列化和反序列化redis的key值
+        redisTemplate.setKeySerializer(new StringRedisSerializer());
+        // 设置hash key 和value序列化模式
+        redisTemplate.setHashKeySerializer(new StringRedisSerializer());
+        redisTemplate.setHashValueSerializer(serializer);
+        redisTemplate.afterPropertiesSet();
+        return redisTemplate;
+    }
+
+    /**
+     * Redis 缓存管理器
+     *
+     * @param redisTemplate Redis 模板
+     * @return Redis 缓存管理器
+     */
+    @Bean
+    public RedisCacheManager redisCacheManager(RedisTemplate<String, Object> redisTemplate) {
+        RedisCacheWriter redisCacheWriter = RedisCacheWriter.nonLockingRedisCacheWriter(Objects.requireNonNull(redisTemplate.getConnectionFactory()));
+        RedisCacheConfiguration redisCacheConfiguration = RedisCacheConfiguration.defaultCacheConfig()
+                .entryTtl(Duration.ofHours(12))
+                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(redisTemplate.getValueSerializer()));
+        return new RedisCacheManager(redisCacheWriter, redisCacheConfiguration);
+    }
+}
Index: asc-java/asc-common/asc-common-swagger/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-swagger/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-swagger/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1726317628869)
+++ b/asc-java/asc-common/asc-common-swagger/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1726317628869)
@@ -0,0 +1,11 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+# leyramu.qinian.asc.common.swagger.config.SwaggerAutoConfiguration
+# leyramu.qinian.asc.common.swagger.config.SwaggerWebConfiguration
+# leyramu.qinian.asc.common.swagger.config.SwaggerBeanPostProcessor
Index: asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/config/WebSecurityConfigurer.java
===================================================================
diff --git a/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/config/WebSecurityConfigurer.java b/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/qinian/asc/visual/monitor/config/WebSecurityConfigurer.java
rename from asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/config/WebSecurityConfigurer.java
rename to asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/qinian/asc/visual/monitor/config/WebSecurityConfigurer.java
--- a/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/config/WebSecurityConfigurer.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/qinian/asc/visual/monitor/config/WebSecurityConfigurer.java	(date 1726310617677)
@@ -6,7 +6,7 @@
  * By using this project, users acknowledge and agree to abide by these terms and conditions.
  */
 
-package leyramu.softwarecup.digEdu.monitor.config;
+package leyramu.qinian.asc.visual.monitor.config;
 
 import de.codecentric.boot.admin.server.config.AdminServerProperties;
 import org.springframework.context.annotation.Bean;
Index: asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerProperties.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerProperties.java b/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerProperties.java
new file mode 100644
--- /dev/null	(date 1722080606257)
+++ b/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerProperties.java	(date 1722080606257)
@@ -0,0 +1,149 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.swagger.config;
+
+import lombok.Data;
+import org.springframework.boot.context.properties.ConfigurationProperties;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * swagger配置
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+@ConfigurationProperties("swagger")
+public class SwaggerProperties {
+
+    /**
+     * 是否开启swagger
+     */
+    private Boolean enabled;
+
+    /**
+     * swagger会解析的包路径
+     **/
+    private String basePackage = "";
+
+    /**
+     * swagger会解析的url规则
+     **/
+    private List<String> basePath = new ArrayList<>();
+
+    /**
+     * 在basePath基础上需要排除的url规则
+     **/
+    private List<String> excludePath = new ArrayList<>();
+
+    /**
+     * 标题
+     **/
+    private String title = "";
+
+    /**
+     * 描述
+     **/
+    private String description = "";
+
+    /**
+     * 版本
+     **/
+    private String version = "";
+
+    /**
+     * 许可证
+     **/
+    private String license = "";
+
+    /**
+     * 许可证URL
+     **/
+    private String licenseUrl = "";
+
+    /**
+     * 服务条款URL
+     **/
+    private String termsOfServiceUrl = "";
+
+    /**
+     * host信息
+     **/
+    private String host = "";
+
+    /**
+     * 联系人信息
+     */
+    private Contact contact = new Contact();
+
+    /**
+     * 全局统一鉴权配置
+     **/
+    private Authorization authorization = new Authorization();
+
+    @Data
+    public static class Contact {
+
+        /**
+         * 联系人
+         **/
+        private String name = "";
+
+        /**
+         * 联系人url
+         **/
+        private String url = "";
+
+        /**
+         * 联系人email
+         **/
+        private String email = "";
+    }
+
+    @Data
+    public static class Authorization {
+
+        /**
+         * 鉴权策略ID，需要和SecurityReferences ID保持一致
+         */
+        private String name = "";
+
+        /**
+         * 需要开启鉴权URL的正则
+         */
+        private String authRegex = "^.*$";
+
+        /**
+         * 鉴权作用域列表
+         */
+        private List<AuthorizationScope> authorizationScopeList = new ArrayList<>();
+
+        /**
+         * 鉴权 URL
+         */
+        private List<String> tokenUrlList = new ArrayList<>();
+    }
+
+    @Data
+    public static class AuthorizationScope {
+
+        /**
+         * 作用域名称
+         */
+        private String scope = "";
+
+        /**
+         * 作用域描述
+         */
+        private String description = "";
+    }
+}
Index: asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerWebConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerWebConfiguration.java b/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerWebConfiguration.java
new file mode 100644
--- /dev/null	(date 1722080606264)
+++ b/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerWebConfiguration.java	(date 1722080606264)
@@ -0,0 +1,31 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.swagger.config;
+
+import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
+
+/**
+ * swagger 资源映射路径
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+public class SwaggerWebConfiguration implements WebMvcConfigurer {
+
+    /**
+     * swagger-ui 地址
+     */
+    @Override
+    public void addResourceHandlers(ResourceHandlerRegistry registry) {
+        registry.addResourceHandler("/swagger-ui/**")
+                .addResourceLocations("classpath:/META-INF/resources/webjars/springfox-swagger-ui/");
+    }
+}
Index: asc-java/asc-common/asc-common-redis/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-redis/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-redis/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1726310617673)
+++ b/asc-java/asc-common/asc-common-redis/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1726310617673)
@@ -0,0 +1,10 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.qinian.asc.common.redis.config.RedisConfig
+leyramu.qinian.asc.common.redis.service.RedisService
Index: asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerAutoConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerAutoConfiguration.java b/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerAutoConfiguration.java
new file mode 100644
--- /dev/null	(date 1722080606249)
+++ b/asc-java/asc-common/asc-common-swagger/src/main/java/leyramu/qinian/asc/common/swagger/config/SwaggerAutoConfiguration.java	(date 1722080606249)
@@ -0,0 +1,126 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.swagger.config;
+
+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Import;
+import springfox.documentation.builders.ApiInfoBuilder;
+import springfox.documentation.builders.PathSelectors;
+import springfox.documentation.builders.RequestHandlerSelectors;
+import springfox.documentation.service.*;
+import springfox.documentation.spi.DocumentationType;
+import springfox.documentation.spi.service.contexts.SecurityContext;
+import springfox.documentation.spring.web.plugins.ApiSelectorBuilder;
+import springfox.documentation.spring.web.plugins.Docket;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.function.Predicate;
+
+/**
+ * Swagger2的API文档自动生成配置
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Configuration
+@EnableSwagger2
+@EnableConfigurationProperties(SwaggerProperties.class)
+@ConditionalOnProperty(name = "swagger.enabled", matchIfMissing = true)
+@Import({SwaggerBeanPostProcessor.class, SwaggerWebConfiguration.class})
+public class SwaggerAutoConfiguration {
+    /**
+     * 默认的排除路径，排除Spring Boot默认的错误处理路径和端点
+     */
+    private static final List<String> DEFAULT_EXCLUDE_PATH = Arrays.asList("/error", "/actuator/**");
+
+    private static final String BASE_PATH = "/**";
+
+    @Bean
+    @SuppressWarnings("all")
+    public Docket api(SwaggerProperties swaggerProperties) {
+        // base-path处理
+        if (swaggerProperties.getBasePath().isEmpty()) {
+            swaggerProperties.getBasePath().add(BASE_PATH);
+        }
+        List<Predicate<String>> basePath = new ArrayList<>();
+        swaggerProperties.getBasePath().forEach(path -> basePath.add(PathSelectors.ant(path)));
+
+        // exclude-path处理
+        if (swaggerProperties.getExcludePath().isEmpty()) {
+            swaggerProperties.getExcludePath().addAll(DEFAULT_EXCLUDE_PATH);
+        }
+
+        List<Predicate<String>> excludePath = new ArrayList<>();
+        swaggerProperties.getExcludePath().forEach(path -> excludePath.add(PathSelectors.ant(path)));
+
+        ApiSelectorBuilder builder = new Docket(DocumentationType.SWAGGER_2).host(swaggerProperties.getHost())
+                .apiInfo(apiInfo(swaggerProperties)).select()
+                .apis(RequestHandlerSelectors.basePackage(swaggerProperties.getBasePackage()));
+
+        swaggerProperties.getBasePath().forEach(p -> builder.paths(PathSelectors.ant(p)));
+        swaggerProperties.getExcludePath().forEach(p -> builder.paths(PathSelectors.ant(p).negate()));
+
+        return builder.build().securitySchemes(securitySchemes()).securityContexts(securityContexts()).pathMapping("/");
+    }
+
+    /**
+     * 安全模式，这里指定token通过Authorization头请求头传递
+     */
+    private List<SecurityScheme> securitySchemes() {
+        List<SecurityScheme> apiKeyList = new ArrayList<>();
+        apiKeyList.add(new ApiKey("Authorization", "Authorization", "header"));
+        return apiKeyList;
+    }
+
+    /**
+     * 安全上下文
+     */
+    private List<SecurityContext> securityContexts() {
+        List<SecurityContext> securityContexts = new ArrayList<>();
+        securityContexts.add(
+                SecurityContext.builder()
+                        .securityReferences(defaultAuth())
+                        .operationSelector(o -> o.requestMappingPattern().matches("/.*"))
+                        .build());
+        return securityContexts;
+    }
+
+    /**
+     * 默认的全局鉴权策略
+     *
+     * @return 默认的全局鉴权策略
+     */
+    private List<SecurityReference> defaultAuth() {
+        AuthorizationScope authorizationScope = new AuthorizationScope("global", "accessEverything");
+        AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];
+        authorizationScopes[0] = authorizationScope;
+        List<SecurityReference> securityReferences = new ArrayList<>();
+        securityReferences.add(new SecurityReference("Authorization", authorizationScopes));
+        return securityReferences;
+    }
+
+    private ApiInfo apiInfo(SwaggerProperties swaggerProperties) {
+        return new ApiInfoBuilder()
+                .title(swaggerProperties.getTitle())
+                .description(swaggerProperties.getDescription())
+                .license(swaggerProperties.getLicense())
+                .licenseUrl(swaggerProperties.getLicenseUrl())
+                .termsOfServiceUrl(swaggerProperties.getTermsOfServiceUrl())
+                .contact(new Contact(swaggerProperties.getContact().getName(), swaggerProperties.getContact().getUrl(), swaggerProperties.getContact().getEmail()))
+                .version(swaggerProperties.getVersion())
+                .build();
+    }
+}
Index: asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/config/StatusChangeNotifier.java
===================================================================
diff --git a/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/config/StatusChangeNotifier.java b/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/qinian/asc/visual/monitor/config/StatusChangeNotifier.java
rename from asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/config/StatusChangeNotifier.java
rename to asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/qinian/asc/visual/monitor/config/StatusChangeNotifier.java
--- a/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/softwarecup/digEdu/monitor/config/StatusChangeNotifier.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-visual/asc-visual-monitor/src/main/java/leyramu/qinian/asc/visual/monitor/config/StatusChangeNotifier.java	(date 1726310617714)
@@ -15,7 +15,7 @@
  *
  */
 
-package leyramu.softwarecup.digEdu.monitor.config;
+package leyramu.qinian.asc.visual.monitor.config;
 
 import de.codecentric.boot.admin.server.domain.entities.Instance;
 import de.codecentric.boot.admin.server.domain.entities.InstanceRepository;
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/aspect/PreAuthorizeAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/aspect/PreAuthorizeAspect.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/aspect/PreAuthorizeAspect.java
new file mode 100644
--- /dev/null	(date 1722006801889)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/aspect/PreAuthorizeAspect.java	(date 1722006801889)
@@ -0,0 +1,89 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.aspect;
+
+import leyramu.softwarecup.digEdu.common.security.annotation.RequiresLogin;
+import leyramu.softwarecup.digEdu.common.security.annotation.RequiresPermissions;
+import leyramu.softwarecup.digEdu.common.security.annotation.RequiresRoles;
+import leyramu.softwarecup.digEdu.common.security.auth.AuthUtil;
+import lombok.NoArgsConstructor;
+import org.aspectj.lang.ProceedingJoinPoint;
+import org.aspectj.lang.annotation.Around;
+import org.aspectj.lang.annotation.Aspect;
+import org.aspectj.lang.annotation.Pointcut;
+import org.aspectj.lang.reflect.MethodSignature;
+import org.springframework.stereotype.Component;
+
+import java.lang.reflect.Method;
+
+/**
+ * 基于 Spring Aop 的注解鉴权
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Aspect
+@Component
+@NoArgsConstructor
+public class PreAuthorizeAspect {
+
+    /**
+     * 定义AOP签名 (切入所有使用鉴权注解的方法)
+     */
+    public static final String POINTCUT_SIGN = " @annotation(leyramu.softwarecup.digEdu.common.security.annotation.RequiresLogin) || "
+            + "@annotation(leyramu.softwarecup.digEdu.common.security.annotation.RequiresPermissions) || "
+            + "@annotation(leyramu.softwarecup.digEdu.common.security.annotation.RequiresRoles)";
+
+    /**
+     * 声明AOP签名
+     */
+    @Pointcut(POINTCUT_SIGN)
+    public void pointcut() {
+    }
+
+    /**
+     * 环绕切入
+     *
+     * @param joinPoint 切面对象
+     * @return 底层方法执行后的返回值
+     * @throws Throwable 底层方法抛出的异常
+     */
+    @Around("pointcut()")
+    public Object around(ProceedingJoinPoint joinPoint) throws Throwable {
+        // 注解鉴权
+        MethodSignature signature = (MethodSignature) joinPoint.getSignature();
+        checkMethodAnnotation(signature.getMethod());
+        // 执行原有逻辑
+        return joinPoint.proceed();
+    }
+
+    /**
+     * 对一个Method对象进行注解检查
+     */
+    public void checkMethodAnnotation(Method method) {
+        // 校验 @RequiresLogin 注解
+        RequiresLogin requiresLogin = method.getAnnotation(RequiresLogin.class);
+        if (requiresLogin != null) {
+            AuthUtil.checkLogin();
+        }
+
+        // 校验 @RequiresRoles 注解
+        RequiresRoles requiresRoles = method.getAnnotation(RequiresRoles.class);
+        if (requiresRoles != null) {
+            AuthUtil.checkRole(requiresRoles);
+        }
+
+        // 校验 @RequiresPermissions 注解
+        RequiresPermissions requiresPermissions = method.getAnnotation(RequiresPermissions.class);
+        if (requiresPermissions != null) {
+            AuthUtil.checkPermi(requiresPermissions);
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/config/WebMvcConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/config/WebMvcConfig.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/config/WebMvcConfig.java
new file mode 100644
--- /dev/null	(date 1722006801863)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/config/WebMvcConfig.java	(date 1722006801863)
@@ -0,0 +1,48 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.config;
+
+import leyramu.softwarecup.digEdu.common.security.interceptor.HeaderInterceptor;
+import org.springframework.web.servlet.config.annotation.InterceptorRegistry;
+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
+
+/**
+ * 拦截器配置
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class WebMvcConfig implements WebMvcConfigurer {
+
+    /**
+     * 不需要拦截地址
+     */
+    public static final String[] EXCLUDE_URLS = {"/login", "/logout", "/refresh"};
+
+    /**
+     * 添加拦截器
+     *
+     * @param registry 拦截器注册
+     */
+    @Override
+    public void addInterceptors(InterceptorRegistry registry) {
+        registry.addInterceptor(getHeaderInterceptor())
+                .addPathPatterns("/**")
+                .excludePathPatterns(EXCLUDE_URLS)
+                .order(-10);
+    }
+
+    /**
+     * 自定义请求头拦截器
+     */
+    public HeaderInterceptor getHeaderInterceptor() {
+        return new HeaderInterceptor();
+    }
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/config/ApplicationConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/config/ApplicationConfig.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/config/ApplicationConfig.java
new file mode 100644
--- /dev/null	(date 1721798579674)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/config/ApplicationConfig.java	(date 1721798579674)
@@ -0,0 +1,32 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.config;
+
+import org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer;
+import org.springframework.context.annotation.Bean;
+
+import java.util.TimeZone;
+
+/**
+ * 系统配置
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class ApplicationConfig {
+
+    /**
+     * 时区配置
+     */
+    @Bean
+    public Jackson2ObjectMapperBuilderCustomizer jacksonObjectMapperCustomization() {
+        return jacksonObjectMapperBuilder -> jacksonObjectMapperBuilder.timeZone(TimeZone.getDefault());
+    }
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/handler/GlobalExceptionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/handler/GlobalExceptionHandler.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/handler/GlobalExceptionHandler.java
new file mode 100644
--- /dev/null	(date 1722006801872)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/handler/GlobalExceptionHandler.java	(date 1722006801872)
@@ -0,0 +1,168 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.handler;
+
+import jakarta.servlet.http.HttpServletRequest;
+import leyramu.softwarecup.digEdu.common.core.constant.HttpStatus;
+import leyramu.softwarecup.digEdu.common.core.exception.DemoModeException;
+import leyramu.softwarecup.digEdu.common.core.exception.InnerAuthException;
+import leyramu.softwarecup.digEdu.common.core.exception.ServiceException;
+import leyramu.softwarecup.digEdu.common.core.exception.auth.NotPermissionException;
+import leyramu.softwarecup.digEdu.common.core.exception.auth.NotRoleException;
+import leyramu.softwarecup.digEdu.common.core.text.Convert;
+import leyramu.softwarecup.digEdu.common.core.utils.StringUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.html.EscapeUtil;
+import leyramu.softwarecup.digEdu.common.core.web.domain.AjaxResult;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.validation.BindException;
+import org.springframework.web.HttpRequestMethodNotSupportedException;
+import org.springframework.web.bind.MethodArgumentNotValidException;
+import org.springframework.web.bind.MissingPathVariableException;
+import org.springframework.web.bind.annotation.ExceptionHandler;
+import org.springframework.web.bind.annotation.RestControllerAdvice;
+import org.springframework.web.method.annotation.MethodArgumentTypeMismatchException;
+
+import java.util.Objects;
+
+/**
+ * 全局异常处理器
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@RestControllerAdvice
+public class GlobalExceptionHandler {
+
+    /**
+     * 日志记录
+     */
+    private static final Logger log = LoggerFactory.getLogger(GlobalExceptionHandler.class);
+
+    /**
+     * 权限码异常
+     */
+    @ExceptionHandler(NotPermissionException.class)
+    public AjaxResult handleNotPermissionException(NotPermissionException e, HttpServletRequest request) {
+        String requestUri = request.getRequestURI();
+        log.error("请求地址'{}',权限码校验失败'{}'", requestUri, e.getMessage());
+        return AjaxResult.error(HttpStatus.FORBIDDEN, "没有访问权限，请联系管理员授权");
+    }
+
+    /**
+     * 角色权限异常
+     */
+    @ExceptionHandler(NotRoleException.class)
+    public AjaxResult handleNotRoleException(NotRoleException e, HttpServletRequest request) {
+        String requestUri = request.getRequestURI();
+        log.error("请求地址'{}',角色权限校验失败'{}'", requestUri, e.getMessage());
+        return AjaxResult.error(HttpStatus.FORBIDDEN, "没有访问权限，请联系管理员授权");
+    }
+
+    /**
+     * 请求方式不支持
+     */
+    @ExceptionHandler(HttpRequestMethodNotSupportedException.class)
+    public AjaxResult handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException e, HttpServletRequest request) {
+        String requestUri = request.getRequestURI();
+        log.error("请求地址'{}',不支持'{}'请求", requestUri, e.getMethod());
+        return AjaxResult.error(e.getMessage());
+    }
+
+    /**
+     * 业务异常
+     */
+    @ExceptionHandler(ServiceException.class)
+    public AjaxResult handleServiceException(ServiceException e) {
+        log.error(e.getMessage(), e);
+        Integer code = e.getCode();
+        return StringUtils.isNotNull(code) ? AjaxResult.error(code, e.getMessage()) : AjaxResult.error(e.getMessage());
+    }
+
+    /**
+     * 请求路径中缺少必需的路径变量
+     */
+    @ExceptionHandler(MissingPathVariableException.class)
+    public AjaxResult handleMissingPathVariableException(MissingPathVariableException e, HttpServletRequest request) {
+        String requestUri = request.getRequestURI();
+        log.error("请求路径中缺少必需的路径变量'{}',发生系统异常.", requestUri, e);
+        return AjaxResult.error(String.format("请求路径中缺少必需的路径变量[%s]", e.getVariableName()));
+    }
+
+    /**
+     * 请求参数类型不匹配
+     */
+    @ExceptionHandler(MethodArgumentTypeMismatchException.class)
+    public AjaxResult handleMethodArgumentTypeMismatchException(MethodArgumentTypeMismatchException e, HttpServletRequest request) {
+        String requestUri = request.getRequestURI();
+        String value = Convert.toStr(e.getValue());
+        if (StringUtils.isNotEmpty(value)) {
+            value = EscapeUtil.clean(value);
+        }
+        log.error("请求参数类型不匹配'{}',发生系统异常.", requestUri, e);
+        return AjaxResult.error(String.format("请求参数类型不匹配，参数[%s]要求类型为：'%s'，但输入值为：'%s'", e.getName(), Objects.requireNonNull(e.getRequiredType()).getName(), value));
+    }
+
+    /**
+     * 拦截未知的运行时异常
+     */
+    @ExceptionHandler(RuntimeException.class)
+    public AjaxResult handleRuntimeException(RuntimeException e, HttpServletRequest request) {
+        String requestUri = request.getRequestURI();
+        log.error("请求地址'{}',发生未知异常.", requestUri, e);
+        return AjaxResult.error(e.getMessage());
+    }
+
+    /**
+     * 系统异常
+     */
+    @ExceptionHandler(Exception.class)
+    public AjaxResult handleException(Exception e, HttpServletRequest request) {
+        String requestUri = request.getRequestURI();
+        log.error("请求地址'{}',发生系统异常.", requestUri, e);
+        return AjaxResult.error(e.getMessage());
+    }
+
+    /**
+     * 自定义验证异常
+     */
+    @ExceptionHandler(BindException.class)
+    public AjaxResult handleBindException(BindException e) {
+        log.error(e.getMessage(), e);
+        String message = e.getAllErrors().get(0).getDefaultMessage();
+        return AjaxResult.error(message);
+    }
+
+    /**
+     * 自定义验证异常
+     */
+    @ExceptionHandler(MethodArgumentNotValidException.class)
+    public Object handleMethodArgumentNotValidException(MethodArgumentNotValidException e) {
+        log.error(e.getMessage(), e);
+        String message = Objects.requireNonNull(e.getBindingResult().getFieldError()).getDefaultMessage();
+        return AjaxResult.error(message);
+    }
+
+    /**
+     * 内部认证异常
+     */
+    @ExceptionHandler(InnerAuthException.class)
+    public AjaxResult handleInnerAuthException(InnerAuthException e) {
+        return AjaxResult.error(e.getMessage());
+    }
+
+    /**
+     * 演示模式异常
+     */
+    @ExceptionHandler(DemoModeException.class)
+    public AjaxResult handleDemoModeException() {
+        return AjaxResult.error("演示模式，不允许操作");
+    }
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/service/TokenService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/service/TokenService.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/service/TokenService.java
new file mode 100644
--- /dev/null	(date 1722273760543)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/service/TokenService.java	(date 1722273760543)
@@ -0,0 +1,190 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.service;
+
+import jakarta.servlet.http.HttpServletRequest;
+import leyramu.softwarecup.digEdu.common.core.constant.CacheConstants;
+import leyramu.softwarecup.digEdu.common.core.constant.SecurityConstants;
+import leyramu.softwarecup.digEdu.common.core.utils.JwtUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.ServletUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.StringUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.ip.IpUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.uuid.IdUtils;
+import leyramu.softwarecup.digEdu.common.redis.service.RedisService;
+import leyramu.softwarecup.digEdu.common.security.utils.SecurityUtils;
+import leyramu.softwarecup.digEdu.system.api.model.LoginUser;
+import lombok.RequiredArgsConstructor;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.stereotype.Component;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.concurrent.TimeUnit;
+
+/**
+ * token验证处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Component
+@RequiredArgsConstructor
+public class TokenService {
+
+    /**
+     * 日志记录
+     */
+    private static final Logger log = LoggerFactory.getLogger(TokenService.class);
+
+    /**
+     * redis缓存
+     */
+    private final RedisService redisService;
+
+    /**
+     * 令牌自定义标识
+     */
+    protected static final long MILLIS_SECOND = 1000;
+
+    /**
+     * 令牌自定义标识
+     */
+    protected static final long MILLIS_MINUTE = 60 * MILLIS_SECOND;
+
+    /**
+     * 令牌自定义标识
+     */
+    private final static long EXPIRE_TIME = CacheConstants.EXPIRATION;
+
+    /**
+     * 令牌自定义标识
+     */
+    private final static String ACCESS_TOKEN = CacheConstants.LOGIN_TOKEN_KEY;
+
+    /**
+     * 令牌自定义标识
+     */
+    private final static Long MILLIS_MINUTE_TEN = CacheConstants.REFRESH_TIME * MILLIS_MINUTE;
+
+    /**
+     * 创建令牌
+     */
+    public Map<String, Object> createToken(LoginUser loginUser) {
+        String token = IdUtils.fastUuid();
+        Long userId = loginUser.getSysUser().getUserId();
+        String userName = loginUser.getSysUser().getUserName();
+        loginUser.setToken(token);
+        loginUser.setUserid(userId);
+        loginUser.setUsername(userName);
+        loginUser.setIpaddr(IpUtils.getIpAddr());
+        refreshToken(loginUser);
+
+        // Jwt存储信息
+        Map<String, Object> claimsMap = new HashMap<>();
+        claimsMap.put(SecurityConstants.USER_KEY, token);
+        claimsMap.put(SecurityConstants.DETAILS_USER_ID, userId);
+        claimsMap.put(SecurityConstants.DETAILS_USERNAME, userName);
+
+        // 接口返回信息
+        Map<String, Object> rspMap = new HashMap<>();
+        rspMap.put("access_token", JwtUtils.createToken(claimsMap));
+        rspMap.put("expires_in", EXPIRE_TIME);
+        return rspMap;
+    }
+
+    /**
+     * 获取用户身份信息
+     *
+     * @return 用户信息
+     */
+    public LoginUser getLoginUser() {
+        return getLoginUser(ServletUtils.getRequest());
+    }
+
+    /**
+     * 获取用户身份信息
+     *
+     * @return 用户信息
+     */
+    public LoginUser getLoginUser(HttpServletRequest request) {
+        // 获取请求携带的令牌
+        String token = SecurityUtils.getToken(request);
+        return getLoginUser(token);
+    }
+
+    /**
+     * 获取用户身份信息
+     *
+     * @return 用户信息
+     */
+    public LoginUser getLoginUser(String token) {
+        LoginUser user;
+        try {
+            if (StringUtils.isNotEmpty(token)) {
+                String userKey = JwtUtils.getUserKey(token);
+                user = redisService.getCacheObject(getTokenKey(userKey));
+                return user;
+            }
+        } catch (Exception e) {
+            log.error("获取用户信息异常'{}'", e.getMessage());
+        }
+        return null;
+    }
+
+    /**
+     * 设置用户身份信息
+     */
+    public void setLoginUser(LoginUser loginUser) {
+        if (StringUtils.isNotNull(loginUser) && StringUtils.isNotEmpty(loginUser.getToken())) {
+            refreshToken(loginUser);
+        }
+    }
+
+    /**
+     * 删除用户缓存信息
+     */
+    public void delLoginUser(String token) {
+        if (StringUtils.isNotEmpty(token)) {
+            String userKey = JwtUtils.getUserKey(token);
+            redisService.deleteObject(getTokenKey(userKey));
+        }
+    }
+
+    /**
+     * 验证令牌有效期，相差不足120分钟，自动刷新缓存
+     *
+     * @param loginUser 登录信息
+     */
+    public void verifyToken(LoginUser loginUser) {
+        long expireTime = loginUser.getExpireTime();
+        long currentTime = System.currentTimeMillis();
+        if (expireTime - currentTime <= MILLIS_MINUTE_TEN) {
+            refreshToken(loginUser);
+        }
+    }
+
+    /**
+     * 刷新令牌有效期
+     *
+     * @param loginUser 登录信息
+     */
+    public void refreshToken(LoginUser loginUser) {
+        loginUser.setLoginTime(System.currentTimeMillis());
+        loginUser.setExpireTime(loginUser.getLoginTime() + EXPIRE_TIME * MILLIS_MINUTE);
+        // 根据uuid将loginUser缓存
+        String userKey = getTokenKey(loginUser.getToken());
+        redisService.setCacheObject(userKey, loginUser, EXPIRE_TIME, TimeUnit.MINUTES);
+    }
+
+    private String getTokenKey(String token) {
+        return ACCESS_TOKEN + token;
+    }
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/feign/FeignAutoConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/feign/FeignAutoConfiguration.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/feign/FeignAutoConfiguration.java
new file mode 100644
--- /dev/null	(date 1722006801897)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/feign/FeignAutoConfiguration.java	(date 1722006801897)
@@ -0,0 +1,34 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.feign;
+
+import feign.RequestInterceptor;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+
+/**
+ * Feign 配置注册
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ **/
+@Configuration
+public class FeignAutoConfiguration {
+
+    /**
+     * Feign 请求拦截器
+     *
+     * @return 请求拦截器
+     */
+    @Bean
+    public RequestInterceptor requestInterceptor() {
+        return new FeignRequestInterceptor();
+    }
+}
Index: asc-java/asc-common/asc-common-swagger/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-swagger/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-swagger/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1722344113736)
+++ b/asc-java/asc-common/asc-common-swagger/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1722344113736)
@@ -0,0 +1,11 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+# leyramu.softwarecup.digEdu.common.swagger.config.SwaggerAutoConfiguration
+# leyramu.softwarecup.digEdu.common.swagger.config.SwaggerWebConfiguration
+# leyramu.softwarecup.digEdu.common.swagger.config.SwaggerBeanPostProcessor
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/feign/FeignRequestInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/feign/FeignRequestInterceptor.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/feign/FeignRequestInterceptor.java
new file mode 100644
--- /dev/null	(date 1722006801866)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/feign/FeignRequestInterceptor.java	(date 1722006801866)
@@ -0,0 +1,64 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.feign;
+
+import feign.RequestInterceptor;
+import feign.RequestTemplate;
+import jakarta.servlet.http.HttpServletRequest;
+import leyramu.softwarecup.digEdu.common.core.constant.SecurityConstants;
+import leyramu.softwarecup.digEdu.common.core.utils.ServletUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.StringUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.ip.IpUtils;
+import org.springframework.stereotype.Component;
+
+import java.util.Map;
+
+/**
+ * feign 请求拦截器
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Component
+public class FeignRequestInterceptor implements RequestInterceptor {
+
+    /**
+     * 拦截请求，在请求头中设置用户信息
+     *
+     * @param requestTemplate 请求模板
+     */
+    @Override
+    public void apply(RequestTemplate requestTemplate) {
+        HttpServletRequest httpServletRequest = ServletUtils.getRequest();
+        if (StringUtils.isNotNull(httpServletRequest)) {
+            Map<String, String> headers = ServletUtils.getHeaders(httpServletRequest);
+            // 传递用户信息请求头，防止丢失
+            String userId = headers.get(SecurityConstants.DETAILS_USER_ID);
+            if (StringUtils.isNotEmpty(userId)) {
+                requestTemplate.header(SecurityConstants.DETAILS_USER_ID, userId);
+            }
+            String userKey = headers.get(SecurityConstants.USER_KEY);
+            if (StringUtils.isNotEmpty(userKey)) {
+                requestTemplate.header(SecurityConstants.USER_KEY, userKey);
+            }
+            String userName = headers.get(SecurityConstants.DETAILS_USERNAME);
+            if (StringUtils.isNotEmpty(userName)) {
+                requestTemplate.header(SecurityConstants.DETAILS_USERNAME, userName);
+            }
+            String authentication = headers.get(SecurityConstants.AUTHORIZATION_HEADER);
+            if (StringUtils.isNotEmpty(authentication)) {
+                requestTemplate.header(SecurityConstants.AUTHORIZATION_HEADER, authentication);
+            }
+
+            // 配置客户端IP
+            requestTemplate.header("X-Forwarded-For", IpUtils.getIpAddr());
+        }
+    }
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/utils/DictUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/utils/DictUtils.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/utils/DictUtils.java
new file mode 100644
--- /dev/null	(date 1722076245465)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/utils/DictUtils.java	(date 1722076245465)
@@ -0,0 +1,80 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.utils;
+
+import com.alibaba.fastjson2.JSONArray;
+import leyramu.softwarecup.digEdu.common.core.constant.CacheConstants;
+import leyramu.softwarecup.digEdu.common.core.utils.SpringUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.StringUtils;
+import leyramu.softwarecup.digEdu.common.redis.service.RedisService;
+import leyramu.softwarecup.digEdu.system.api.domain.SysDictData;
+
+import java.util.Collection;
+import java.util.List;
+
+/**
+ * 字典工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+public class DictUtils {
+
+    /**
+     * 设置字典缓存
+     *
+     * @param key       参数键
+     * @param dictDatas 字典数据列表
+     */
+    public static void setDictCache(String key, List<SysDictData> dictDatas) {
+        SpringUtils.getBean(RedisService.class).setCacheObject(getCacheKey(key), dictDatas);
+    }
+
+    /**
+     * 获取字典缓存
+     *
+     * @param key 参数键
+     * @return dictDatas 字典数据列表
+     */
+    public static List<SysDictData> getDictCache(String key) {
+        JSONArray arrayCache = SpringUtils.getBean(RedisService.class).getCacheObject(getCacheKey(key));
+        if (StringUtils.isNotNull(arrayCache)) {
+            return arrayCache.toList(SysDictData.class);
+        }
+        return null;
+    }
+
+    /**
+     * 删除指定字典缓存
+     *
+     * @param key 字典键
+     */
+    public static void removeDictCache(String key) {
+        SpringUtils.getBean(RedisService.class).deleteObject(getCacheKey(key));
+    }
+
+    /**
+     * 清空字典缓存
+     */
+    public static void clearDictCache() {
+        Collection<String> keys = SpringUtils.getBean(RedisService.class).keys(CacheConstants.SYS_DICT_KEY + "*");
+        SpringUtils.getBean(RedisService.class).deleteObject(keys);
+    }
+
+    /**
+     * 设置cache key
+     *
+     * @param configKey 参数键
+     * @return 缓存键key
+     */
+    public static String getCacheKey(String configKey) {
+        return CacheConstants.SYS_DICT_KEY + configKey;
+    }
+}
Index: asc-java/asc-common/asc-common-swagger/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-swagger/pom.xml b/asc-java/asc-common/asc-common-swagger/pom.xml
new file mode 100644
--- /dev/null	(date 1726317683549)
+++ b/asc-java/asc-common/asc-common-swagger/pom.xml	(date 1726317683549)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8"?><!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
+    <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
+    <parent>
+        <groupId>leyramu.qinian</groupId>
+        <artifactId>asc-common</artifactId>
+        <relativePath>../pom.xml</relativePath>
+        <version>1.0.0</version>
+    </parent>
+
+    <!--      模块描述      -->
+    <description>Swagger 系统接口</description>
+
+    <!--      工件 ID      -->
+    <artifactId>asc-common-swagger</artifactId>
+
+    <!--      依赖      -->
+    <dependencies>
+        <!--    Spring Boot Web    -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <!--    Swagger    -->
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-swagger2</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/utils/SecurityUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/utils/SecurityUtils.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/utils/SecurityUtils.java
new file mode 100644
--- /dev/null	(date 1722054371038)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/utils/SecurityUtils.java	(date 1722054371038)
@@ -0,0 +1,119 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.utils;
+
+
+import jakarta.servlet.http.HttpServletRequest;
+import leyramu.softwarecup.digEdu.common.core.constant.SecurityConstants;
+import leyramu.softwarecup.digEdu.common.core.constant.TokenConstants;
+import leyramu.softwarecup.digEdu.common.core.context.SecurityContextHolder;
+import leyramu.softwarecup.digEdu.common.core.utils.ServletUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.StringUtils;
+import leyramu.softwarecup.digEdu.system.api.model.LoginUser;
+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
+
+import java.util.Objects;
+
+/**
+ * 权限获取工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+public class SecurityUtils {
+
+    /**
+     * 获取用户ID
+     */
+    public static Long getUserId() {
+        return SecurityContextHolder.getUserId();
+    }
+
+    /**
+     * 获取用户名称
+     */
+    public static String getUsername() {
+        return SecurityContextHolder.getUserName();
+    }
+
+    /**
+     * 获取用户key
+     */
+    public static String getUserKey() {
+        return SecurityContextHolder.getUserKey();
+    }
+
+    /**
+     * 获取登录用户信息
+     */
+    public static LoginUser getLoginUser() {
+        return SecurityContextHolder.get(SecurityConstants.LOGIN_USER, LoginUser.class);
+    }
+
+    /**
+     * 获取请求token
+     */
+    public static String getToken() {
+        return getToken(Objects.requireNonNull(ServletUtils.getRequest()));
+    }
+
+    /**
+     * 根据request获取请求token
+     */
+    public static String getToken(HttpServletRequest request) {
+        // 从header获取token标识
+        String token = request.getHeader(TokenConstants.AUTHENTICATION);
+        return replaceTokenPrefix(token);
+    }
+
+    /**
+     * 裁剪token前缀
+     */
+    public static String replaceTokenPrefix(String token) {
+        // 如果前端设置了令牌前缀，则裁剪掉前缀
+        if (StringUtils.isNotEmpty(token) && token.startsWith(TokenConstants.PREFIX)) {
+            token = token.replaceFirst(TokenConstants.PREFIX, "");
+        }
+        return token;
+    }
+
+    /**
+     * 是否为管理员
+     *
+     * @param userId 用户ID
+     * @return 结果
+     */
+    public static boolean isAdmin(Long userId) {
+        return userId != null && 1L == userId;
+    }
+
+    /**
+     * 生成BCryptPasswordEncoder密码
+     *
+     * @param password 密码
+     * @return 加密字符串
+     */
+    public static String encryptPassword(String password) {
+        BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();
+        return passwordEncoder.encode(password);
+    }
+
+    /**
+     * 判断密码是否相同
+     *
+     * @param rawPassword     真实密码
+     * @param encodedPassword 加密后字符
+     * @return 结果
+     */
+    public static boolean matchesPassword(String rawPassword, String encodedPassword) {
+        BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();
+        return passwordEncoder.matches(rawPassword, encodedPassword);
+    }
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/aspect/InnerAuthAspect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/aspect/InnerAuthAspect.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/aspect/InnerAuthAspect.java
new file mode 100644
--- /dev/null	(date 1722006801852)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/aspect/InnerAuthAspect.java	(date 1722006801852)
@@ -0,0 +1,68 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.aspect;
+
+import leyramu.softwarecup.digEdu.common.core.constant.SecurityConstants;
+import leyramu.softwarecup.digEdu.common.core.exception.InnerAuthException;
+import leyramu.softwarecup.digEdu.common.core.utils.ServletUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.StringUtils;
+import leyramu.softwarecup.digEdu.common.security.annotation.InnerAuth;
+import org.aspectj.lang.ProceedingJoinPoint;
+import org.aspectj.lang.annotation.Around;
+import org.aspectj.lang.annotation.Aspect;
+import org.springframework.core.Ordered;
+import org.springframework.stereotype.Component;
+
+import java.util.Objects;
+
+/**
+ * 内部服务调用验证处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Aspect
+@Component
+public class InnerAuthAspect implements Ordered {
+
+    /**
+     * 环绕
+     * @param point 切点
+     * @param innerAuth 注解
+     * @return Object
+     * @throws Throwable Throwable 异常
+     */
+    @Around("@annotation(innerAuth)")
+    public Object innerAround(ProceedingJoinPoint point, InnerAuth innerAuth) throws Throwable {
+        String source = Objects.requireNonNull(ServletUtils.getRequest()).getHeader(SecurityConstants.FROM_SOURCE);
+        // 内部请求验证
+        if (!StringUtils.equals(SecurityConstants.INNER, source)) {
+            throw new InnerAuthException("没有内部访问权限，不允许访问");
+        }
+
+        String userid = ServletUtils.getRequest().getHeader(SecurityConstants.DETAILS_USER_ID);
+        String username = ServletUtils.getRequest().getHeader(SecurityConstants.DETAILS_USERNAME);
+        // 用户信息验证
+        if (innerAuth.isUser() && (StringUtils.isEmpty(userid) || StringUtils.isEmpty(username))) {
+            throw new InnerAuthException("没有设置用户信息，不允许访问 ");
+        }
+        return point.proceed();
+    }
+
+    /**
+     * 确保在权限认证aop执行前执行
+     *
+     * @return int
+     */
+    @Override
+    public int getOrder() {
+        return Ordered.HIGHEST_PRECEDENCE + 1;
+    }
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/auth/AuthUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/auth/AuthUtil.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/auth/AuthUtil.java
new file mode 100644
--- /dev/null	(date 1722080706062)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/auth/AuthUtil.java	(date 1722080706062)
@@ -0,0 +1,162 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.auth;
+
+import leyramu.softwarecup.digEdu.common.security.annotation.RequiresPermissions;
+import leyramu.softwarecup.digEdu.common.security.annotation.RequiresRoles;
+import leyramu.softwarecup.digEdu.system.api.model.LoginUser;
+
+/**
+ * Token 权限验证工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class AuthUtil {
+
+    /**
+     * 底层的 AuthLogic 对象
+     */
+    public static AuthLogic authLogic = new AuthLogic();
+
+    /**
+     * 会话注销
+     */
+    public static void logout() {
+        authLogic.logout();
+    }
+
+    /**
+     * 会话注销，根据指定Token
+     *
+     * @param token 指定token
+     */
+    public static void logoutByToken(String token) {
+        authLogic.logoutByToken(token);
+    }
+
+    /**
+     * 检验当前会话是否已经登录，如未登录，则抛出异常
+     */
+    public static void checkLogin() {
+        authLogic.checkLogin();
+    }
+
+    /**
+     * 获取当前登录用户信息
+     *
+     * @param token 指定token
+     * @return 用户信息
+     */
+    public static LoginUser getLoginUser(String token) {
+        return authLogic.getLoginUser(token);
+    }
+
+    /**
+     * 验证当前用户有效期
+     *
+     * @param loginUser 用户信息
+     */
+    public static void verifyLoginUserExpire(LoginUser loginUser) {
+        authLogic.verifyLoginUserExpire(loginUser);
+    }
+
+    /**
+     * 当前账号是否含有指定角色标识, 返回true或false
+     *
+     * @param role 角色标识
+     * @return 是否含有指定角色标识
+     */
+    public static boolean hasRole(String role) {
+        return authLogic.hasRole(role);
+    }
+
+    /**
+     * 当前账号是否含有指定角色标识, 如果验证未通过，则抛出异常: NotRoleException
+     *
+     * @param role 角色标识
+     */
+    public static void checkRole(String role) {
+        authLogic.checkRole(role);
+    }
+
+    /**
+     * 根据注解传入参数鉴权, 如果验证未通过，则抛出异常: NotRoleException
+     *
+     * @param requiresRoles 角色权限注解
+     */
+    public static void checkRole(RequiresRoles requiresRoles) {
+        authLogic.checkRole(requiresRoles);
+    }
+
+    /**
+     * 当前账号是否含有指定角色标识 [指定多个，必须全部验证通过]
+     *
+     * @param roles 角色标识数组
+     */
+    public static void checkRoleAnd(String... roles) {
+        authLogic.checkRoleAnd(roles);
+    }
+
+    /**
+     * 当前账号是否含有指定角色标识 [指定多个，只要其一验证通过即可]
+     *
+     * @param roles 角色标识数组
+     */
+    public static void checkRoleOr(String... roles) {
+        authLogic.checkRoleOr(roles);
+    }
+
+    /**
+     * 当前账号是否含有指定权限, 返回true或false
+     *
+     * @param permission 权限码
+     * @return 是否含有指定权限
+     */
+    public static boolean hasPermi(String permission) {
+        return authLogic.hasPermi(permission);
+    }
+
+    /**
+     * 当前账号是否含有指定权限, 如果验证未通过，则抛出异常: NotPermissionException
+     *
+     * @param permission 权限码
+     */
+    public static void checkPermi(String permission) {
+        authLogic.checkPermi(permission);
+    }
+
+    /**
+     * 根据注解传入参数鉴权, 如果验证未通过，则抛出异常: NotPermissionException
+     *
+     * @param requiresPermissions 权限注解
+     */
+    public static void checkPermi(RequiresPermissions requiresPermissions) {
+        authLogic.checkPermi(requiresPermissions);
+    }
+
+    /**
+     * 当前账号是否含有指定权限 [指定多个，必须全部验证通过]
+     *
+     * @param permissions 权限码数组
+     */
+    public static void checkPermiAnd(String... permissions) {
+        authLogic.checkPermiAnd(permissions);
+    }
+
+    /**
+     * 当前账号是否含有指定权限 [指定多个，只要其一验证通过即可]
+     *
+     * @param permissions 权限码数组
+     */
+    public static void checkPermiOr(String... permissions) {
+        authLogic.checkPermiOr(permissions);
+    }
+}
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Encoding\">\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-api/asc-api-domain/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-api/asc-api-domain/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-api/asc-api-system/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-api/asc-api-system/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-api/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-api/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-cloud/asc-admin-cloud/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-cloud/asc-admin-cloud/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-cloud/asc-cloud-register/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-cloud/asc-cloud-register/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-cloud/asc-cloud-seata/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-cloud/asc-cloud-seata/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-cloud/asc-cloud-sentinel/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-cloud/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-cloud/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-common/asc-common-utils/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-common/asc-common-utils/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-common/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-common/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-gateway/asc-gateway-api/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-gateway/asc-gateway-api/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-gateway/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-gateway/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-alert-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-alert-service/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-algorithm-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-algorithm-service/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-email-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-email-service/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-fishRaft-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-fishRaft-service/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-raftMonitor-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-raftMonitor-service/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-user-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-user-service/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-weather-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/asc-weather-service/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-service/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-visual/asc-visual-monitor/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-visual/asc-visual-monitor/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-visual/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/asc-visual/src/main/resources\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/src/main/java\" charset=\"UTF-8\" />\r\n    <file url=\"file://$PROJECT_DIR$/asc-java/src/main/resources\" charset=\"UTF-8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
--- a/.idea/encodings.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/.idea/encodings.xml	(date 1726317697228)
@@ -16,6 +16,27 @@
     <file url="file://$PROJECT_DIR$/asc-java/asc-cloud/asc-cloud-sentinel/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/asc-java/asc-cloud/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/asc-java/asc-cloud/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-base/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-base/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-core/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-core/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-datascope/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-datascope/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-datasource/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-datasource/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-i18n/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-i18n/src/main/java/leyramu.qinian.asc.common.i18n" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-i18n/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-log/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-log/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-mail/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-mail/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-redis/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-redis/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-security/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-security/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-swagger/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-swagger/src/main/resources" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-utils/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/asc-java/asc-common/asc-common-utils/src/main/resources" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/asc-java/asc-common/src/main/java" charset="UTF-8" />
@@ -34,6 +55,8 @@
     <file url="file://$PROJECT_DIR$/asc-java/asc-service/asc-fishRaft-service/src/main/resources" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/asc-java/asc-service/asc-raftMonitor-service/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/asc-java/asc-service/asc-raftMonitor-service/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-service/asc-service-system/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/asc-java/asc-service/asc-service-system/src/main/resources" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/asc-java/asc-service/asc-user-service/src/main/java" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/asc-java/asc-service/asc-user-service/src/main/resources" charset="UTF-8" />
     <file url="file://$PROJECT_DIR$/asc-java/asc-service/asc-weather-service/src/main/java" charset="UTF-8" />
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/auth/AuthLogic.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/auth/AuthLogic.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/auth/AuthLogic.java
new file mode 100644
--- /dev/null	(date 1725703511428)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/auth/AuthLogic.java	(date 1725703511428)
@@ -0,0 +1,331 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.auth;
+
+import leyramu.softwarecup.digEdu.common.core.context.SecurityContextHolder;
+import leyramu.softwarecup.digEdu.common.core.exception.auth.NotLoginException;
+import leyramu.softwarecup.digEdu.common.core.exception.auth.NotPermissionException;
+import leyramu.softwarecup.digEdu.common.core.exception.auth.NotRoleException;
+import leyramu.softwarecup.digEdu.common.core.utils.SpringUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.StringUtils;
+import leyramu.softwarecup.digEdu.common.security.annotation.Logical;
+import leyramu.softwarecup.digEdu.common.security.annotation.RequiresPermissions;
+import leyramu.softwarecup.digEdu.common.security.annotation.RequiresRoles;
+import leyramu.softwarecup.digEdu.common.security.service.TokenService;
+import leyramu.softwarecup.digEdu.common.security.utils.SecurityUtils;
+import leyramu.softwarecup.digEdu.system.api.model.LoginUser;
+import org.springframework.util.PatternMatchUtils;
+
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Token 权限验证，逻辑实现类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class AuthLogic {
+
+    /**
+     * 所有权限标识
+     */
+    private static final String ALL_PERMISSION = "*:*:*";
+
+    /**
+     * 管理员角色权限标识
+     */
+    private static final String SUPER_ADMIN = "admin";
+
+    /**
+     * 令牌服务
+     */
+    public TokenService tokenService = SpringUtils.getBean(TokenService.class);
+
+    /**
+     * 会话注销
+     */
+    public void logout() {
+        String token = SecurityUtils.getToken();
+        if (token == null) {
+            return;
+        }
+        logoutByToken(token);
+    }
+
+    /**
+     * 会话注销，根据指定Token
+     */
+    public void logoutByToken(String token) {
+        tokenService.delLoginUser(token);
+    }
+
+    /**
+     * 检验用户是否已经登录，如未登录，则抛出异常
+     */
+    public void checkLogin() {
+        getLoginUser();
+    }
+
+    /**
+     * 获取当前用户缓存信息, 如果未登录，则抛出异常
+     *
+     * @return 用户缓存信息
+     */
+    public LoginUser getLoginUser() {
+        String token = SecurityUtils.getToken();
+        if (token == null) {
+            throw new NotLoginException("未提供token");
+        }
+        LoginUser loginUser = SecurityUtils.getLoginUser();
+        if (loginUser == null) {
+            throw new NotLoginException("无效的token");
+        }
+        return loginUser;
+    }
+
+    /**
+     * 获取当前用户缓存信息, 如果未登录，则抛出异常
+     *
+     * @param token 前端传递的认证信息
+     * @return 用户缓存信息
+     */
+    public LoginUser getLoginUser(String token) {
+        return tokenService.getLoginUser(token);
+    }
+
+    /**
+     * 验证当前用户有效期, 如果相差不足120分钟，自动刷新缓存
+     *
+     * @param loginUser 当前用户信息
+     */
+    public void verifyLoginUserExpire(LoginUser loginUser) {
+        tokenService.verifyToken(loginUser);
+    }
+
+    /**
+     * 验证用户是否具备某权限
+     *
+     * @param permission 权限字符串
+     * @return 用户是否具备某权限
+     */
+    public boolean hasPermi(String permission) {
+        return hasPermi(getPermiList(), permission);
+    }
+
+    /**
+     * 验证用户是否具备某权限, 如果验证未通过，则抛出异常: NotPermissionException
+     *
+     * @param permission 权限字符串
+     */
+    public void checkPermi(String permission) {
+        if (!hasPermi(getPermiList(), permission)) {
+            throw new NotPermissionException(permission);
+        }
+    }
+
+    /**
+     * 根据注解(@RequiresPermissions)鉴权, 如果验证未通过，则抛出异常: NotPermissionException
+     *
+     * @param requiresPermissions 注解对象
+     */
+    public void checkPermi(RequiresPermissions requiresPermissions) {
+        SecurityContextHolder.setPermission(StringUtils.join(requiresPermissions.value(), ","));
+        if (requiresPermissions.logical() == Logical.AND) {
+            checkPermiAnd(requiresPermissions.value());
+        } else {
+            checkPermiOr(requiresPermissions.value());
+        }
+    }
+
+    /**
+     * 验证用户是否含有指定权限，必须全部拥有
+     *
+     * @param permissions 权限列表
+     */
+    public void checkPermiAnd(String... permissions) {
+        Set<String> permissionList = getPermiList();
+        for (String permission : permissions) {
+            if (!hasPermi(permissionList, permission)) {
+                throw new NotPermissionException(permission);
+            }
+        }
+    }
+
+    /**
+     * 验证用户是否含有指定权限，只需包含其中一个
+     *
+     * @param permissions 权限码数组
+     */
+    public void checkPermiOr(String... permissions) {
+        Set<String> permissionList = getPermiList();
+        for (String permission : permissions) {
+            if (hasPermi(permissionList, permission)) {
+                return;
+            }
+        }
+        if (permissions.length > 0) {
+            throw new NotPermissionException(permissions);
+        }
+    }
+
+    /**
+     * 判断用户是否拥有某个角色
+     *
+     * @param role 角色标识
+     * @return 用户是否具备某角色
+     */
+    public boolean hasRole(String role) {
+        return hasRole(getRoleList(), role);
+    }
+
+    /**
+     * 判断用户是否拥有某个角色, 如果验证未通过，则抛出异常: NotRoleException
+     *
+     * @param role 角色标识
+     */
+    public void checkRole(String role) {
+        if (!hasRole(role)) {
+            throw new NotRoleException(role);
+        }
+    }
+
+    /**
+     * 根据注解(@RequiresRoles)鉴权
+     *
+     * @param requiresRoles 注解对象
+     */
+    public void checkRole(RequiresRoles requiresRoles) {
+        if (requiresRoles.logical() == Logical.AND) {
+            checkRoleAnd(requiresRoles.value());
+        } else {
+            checkRoleOr(requiresRoles.value());
+        }
+    }
+
+    /**
+     * 验证用户是否含有指定角色，必须全部拥有
+     *
+     * @param roles 角色标识数组
+     */
+    public void checkRoleAnd(String... roles) {
+        Set<String> roleList = getRoleList();
+        for (String role : roles) {
+            if (!hasRole(roleList, role)) {
+                throw new NotRoleException(role);
+            }
+        }
+    }
+
+    /**
+     * 验证用户是否含有指定角色，只需包含其中一个
+     *
+     * @param roles 角色标识数组
+     */
+    public void checkRoleOr(String... roles) {
+        Set<String> roleList = getRoleList();
+        for (String role : roles) {
+            if (hasRole(roleList, role)) {
+                return;
+            }
+        }
+        if (roles.length > 0) {
+            throw new NotRoleException(roles);
+        }
+    }
+
+    /**
+     * 根据注解(@RequiresLogin)鉴权
+     */
+    public void checkByAnnotation() {
+        this.checkLogin();
+    }
+
+    /**
+     * 根据注解(@RequiresRoles)鉴权
+     *
+     * @param at 注解对象
+     */
+    public void checkByAnnotation(RequiresRoles at) {
+        String[] roleArray = at.value();
+        if (at.logical() == Logical.AND) {
+            this.checkRoleAnd(roleArray);
+        } else {
+            this.checkRoleOr(roleArray);
+        }
+    }
+
+    /**
+     * 根据注解(@RequiresPermissions)鉴权
+     *
+     * @param at 注解对象
+     */
+    public void checkByAnnotation(RequiresPermissions at) {
+        String[] permissionArray = at.value();
+        if (at.logical() == Logical.AND) {
+            this.checkPermiAnd(permissionArray);
+        } else {
+            this.checkPermiOr(permissionArray);
+        }
+    }
+
+    /**
+     * 获取当前账号的角色列表
+     *
+     * @return 角色列表
+     */
+    public Set<String> getRoleList() {
+        try {
+            LoginUser loginUser = getLoginUser();
+            return loginUser.getRoles();
+        } catch (Exception e) {
+            return new HashSet<>();
+        }
+    }
+
+    /**
+     * 获取当前账号的权限列表
+     *
+     * @return 权限列表
+     */
+    public Set<String> getPermiList() {
+        try {
+            LoginUser loginUser = getLoginUser();
+            return loginUser.getPermissions();
+        } catch (Exception e) {
+            return new HashSet<>();
+        }
+    }
+
+    /**
+     * 判断是否包含权限
+     *
+     * @param authorities 权限列表
+     * @param permission  权限字符串
+     * @return 用户是否具备某权限
+     */
+    public boolean hasPermi(Collection<String> authorities, String permission) {
+        return authorities.stream().filter(StringUtils::hasText)
+                .anyMatch(x -> ALL_PERMISSION.equals(x) || PatternMatchUtils.simpleMatch(x, permission));
+    }
+
+    /**
+     * 判断是否包含角色
+     *
+     * @param roles 角色列表
+     * @param role  角色
+     * @return 用户是否具备某角色权限
+     */
+    public boolean hasRole(Collection<String> roles, String role) {
+        return roles.stream().filter(StringUtils::hasText)
+                .anyMatch(x -> SUPER_ADMIN.equals(x) || PatternMatchUtils.simpleMatch(x, role));
+    }
+}
Index: asc-java/asc-common/asc-common-redis/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-redis/pom.xml b/asc-java/asc-common/asc-common-redis/pom.xml
new file mode 100644
--- /dev/null	(date 1726316436581)
+++ b/asc-java/asc-common/asc-common-redis/pom.xml	(date 1726316436581)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8"?><!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
+    <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
+    <parent>
+        <groupId>leyramu.qinian</groupId>
+        <artifactId>asc-common</artifactId>
+        <relativePath>../pom.xml</relativePath>
+        <version>1.0.0</version>
+    </parent>
+
+    <!--      模块描述      -->
+    <description>Redis 缓存服务</description>
+
+    <!--      工件 ID      -->
+    <artifactId>asc-common-redis</artifactId>
+
+    <!--      依赖      -->
+    <dependencies>
+        <!--    Spring Boot Redis    -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+        </dependency>
+
+        <!--    Asc Common Core    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-core</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-cloud/asc-cloud-register/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#\r\n# Copyright (c) 2024 Leyramu. All rights reserved.\r\n# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.\r\n# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.\r\n# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.\r\n# By using this project, users acknowledge and agree to abide by these terms and conditions.\r\n#\r\n\r\n\r\njasypt.encryptor.algorithm=PBEWithMD5AndDES\r\njasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator\r\njasypt.encryptor.password=@JASYPT-ENCRYPTOR-PASSWORD@\r\n\r\n\r\nserver.servlet.contextPath=/nacos\r\nserver.error.include-message=ALWAYS\r\nserver.port=${SERVER_PORT:8848}\r\nserver.undertow.threads.io=16\r\nserver.undertow.threads.worker=256\r\nserver.undertow.buffer-size=1024\r\nserver.undertow.direct-buffers=true\r\nserver.undertow.accesslog.enabled=true\r\nserver.tomcat.accesslog.enabled=true\r\nserver.tomcat.accesslog.max-days=30\r\nserver.tomcat.accesslog.pattern=%h %l %u %t \"%r\" %s %b %D %{User-Agent}i %{Request-Source}i\r\nserver.tomcat.basedir=file:.\r\nserver.ssl.enabled=@SSL-ENABLED@\r\nserver.ssl.key-store=classpath:scg-keystore.p12\r\nserver.ssl.key-alias=${spring.application.name}\r\nserver.ssl.key-store-type=PKCS12\r\nserver.ssl.key-store-password=@DATASOURCE-PASSWORD-NACOS@\r\nserver.ssl.key-password=@DATASOURCE-PASSWORD-NACOS@\r\nserver.http2.enabled=@SSL-ENABLED@\r\nserver.shutdown=graceful\r\n\r\nspring.application.name=@pom.artifactId@\r\nspring.profiles.active=@PROFILE-ACTIVE@\r\nspring.cloud.compatibility-verifier.enabled=false\r\nspring.sql.init.platform=@DATASOURCE-PLATFORM@\r\nspring.liquibase.enabled=true\r\nspring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml\r\nspring.liquibase.user=@DATASOURCE-USERNAME-NACOS@\r\nspring.liquibase.password=@DATASOURCE-PASSWORD-NACOS@\r\nspring.liquibase.url=jdbc:@DATASOURCE-PLATFORM@://@DATASOURCE-HOST@:@DATASOURCE-PORT@/@DATASOURCE-DB-NACOS@?@DATASOURCE-PARAM-NACOS@\r\n\r\ndb.num=1\r\ndb.url.0=jdbc:@DATASOURCE-PLATFORM@://@DATASOURCE-HOST@:@DATASOURCE-PORT@/@DATASOURCE-DB-NACOS@?@DATASOURCE-PARAM-NACOS@\r\ndb.user=@DATASOURCE-USERNAME-NACOS@\r\ndb.password=@DATASOURCE-PASSWORD-NACOS@\r\ndb.pool.config.min-idle=2\r\ndb.pool.config.idle-timeout=10000\r\ndb.pool.config.connection-timeout=30000\r\ndb.pool.config.validation-timeout=10000\r\ndb.pool.config.maximum-pool-size=20\r\ndb.pool.config.driver-class-name=@DATASOURCE-DRIVER-CLASS-NAME@\r\n\r\nnacos.config.push.maxRetryTime=50\r\nnacos.naming.empty-service.auto-clean=true\r\nnacos.naming.empty-service.clean.initial-delay-ms=50000\r\nnacos.naming.empty-service.clean.period-time-ms=30000\r\nnacos.security.ignore.urls=/,/error,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.ico,/console-ui/public/**,/v1/auth/**,/v1/console/health/**,/actuator/**,/v1/console/server/**\r\nnacos.core.auth.system.type=nacos\r\nnacos.core.auth.enabled=true\r\nnacos.core.auth.caching.enabled=true\r\nnacos.core.auth.enable.userAgentAuthWhite=false\r\nnacos.core.auth.server.identity.key=nacos\r\nnacos.core.auth.server.identity.value=digEdu_Miraitowa_zcx\r\nnacos.core.auth.plugin.nacos.token.cache.enable=true\r\nnacos.core.auth.plugin.nacos.token.expire.seconds=18000\r\nnacos.core.auth.plugin.nacos.token.secret.key=TGV5cmFtdV9kaWdFZHVfQXV0aG9yQnlfTWlyYWl0b3dhX3pjeA==\r\nnacos.core.ssl.enabled=@SSL-ENABLED@\r\nnacos.core.ssl.key-store.type=PKCS12\r\nnacos.core.ssl.key-store.path=classpath:scg-keystore.p12\r\nnacos.core.ssl.key-store.password=@DATASOURCE-PASSWORD-NACOS@\r\nnacos.istio.mcp.server.enabled=false\r\n\r\nmanagement.metrics.export.elastic.enabled=false\r\nmanagement.metrics.export.influx.enabled=false\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/asc-java/asc-cloud/asc-cloud-register/src/main/resources/application.properties b/asc-java/asc-cloud/asc-cloud-register/src/main/resources/application.properties
--- a/asc-java/asc-cloud/asc-cloud-register/src/main/resources/application.properties	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-cloud/asc-cloud-register/src/main/resources/application.properties	(date 1725780712844)
@@ -11,7 +11,6 @@
 jasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator
 jasypt.encryptor.password=@JASYPT-ENCRYPTOR-PASSWORD@
 
-
 server.servlet.contextPath=/nacos
 server.error.include-message=ALWAYS
 server.port=${SERVER_PORT:8848}
Index: doc/sql/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>> 1. 初始化数据库\r\n> <br/> 运行 mysql-inti.sql\r\n> 2. 导入数据库文件\r\n> <br/> 运行 asc_nacos_config.sql\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/doc/sql/README.md b/doc/sql/README.md
--- a/doc/sql/README.md	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/doc/sql/README.md	(date 1725779960296)
@@ -1,4 +1,4 @@
 > 1. 初始化数据库
-> <br/> 运行 mysql-inti.sql
+> <br/> 运行 mysql-init.sql
 > 2. 导入数据库文件
 > <br/> 运行 asc_nacos_config.sql
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/EmailDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/EmailDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/EmailDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/EmailDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/AlertType.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/AlertType.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/AlertType.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/AlertType.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Admin.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/Admin.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Admin.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/Admin.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/UpdatePWDDTO.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/UpdatePWDDTO.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/UpdatePWDDTO.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/UpdatePWDDTO.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/vo/GetRaftVo.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/vo/GetRaftVo.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/vo/GetRaftVo.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/vo/GetRaftVo.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/vo/UserLoginVO.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/vo/UserLoginVO.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/vo/UserLoginVO.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/vo/UserLoginVO.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Location.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/Location.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/Location.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/Location.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/RecognitionInfo.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/RecognitionInfo.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/RecognitionInfo.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/RecognitionInfo.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/FishRaftPoint.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/FishRaftPoint.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/FishRaftPoint.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/FishRaftPoint.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/IdentityCard.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/IdentityCard.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/IdentityCard.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/IdentityCard.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/FishRaftMonitor.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/FishRaftMonitor.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/FishRaftMonitor.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/FishRaftMonitor.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/BusinessLicense.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/BusinessLicense.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/BusinessLicense.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/BusinessLicense.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/WeatherMonitor.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/WeatherMonitor.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/pojo/WeatherMonitor.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/pojo/WeatherMonitor.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/admin/AdminLoginFormDTO.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/admin/AdminLoginFormDTO.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/admin/AdminLoginFormDTO.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/admin/AdminLoginFormDTO.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/weather/WeatherLoopAddDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/weather/WeatherLoopAddDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/weather/WeatherLoopAddDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/weather/WeatherLoopAddDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/email/SendSimpleEmailDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/email/SendSimpleEmailDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/email/SendSimpleEmailDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/email/SendSimpleEmailDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/email/SendVerificationCodeDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/email/SendVerificationCodeDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/email/SendVerificationCodeDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/email/SendVerificationCodeDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/email/SendEmailWithAttachmentDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/email/SendEmailWithAttachmentDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/email/SendEmailWithAttachmentDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/email/SendEmailWithAttachmentDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/alert/AddAlertTypeDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/alert/AddAlertTypeDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/alert/AddAlertTypeDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/alert/AddAlertTypeDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/identityCard/AddIdentityCardDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/identityCard/AddIdentityCardDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/identityCard/AddIdentityCardDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/identityCard/AddIdentityCardDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishingPlatoon/FishingPlatoonLoginFormDTO.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishingPlatoon/FishingPlatoonLoginFormDTO.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishingPlatoon/FishingPlatoonLoginFormDTO.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishingPlatoon/FishingPlatoonLoginFormDTO.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishermen/FishermenRegisterFormDTO.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishermen/FishermenRegisterFormDTO.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishermen/FishermenRegisterFormDTO.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishermen/FishermenRegisterFormDTO.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/raftMonitor/AddRaftMonitor.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/raftMonitor/AddRaftMonitor.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/raftMonitor/AddRaftMonitor.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/raftMonitor/AddRaftMonitor.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishRaft/PyRaftDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishRaft/PyRaftDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishRaft/PyRaftDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishRaft/PyRaftDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishermen/FishermenLoginFormDTO.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishermen/FishermenLoginFormDTO.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishermen/FishermenLoginFormDTO.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishermen/FishermenLoginFormDTO.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishRaft/AddFishRaftDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishRaft/AddFishRaftDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishRaft/AddFishRaftDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishRaft/AddFishRaftDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishRaft/AddLocationDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishRaft/AddLocationDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishRaft/AddLocationDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishRaft/AddLocationDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/businessLicense/AddBusinessLicenseDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/businessLicense/AddBusinessLicenseDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/businessLicense/AddBusinessLicenseDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/businessLicense/AddBusinessLicenseDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishingPlatoon/FishingPlatoonRegisterFormDTO.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishingPlatoon/FishingPlatoonRegisterFormDTO.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishingPlatoon/FishingPlatoonRegisterFormDTO.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishingPlatoon/FishingPlatoonRegisterFormDTO.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishingPlatoon/SelectByInvitationKeyDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishingPlatoon/SelectByInvitationKeyDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/fishingPlatoon/SelectByInvitationKeyDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/fishingPlatoon/SelectByInvitationKeyDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/email/code/GetCodeDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/email/code/GetCodeDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/email/code/GetCodeDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/email/code/GetCodeDto.java
diff --git a/asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/email/code/CheckCodeDto.java b/asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/email/code/CheckCodeDto.java
rename from asc-java/asc-api/asc-api-domain/src/main/java/org/qinian/domain/dto/email/code/CheckCodeDto.java
rename to asc-java/asc-api/asc-api-domain/src/main/java/leyramu/qinian/domain/dto/email/code/CheckCodeDto.java
diff --git a/doc/sql/mysql-inti.sql b/doc/sql/mysql-init.sql
rename from doc/sql/mysql-inti.sql
rename to doc/sql/mysql-init.sql
