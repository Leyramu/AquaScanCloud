Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/asc-java/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_22\" default=\"true\" project-jdk-name=\"AquaScanCloud-22\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/.idea/misc.xml	(date 1728568999995)
@@ -5,10 +5,11 @@
     <option name="originalFiles">
       <list>
         <option value="$PROJECT_DIR$/asc-java/pom.xml" />
+        <option value="$PROJECT_DIR$/asc-java/asc-gateway/asc-gateway-api/pom.xml" />
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="AquaScanCloud-22" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="22" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
-</project>
\ No newline at end of file
+</project>
Index: asc-java/asc-gateway/asc-gateway-api/src/main/java/org/qinian/AscApiGatewayApplication.java
===================================================================
diff --git a/asc-java/asc-gateway/asc-gateway-api/src/main/java/org/qinian/AscApiGatewayApplication.java b/asc-java/asc-gateway/asc-gateway-api/src/main/java/org/qinian/AscApiGatewayApplication.java
deleted file mode 100644
--- a/asc-java/asc-gateway/asc-gateway-api/src/main/java/org/qinian/AscApiGatewayApplication.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ /dev/null	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
@@ -1,20 +0,0 @@
-package org.qinian;
-
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
-import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
-
-@SpringBootApplication(exclude = {DataSourceAutoConfiguration.class})
-@EnableDiscoveryClient
-public class AscApiGatewayApplication {
-
-    /**
-     * 启动 API 网关 服务
-     *
-     * @param args 命令行参数
-     */
-    public static void main(String[] args) {
-        SpringApplication.run(AscApiGatewayApplication.class, args);
-    }
-}
Index: asc-java/asc-gateway/asc-gateway-api/src/main/resources/bootstrap.yaml
===================================================================
diff --git a/asc-java/asc-gateway/asc-gateway-api/src/main/resources/bootstrap.yaml b/asc-java/asc-gateway/asc-gateway-api/src/main/resources/bootstrap.yaml
deleted file mode 100644
--- a/asc-java/asc-gateway/asc-gateway-api/src/main/resources/bootstrap.yaml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ /dev/null	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
@@ -1,86 +0,0 @@
-server:
-  port: 8080
-
-spring:
-  data:
-    redis:
-      host: localhost
-      port: 6379
-      password: 123456
-  main:
-    web-application-type: reactive
-
-  application:
-    name: gateway
-  cloud:
-    nacos:
-      server-addr: localhost:8848
-      config:
-        file-extension: yaml # ⽂件后缀名
-        shared-configs: # 共享配置
-          - dataId: shared-rabbitmq.yaml # 共享mq配置
-          - dataId: shared-admin.yaml
-    sentinel:
-      transport:
-        dashboard: localhost:8858
-    gateway:
-      globalcors:
-        cors-configurations:
-          '[/**]':
-            allowed-origins: 'http://localhost:8081'
-            allowed-methods: '*'
-            allowed-headers: '*'
-            allow-credentials: true
-            max-age: 3600
-      routes:
-        - id: alert
-          uri: lb://alert-service
-#          filters:
-#            - PrefixPath=/api
-          predicates:
-            - Path=/alert-info/**,/alert-type/**
-
-        - id: algorithm
-          uri: lb://algorithm-service
-#          filters:
-#            - PrefixPath=/api
-          predicates:
-            - Path=/algorithm/**, /recognition-info/**
-
-        - id: email
-          uri: lb://email-service
-#          filters:
-#            - PrefixPath=/api
-          predicates:
-            - Path=/code/**, /email/**
-
-        - id: fishRaft
-          uri: lb://fishRaft-service
-#          filters:
-#            - PrefixPath=/api
-          predicates:
-            - Path=/fish-raft-point/**,/location/**
-
-        - id: raftMonitor
-          uri: lb://raftMonitor-service
-#          filters:
-#            - PrefixPath=/api
-          predicates:
-            - Path=/fish-raft-monitor/**
-
-        - id: user
-          uri: lb://user-service
-#          filters:
-#            - PrefixPath=/api
-          predicates:
-            - Path=/admin/**, /business-license/**, /fishermen/**, /fishing-platoon/**, /identity-card/**
-
-        - id: weather
-          uri: lb://weather-service
-#          filters:
-#            - PrefixPath=/api
-          predicates:
-            - Path=/weather-monitor/**
-
-
-
Index: asc-java/asc-gateway/asc-gateway-api/src/main/java/org/qinian/filter/AuthGlobalFilter.java
===================================================================
diff --git a/asc-java/asc-gateway/asc-gateway-api/src/main/java/org/qinian/filter/AuthGlobalFilter.java b/asc-java/asc-gateway/asc-gateway-api/src/main/java/org/qinian/filter/AuthGlobalFilter.java
deleted file mode 100644
--- a/asc-java/asc-gateway/asc-gateway-api/src/main/java/org/qinian/filter/AuthGlobalFilter.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ /dev/null	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
@@ -1,90 +0,0 @@
-package org.qinian.filter;
-
-import lombok.RequiredArgsConstructor;
-import org.qinian.exception.UnauthorizedException;
-import org.qinian.utils.CollUtils;
-import org.qinian.utils.JwtTool;
-import org.springframework.cloud.gateway.filter.GatewayFilterChain;
-import org.springframework.cloud.gateway.filter.GlobalFilter;
-import org.springframework.core.Ordered;
-import org.springframework.http.server.reactive.ServerHttpRequest;
-import org.springframework.http.server.reactive.ServerHttpResponse;
-import org.springframework.stereotype.Component;
-import org.springframework.util.AntPathMatcher;
-import org.springframework.web.server.ServerWebExchange;
-import reactor.core.publisher.Mono;
-
-import java.util.Arrays;
-import java.util.List;
-
-@Component
-@RequiredArgsConstructor
-public class AuthGlobalFilter implements GlobalFilter, Ordered {
-    public final String prefixPath = "";
-
-    public static final List<String> excludePaths = Arrays.asList(
-            "/code/*",
-            "/email/*",
-            "/fishermen/login",
-            "/fishermen/register",
-            "/fishermen/select",
-            "/admin/login",
-            "/admin/register",
-            "/fishing-platoon/login",
-            "/fishing-platoon/register",
-            "/fishing-platoon/select",
-            "/fishing-platoon/select-by-ik"
-    );
-
-    private final JwtTool jwtTool;
-    private final AntPathMatcher antPathMatcher = new AntPathMatcher();
-
-    @Override
-    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
-        // 1. 获取 Request
-        ServerHttpRequest request = exchange.getRequest();
-        // 2. 判断是否不需要拦截
-        if (isExclude(request.getPath().toString())) {
-            //  ⽆需拦截，直接放⾏
-            return chain.filter(exchange);
-        }
-        // 3. 获取请求头中的 token
-        String token = null;
-        List<String> headers = request.getHeaders().get("token");
-        if (!CollUtils.isEmpty(headers)) {
-            token = headers.get(0);
-        }
-        // 4. 校验并解析 token
-        Long userId = null;
-        try {
-            userId = jwtTool.parseToken(token);
-        } catch (UnauthorizedException e) {
-            // 如果⽆效，拦截
-            ServerHttpResponse response = exchange.getResponse();
-            response.setRawStatusCode(401);
-            return response.setComplete();
-        }
-
-        // 5. 如果有效，传递⽤⼾信息
-        String userInfo = userId.toString();
-        ServerWebExchange ex = exchange.mutate()
-                .request(b -> b.header("user-info", userInfo)).build();
-
-        // 6. 放⾏
-        return chain.filter(ex);
-    }
-
-    private boolean isExclude(String antPath) {
-        for (String pathPattern : excludePaths) {
-            if (antPathMatcher.match(prefixPath + pathPattern, antPath)) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    @Override
-    public int getOrder() {
-        return 0;
-    }
-}
Index: asc-java/asc-service/asc-algorithm-service/src/main/main.iml
===================================================================
diff --git a/asc-java/asc-service/asc-algorithm-service/src/main/main.iml b/asc-java/asc-service/asc-algorithm-service/src/main/main.iml
deleted file mode 100644
--- a/asc-java/asc-service/asc-algorithm-service/src/main/main.iml	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ /dev/null	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/java" isTestSource="false" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="module" module-name="asc-domain-api" />
-    <orderEntry type="module" module-name="asc-common" />
-  </component>
-</module>
\ No newline at end of file
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/interceptor/HeaderInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/interceptor/HeaderInterceptor.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/interceptor/HeaderInterceptor.java
new file mode 100644
--- /dev/null	(date 1722080706059)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/interceptor/HeaderInterceptor.java	(date 1722080706059)
@@ -0,0 +1,79 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.interceptor;
+
+import leyramu.softwarecup.digEdu.common.security.auth.AuthUtil;
+import leyramu.softwarecup.digEdu.common.security.utils.SecurityUtils;
+import jakarta.annotation.Nonnull;
+import jakarta.servlet.http.HttpServletRequest;
+import jakarta.servlet.http.HttpServletResponse;
+import leyramu.softwarecup.digEdu.common.core.constant.SecurityConstants;
+import leyramu.softwarecup.digEdu.common.core.context.SecurityContextHolder;
+import leyramu.softwarecup.digEdu.common.core.utils.ServletUtils;
+import leyramu.softwarecup.digEdu.common.core.utils.StringUtils;
+import leyramu.softwarecup.digEdu.system.api.model.LoginUser;
+import org.springframework.web.method.HandlerMethod;
+import org.springframework.web.servlet.AsyncHandlerInterceptor;
+
+/**
+ * 自定义请求头拦截器，将Header数据封装到线程变量中方便获取
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+public class HeaderInterceptor implements AsyncHandlerInterceptor {
+
+    /**
+     * 拦截请求
+     * @param request 请求
+     * @param response 响应
+     * @param handler 处理器
+     * @return 是否继续执行
+     */
+    @Override
+    public boolean preHandle(
+            @Nonnull HttpServletRequest request,
+            @Nonnull HttpServletResponse response,
+            @Nonnull Object handler) {
+        if (!(handler instanceof HandlerMethod)) {
+            return true;
+        }
+
+        SecurityContextHolder.setUserId(ServletUtils.getHeader(request, SecurityConstants.DETAILS_USER_ID));
+        SecurityContextHolder.setUserName(ServletUtils.getHeader(request, SecurityConstants.DETAILS_USERNAME));
+        SecurityContextHolder.setUserKey(ServletUtils.getHeader(request, SecurityConstants.USER_KEY));
+
+        String token = SecurityUtils.getToken();
+        if (StringUtils.isNotEmpty(token)) {
+            LoginUser loginUser = AuthUtil.getLoginUser(token);
+            if (StringUtils.isNotNull(loginUser)) {
+                AuthUtil.verifyLoginUserExpire(loginUser);
+                SecurityContextHolder.set(SecurityConstants.LOGIN_USER, loginUser);
+            }
+        }
+        return true;
+    }
+
+    /**
+     * 请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
+     * @param request 请求
+     * @param response 响应
+     * @param handler 处理器
+     * @param ex 异常
+     */
+    @Override
+    public void afterCompletion(
+            @Nonnull HttpServletRequest request,
+            @Nonnull HttpServletResponse response,
+            @Nonnull Object handler,
+            Exception ex) {
+        SecurityContextHolder.remove();
+    }
+}
Index: asc-java/asc-common/asc-common-security/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-security/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1726315403886)
+++ b/asc-java/asc-common/asc-common-security/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1726315403886)
@@ -0,0 +1,13 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.qinian.asc.common.security.config.WebMvcConfig
+leyramu.qinian.asc.common.security.service.TokenService
+leyramu.qinian.asc.common.security.aspect.PreAuthorizeAspect
+leyramu.qinian.asc.common.security.aspect.InnerAuthAspect
+leyramu.qinian.asc.common.security.handler.GlobalExceptionHandler
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/Logical.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/Logical.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/Logical.java
new file mode 100644
--- /dev/null	(date 1722006801883)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/Logical.java	(date 1722006801883)
@@ -0,0 +1,29 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.annotation;
+
+/**
+ * 权限注解的验证模式
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public enum Logical {
+
+    /**
+     * 必须具有所有的元素
+     */
+    AND,
+
+    /**
+     * 只需具有其中一个元素
+     */
+    OR
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/InnerAuth.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/InnerAuth.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/InnerAuth.java
new file mode 100644
--- /dev/null	(date 1722006801880)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/InnerAuth.java	(date 1722006801880)
@@ -0,0 +1,29 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.annotation;
+
+import java.lang.annotation.*;
+
+/**
+ * 内部认证注解
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Target(ElementType.METHOD)
+@Retention(RetentionPolicy.RUNTIME)
+@Documented
+public @interface InnerAuth {
+
+    /**
+     * 是否校验用户信息
+     */
+    boolean isUser() default false;
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresLogin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresLogin.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresLogin.java
new file mode 100644
--- /dev/null	(date 1721798579709)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresLogin.java	(date 1721798579709)
@@ -0,0 +1,26 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.annotation;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * 登录认证：只有登录之后才能进入该方法
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Retention(RetentionPolicy.RUNTIME)
+@Target({ElementType.METHOD, ElementType.TYPE})
+public @interface RequiresLogin {
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresRoles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresRoles.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresRoles.java
new file mode 100644
--- /dev/null	(date 1722006801845)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresRoles.java	(date 1722006801845)
@@ -0,0 +1,36 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.annotation;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * 角色认证：必须具有指定角色标识才能进入该方法
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Retention(RetentionPolicy.RUNTIME)
+@Target({ElementType.METHOD, ElementType.TYPE})
+public @interface RequiresRoles {
+
+    /**
+     * 需要校验的角色标识
+     */
+    String[] value() default {};
+
+    /**
+     * 验证逻辑：AND | OR，默认AND
+     */
+    Logical logical() default Logical.AND;
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/EnableCustomConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/EnableCustomConfig.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/EnableCustomConfig.java
new file mode 100644
--- /dev/null	(date 1725768688083)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/EnableCustomConfig.java	(date 1725768688083)
@@ -0,0 +1,40 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.annotation;
+
+import leyramu.softwarecup.digEdu.common.security.config.ApplicationConfig;
+import leyramu.softwarecup.digEdu.common.security.feign.FeignAutoConfiguration;
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.context.annotation.EnableAspectJAutoProxy;
+import org.springframework.context.annotation.Import;
+import org.springframework.scheduling.annotation.EnableAsync;
+
+import java.lang.annotation.*;
+
+/**
+ * 开启自定义配置
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Target(ElementType.TYPE)
+@Retention(RetentionPolicy.RUNTIME)
+@Documented
+@Inherited
+// 表示通过aop框架暴露该代理对象,AopContext能够访问
+@EnableAspectJAutoProxy(exposeProxy = true)
+// 指定要扫描的Mapper类的包的路径
+@MapperScan("leyramu.softwarecup.digEdu.**.mapper")
+// 开启线程异步执行
+@EnableAsync
+// 自动加载类
+@Import({ApplicationConfig.class, FeignAutoConfiguration.class})
+public @interface EnableCustomConfig {
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresPermissions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresPermissions.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresPermissions.java
new file mode 100644
--- /dev/null	(date 1722006801886)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/RequiresPermissions.java	(date 1722006801886)
@@ -0,0 +1,36 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.annotation;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+/**
+ * 权限认证：必须具有指定权限才能进入该方法
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Retention(RetentionPolicy.RUNTIME)
+@Target({ElementType.METHOD, ElementType.TYPE})
+public @interface RequiresPermissions {
+
+    /**
+     * 需要校验的权限码
+     */
+    String[] value() default {};
+
+    /**
+     * 验证模式：AND | OR，默认AND
+     */
+    Logical logical() default Logical.AND;
+}
Index: asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/EnableAscFeignClients.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/EnableAscFeignClients.java b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/EnableAscFeignClients.java
new file mode 100644
--- /dev/null	(date 1726318026678)
+++ b/asc-java/asc-common/asc-common-security/src/main/java/leyramu/qinian/asc/common/security/annotation/EnableAscFeignClients.java	(date 1726318026678)
@@ -0,0 +1,52 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.common.security.annotation;
+
+import org.springframework.cloud.openfeign.EnableFeignClients;
+
+import java.lang.annotation.*;
+
+/**
+ * 自定义feign注解，添加basePackages路径
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Target(ElementType.TYPE)
+@Retention(RetentionPolicy.RUNTIME)
+@Documented
+@EnableFeignClients
+public @interface EnableAscFeignClients {
+    String[] value() default {};
+
+    /**
+     * 指定扫描的包路径
+     * @return String[]
+     */
+    String[] basePackages() default {"leyramu.qinian.asc"};
+
+    /**
+     * 指定扫描的包路径
+     * @return Class<?>[]
+     */
+    Class<?>[] basePackageClasses() default {};
+
+    /**
+     * 指定默认的Feign配置类
+     * @return Class<?>[]
+     */
+    Class<?>[] defaultConfiguration() default {};
+
+    /**
+     * 指定Feign客户端
+     * @return Class<?>[]
+     */
+    Class<?>[] clients() default {};
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysFile.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysFile.java
new file mode 100644
--- /dev/null	(date 1722344113485)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysFile.java	(date 1722344113485)
@@ -0,0 +1,42 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import lombok.Data;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+/**
+ * 文件信息
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Data
+public class SysFile {
+
+    /**
+     * 文件名称
+     */
+    private String name;
+
+    /**
+     * 文件地址
+     */
+    private String url;
+
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("name", getName())
+                .append("url", getUrl())
+                .toString();
+    }
+}
Index: asc-java/asc-common/asc-common-security/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/pom.xml b/asc-java/asc-common/asc-common-security/pom.xml
new file mode 100644
--- /dev/null	(date 1726316430284)
+++ b/asc-java/asc-common/asc-common-security/pom.xml	(date 1726316430284)
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="UTF-8"?><!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
+    <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
+    <parent>
+        <groupId>leyramu.qinian</groupId>
+        <artifactId>asc-common</artifactId>
+        <relativePath>../pom.xml</relativePath>
+        <version>1.0.0</version>
+    </parent>
+
+    <!--      模块描述      -->
+    <description>管理微服务的安全模块</description>
+
+    <!--      工件 ID      -->
+    <artifactId>asc-common-security</artifactId>
+
+    <!--      依赖      -->
+    <dependencies>
+        <!--    Spring Web    -->
+        <dependency>
+            <groupId>org.springframework</groupId>
+            <artifactId>spring-webmvc</artifactId>
+        </dependency>
+
+        <!--    DigEdu Api System    -->
+<!--        <dependency>-->
+<!--            <groupId>leyramu.qinian</groupId>-->
+<!--            <artifactId>asc-api-system</artifactId>-->
+<!--        </dependency>-->
+
+        <!--    DigEdu Common Redis    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-redis</artifactId>
+        </dependency>
+    </dependencies>
+</project>
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysMenu.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysMenu.java
new file mode 100644
--- /dev/null	(date 1722344113493)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysMenu.java	(date 1722344113493)
@@ -0,0 +1,213 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.NotNull;
+import jakarta.validation.constraints.Size;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+import java.io.Serial;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 菜单权限表
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class SysMenu extends BaseEntity {
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 菜单ID
+     */
+    private Long menuId;
+
+    /**
+     * 菜单名称
+     */
+    private String menuName;
+
+    /**
+     * 父菜单名称
+     */
+    private String parentName;
+
+    /**
+     * 父菜单ID
+     */
+    private Long parentId;
+
+    /**
+     * 显示顺序
+     */
+    private Integer orderNum;
+
+    /**
+     * 路由地址
+     */
+    private String path;
+
+    /**
+     * 组件路径
+     */
+    private String component;
+
+    /**
+     * 路由参数
+     */
+    private String query;
+
+    /**
+     * 路由名称，默认和路由地址相同的驼峰格式
+     */
+    private String routeName;
+
+    /**
+     * 是否为外链（0是 1否）
+     */
+    private String isFrame;
+
+    /**
+     * 是否缓存（0为缓存 1为不缓存）
+     */
+    private String isCache;
+
+    /**
+     * 类型（M目录 C菜单 F按钮）
+     */
+    private String menuType;
+
+    /**
+     * 显示状态（0显示 1隐藏）
+     */
+    private String visible;
+
+    /**
+     * 菜单状态（0正常 1停用）
+     */
+    private String status;
+
+    /**
+     * 权限字符串
+     */
+    private String perms;
+
+    /**
+     * 菜单图标
+     */
+    private String icon;
+
+    /**
+     * 子菜单
+     */
+    private List<SysMenu> children = new ArrayList<>();
+
+    /**
+     * 获取菜单名称
+     *
+     * @return 菜单名称
+     */
+    @NotBlank(message = "菜单名称不能为空")
+    @Size(max = 50, message = "菜单名称长度不能超过50个字符")
+    public String getMenuName() {
+        return menuName;
+    }
+
+    /**
+     * 获取父菜单 ID
+     *
+     * @return 父菜单 ID
+     */
+    @NotNull(message = "显示顺序不能为空")
+    public Integer getOrderNum() {
+        return orderNum;
+    }
+
+    /**
+     * 获取路由地址
+     *
+     * @return 路由地址
+     */
+    @Size(max = 200, message = "路由地址不能超过200个字符")
+    public String getPath() {
+        return path;
+    }
+
+    /**
+     * 获取组件路径
+     *
+     * @return 组件路径
+     */
+    @Size(max = 200, message = "组件路径不能超过255个字符")
+    public String getComponent() {
+        return component;
+    }
+
+    /**
+     * 获取菜单类型
+     *
+     * @return 菜单类型
+     */
+    @NotBlank(message = "菜单类型不能为空")
+    public String getMenuType() {
+        return menuType;
+    }
+
+    /**
+     * 获取权限字符串
+     *
+     * @return 权限字符串
+     */
+    @Size(max = 100, message = "权限标识长度不能超过100个字符")
+    public String getPerms() {
+        return perms;
+    }
+
+    /**
+     * 获取父菜单名称
+     *
+     * @return 父菜单名称
+     */
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("menuId", getMenuId())
+                .append("menuName", getMenuName())
+                .append("parentId", getParentId())
+                .append("orderNum", getOrderNum())
+                .append("path", getPath())
+                .append("component", getComponent())
+                .append("query", getQuery())
+                .append("routeName", getRouteName())
+                .append("isFrame", getIsFrame())
+                .append("IsCache", getIsCache())
+                .append("menuType", getMenuType())
+                .append("visible", getVisible())
+                .append("status ", getStatus())
+                .append("perms", getPerms())
+                .append("icon", getIcon())
+                .append("createBy", getCreateBy())
+                .append("createTime", getCreateTime())
+                .append("updateBy", getUpdateBy())
+                .append("updateTime", getUpdateTime())
+                .append("remark", getRemark())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysPost.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysPost.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysPost.java
new file mode 100644
--- /dev/null	(date 1722344113723)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysPost.java	(date 1722344113723)
@@ -0,0 +1,128 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.NotNull;
+import jakarta.validation.constraints.Size;
+import leyramu.softwarecup.digEdu.common.core.annotation.Excel;
+import leyramu.softwarecup.digEdu.common.core.annotation.Excel.ColumnType;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+import java.io.Serial;
+
+/**
+ * 岗位表
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class SysPost extends BaseEntity {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 岗位序号
+     */
+    @Excel(name = "岗位序号", cellType = ColumnType.NUMERIC)
+    private Long postId;
+
+    /**
+     * 岗位编码
+     */
+    @Excel(name = "岗位编码")
+    private String postCode;
+
+    /**
+     * 岗位名称
+     */
+    @Excel(name = "岗位名称")
+    private String postName;
+
+    /**
+     * 岗位排序
+     */
+    @Excel(name = "岗位排序")
+    private Integer postSort;
+
+    /**
+     * 状态（0正常 1停用）
+     */
+    @Excel(name = "状态", readConverterExp = "0=正常,1=停用")
+    private String status;
+
+    /**
+     * 用户是否存在此岗位标识 默认不存在
+     */
+    private boolean flag = false;
+
+    /**
+     * 获取岗位编码
+     *
+     * @return 岗位编码
+     */
+    @NotBlank(message = "岗位编码不能为空")
+    @Size(max = 64, message = "岗位编码长度不能超过64个字符")
+    public String getPostCode() {
+        return postCode;
+    }
+
+    /**
+     * 获取岗位名称
+     *
+     * @return 岗位名称
+     */
+    @NotBlank(message = "岗位名称不能为空")
+    @Size(max = 50, message = "岗位名称长度不能超过50个字符")
+    public String getPostName() {
+        return postName;
+    }
+
+    /**
+     * 获取岗位排序
+     *
+     * @return 岗位排序
+     */
+    @NotNull(message = "显示顺序不能为空")
+    public Integer getPostSort() {
+        return postSort;
+    }
+
+    /**
+     * 设置岗位编码
+     *
+     * @return 岗位编码
+     */
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("postId", getPostId())
+                .append("postCode", getPostCode())
+                .append("postName", getPostName())
+                .append("postSort", getPostSort())
+                .append("status", getStatus())
+                .append("createBy", getCreateBy())
+                .append("createTime", getCreateTime())
+                .append("updateBy", getUpdateBy())
+                .append("updateTime", getUpdateTime())
+                .append("remark", getRemark())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRole.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRole.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRole.java
new file mode 100644
--- /dev/null	(date 1722344113852)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRole.java	(date 1722344113852)
@@ -0,0 +1,164 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
+import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.NotNull;
+import jakarta.validation.constraints.Size;
+import leyramu.softwarecup.digEdu.common.core.annotation.Excel;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+import java.io.Serial;
+import java.util.Set;
+
+/**
+ * 角色表
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Data
+@NoArgsConstructor
+@EqualsAndHashCode(callSuper = true)
+@JsonIgnoreProperties(ignoreUnknown = true)
+public class SysRole extends BaseEntity {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 角色ID
+     */
+    @Excel(name = "角色序号", cellType = Excel.ColumnType.NUMERIC)
+    private Long roleId;
+
+    /**
+     * 角色名称
+     */
+    @Excel(name = "角色名称")
+    private String roleName;
+
+    /**
+     * 角色权限
+     */
+    @Excel(name = "角色权限")
+    private String roleKey;
+
+    /**
+     * 角色排序
+     */
+    @Excel(name = "角色排序")
+    private Integer roleSort;
+
+    /**
+     * 数据范围（1：所有数据权限；2：自定义数据权限；3：本部门数据权限；4：本部门及以下数据权限；5：仅本人数据权限）
+     */
+    @Excel(name = "数据范围", readConverterExp = "1=所有数据权限,2=自定义数据权限,3=本部门数据权限,4=本部门及以下数据权限,5=仅本人数据权限")
+    private String dataScope;
+
+    /**
+     * 菜单树选择项是否关联显示（ 0：父子不互相关联显示 1：父子互相关联显示）
+     */
+    private boolean menuCheckStrictly;
+
+    /**
+     * 部门树选择项是否关联显示（0：父子不互相关联显示 1：父子互相关联显示 ）
+     */
+    private boolean deptCheckStrictly;
+
+    /**
+     * 角色状态（0正常 1停用）
+     */
+    @Excel(name = "角色状态", readConverterExp = "0=正常,1=停用")
+    private String status;
+
+    /**
+     * 删除标志（0代表存在 2代表删除）
+     */
+    private String delFlag;
+
+    /**
+     * 用户是否存在此角色标识 默认不存在
+     */
+    private boolean flag = false;
+
+    /**
+     * 菜单组
+     */
+    private Long[] menuIds;
+
+    /**
+     * 部门组（数据权限）
+     */
+    private Long[] deptIds;
+
+    /**
+     * 角色菜单权限
+     */
+    private Set<String> permissions;
+
+    public SysRole(Long roleId) {
+        this.roleId = roleId;
+    }
+
+    public static boolean isAdmin(Long roleId) {
+        return roleId != null && 1L == roleId;
+    }
+
+    public boolean isAdmin() {
+        return isAdmin(this.roleId);
+    }
+
+    @NotBlank(message = "角色名称不能为空")
+    @Size(max = 30, message = "角色名称长度不能超过30个字符")
+    public String getRoleName() {
+        return roleName;
+    }
+
+    @NotBlank(message = "权限字符不能为空")
+    @Size(max = 100, message = "权限字符长度不能超过100个字符")
+    public String getRoleKey() {
+        return roleKey;
+    }
+
+    @NotNull(message = "显示顺序不能为空")
+    public Integer getRoleSort() {
+        return roleSort;
+    }
+
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("roleId", getRoleId())
+                .append("roleName", getRoleName())
+                .append("roleKey", getRoleKey())
+                .append("roleSort", getRoleSort())
+                .append("dataScope", getDataScope())
+                .append("menuCheckStrictly", isMenuCheckStrictly())
+                .append("deptCheckStrictly", isDeptCheckStrictly())
+                .append("status", getStatus())
+                .append("delFlag", getDelFlag())
+                .append("createBy", getCreateBy())
+                .append("createTime", getCreateTime())
+                .append("updateBy", getUpdateBy())
+                .append("updateTime", getUpdateTime())
+                .append("remark", getRemark())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUser.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUser.java
new file mode 100644
--- /dev/null	(date 1722344113752)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUser.java	(date 1722344113752)
@@ -0,0 +1,209 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
+import jakarta.validation.constraints.Email;
+import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.Size;
+import leyramu.softwarecup.digEdu.common.core.annotation.Excel;
+import leyramu.softwarecup.digEdu.common.core.annotation.Excels;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import leyramu.softwarecup.digEdu.common.core.xss.Xss;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.NoArgsConstructor;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+import java.io.Serial;
+import java.util.Date;
+import java.util.List;
+
+/**
+ * 用户对象
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Data
+@NoArgsConstructor
+@EqualsAndHashCode(callSuper = true)
+@JsonIgnoreProperties(ignoreUnknown = true)
+public class SysUser extends BaseEntity {
+
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 用户ID
+     */
+    @Excel(name = "用户序号", type = Excel.Type.EXPORT, cellType = Excel.ColumnType.NUMERIC, prompt = "用户编号")
+    private Long userId;
+
+    /**
+     * 部门ID
+     */
+    @Excel(name = "部门编号", type = Excel.Type.IMPORT)
+    private Long deptId;
+
+    /**
+     * 用户账号
+     */
+    @Excel(name = "登录名称")
+    private String userName;
+
+    /**
+     * 用户昵称
+     */
+    @Excel(name = "用户名称")
+    private String nickName;
+
+    /**
+     * 用户邮箱
+     */
+    @Excel(name = "用户邮箱")
+    private String email;
+
+    /**
+     * 手机号码
+     */
+    @Excel(name = "手机号码", cellType = Excel.ColumnType.TEXT)
+    private String phoneNumber;
+
+    /**
+     * 用户性别
+     */
+    @Excel(name = "用户性别", readConverterExp = "0=男,1=女,2=未知")
+    private String sex;
+
+    /**
+     * 用户头像
+     */
+    private String avatar;
+
+    /**
+     * 密码
+     */
+    private String password;
+
+    /**
+     * 账号状态（0正常 1停用）
+     */
+    @Excel(name = "帐号状态", readConverterExp = "0=正常,1=停用")
+    private String status;
+
+    /**
+     * 删除标志（0代表存在 2代表删除）
+     */
+    private String delFlag;
+
+    /**
+     * 最后登录IP
+     */
+    @Excel(name = "最后登录IP", type = Excel.Type.EXPORT)
+    private String loginIp;
+
+    /**
+     * 最后登录时间
+     */
+    @Excel(name = "最后登录时间", width = 30, dateFormat = "yyyy-MM-dd HH:mm:ss", type = Excel.Type.EXPORT)
+    private Date loginDate;
+
+    /**
+     * 部门对象
+     */
+    @Excels({
+            @Excel(name = "部门名称", targetAttr = "deptName", type = Excel.Type.EXPORT),
+            @Excel(name = "部门负责人", targetAttr = "leader", type = Excel.Type.EXPORT)
+    })
+    private SysDept dept;
+
+    /**
+     * 角色对象
+     */
+    private List<SysRole> roles;
+
+    /**
+     * 角色组
+     */
+    private Long[] roleIds;
+
+    /**
+     * 岗位组
+     */
+    private Long[] postIds;
+
+    /**
+     * 角色ID
+     */
+    private Long roleId;
+
+    public SysUser(Long userId) {
+        this.userId = userId;
+    }
+
+    public boolean isAdmin() {
+        return isAdmin(this.userId);
+    }
+
+    public static boolean isAdmin(Long userId) {
+        return userId != null && 1L == userId;
+    }
+
+    @Xss(message = "用户昵称不能包含脚本字符")
+    @Size(max = 30, message = "用户昵称长度不能超过30个字符")
+    public String getNickName() {
+        return nickName;
+    }
+
+    @Xss(message = "用户账号不能包含脚本字符")
+    @NotBlank(message = "用户账号不能为空")
+    @Size(max = 30, message = "用户账号长度不能超过30个字符")
+    public String getUserName() {
+        return userName;
+    }
+
+    @Email(message = "邮箱格式不正确")
+    @Size(max = 50, message = "邮箱长度不能超过50个字符")
+    public String getEmail() {
+        return email;
+    }
+
+    @Size(max = 11, message = "手机号码长度不能超过11个字符")
+    public String getPhoneNumber() {
+        return phoneNumber;
+    }
+
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("userId", getUserId())
+                .append("deptId", getDeptId())
+                .append("userName", getUserName())
+                .append("nickName", getNickName())
+                .append("email", getEmail())
+                .append("phoneNumber", getPhoneNumber())
+                .append("sex", getSex())
+                .append("avatar", getAvatar())
+                .append("password", getPassword())
+                .append("status", getStatus())
+                .append("delFlag", getDelFlag())
+                .append("loginIp", getLoginIp())
+                .append("loginDate", getLoginDate())
+                .append("createBy", getCreateBy())
+                .append("createTime", getCreateTime())
+                .append("updateBy", getUpdateBy())
+                .append("updateTime", getUpdateTime())
+                .append("remark", getRemark())
+                .append("dept", getDept())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysConfig.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysConfig.java
new file mode 100644
--- /dev/null	(date 1722344113743)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysConfig.java	(date 1722344113743)
@@ -0,0 +1,122 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.Size;
+import leyramu.softwarecup.digEdu.common.core.annotation.Excel;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+import java.io.Serial;
+
+/**
+ * 参数配置表
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class SysConfig extends BaseEntity {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 参数主键
+     */
+    @Excel(name = "参数主键", cellType = Excel.ColumnType.NUMERIC)
+    private Long configId;
+
+    /**
+     * 参数名称
+     */
+    @Excel(name = "参数名称")
+    private String configName;
+
+    /**
+     * 参数键名
+     */
+    @Excel(name = "参数键名")
+    private String configKey;
+
+    /**
+     * 参数键值
+     */
+    @Excel(name = "参数键值")
+    private String configValue;
+
+    /**
+     *系统内置（Y是 N否）
+     */
+    @Excel(name = "系统内置", readConverterExp = "Y=是,N=否")
+    private String configType;
+
+    /**
+     * 获取配置键名称
+     *
+     * @return 配置键名称
+     */
+    @NotBlank(message = "参数名称不能为空")
+    @Size(max = 100, message = "参数名称不能超过100个字符")
+    public String getConfigName() {
+        return configName;
+    }
+
+    /**
+     * 获取配置键
+     *
+     * @return 配置键
+     */
+    @NotBlank(message = "参数键名长度不能为空")
+    @Size(max = 100, message = "参数键名长度不能超过100个字符")
+    public String getConfigKey() {
+        return configKey;
+    }
+
+    /**
+     * 获取配置值
+     *
+     * @return 配置值
+     */
+    @NotBlank(message = "参数键值不能为空")
+    @Size(max = 500, message = "参数键值长度不能超过500个字符")
+    public String getConfigValue() {
+        return configValue;
+    }
+
+    /**
+     * 获取系统内置（Y是 N否）
+     *
+     * @return 系统内置（Y是 N否）
+     */
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("configId", getConfigId())
+                .append("configName", getConfigName())
+                .append("configKey", getConfigKey())
+                .append("configValue", getConfigValue())
+                .append("configType", getConfigType())
+                .append("createBy", getCreateBy())
+                .append("createTime", getCreateTime())
+                .append("updateBy", getUpdateBy())
+                .append("updateTime", getUpdateTime())
+                .append("remark", getRemark())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysNotice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysNotice.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysNotice.java
new file mode 100644
--- /dev/null	(date 1722344113589)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysNotice.java	(date 1722344113589)
@@ -0,0 +1,96 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.Size;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import leyramu.softwarecup.digEdu.common.core.xss.Xss;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+import java.io.Serial;
+
+/**
+ * 通知公告表
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class SysNotice extends BaseEntity {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 公告 ID
+     */
+    private Long noticeId;
+
+    /**
+     * 公告标题
+     */
+    private String noticeTitle;
+
+    /**
+     * 公告类型（1为通知 2为公告）
+     */
+    private String noticeType;
+
+    /**
+     * 公告内容
+     */
+    private String noticeContent;
+
+    /**
+     * 公告状态（0正常 1关闭）
+     */
+    private String status;
+
+    /**
+     * 获取公告标题
+     *
+     * @return 公告标题
+     */
+    @Xss(message = "公告标题不能包含脚本字符")
+    @NotBlank(message = "公告标题不能为空")
+    @Size(max = 50, message = "公告标题不能超过50个字符")
+    public String getNoticeTitle() {
+        return noticeTitle;
+    }
+
+    /**
+     * 获取公告类型
+     *
+     * @return 公告类型
+     */
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("noticeId", getNoticeId())
+                .append("noticeTitle", getNoticeTitle())
+                .append("noticeType", getNoticeType())
+                .append("noticeContent", getNoticeContent())
+                .append("status", getStatus())
+                .append("createBy", getCreateBy())
+                .append("createTime", getCreateTime())
+                .append("updateBy", getUpdateBy())
+                .append("updateTime", getUpdateTime())
+                .append("remark", getRemark())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysOperLog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysOperLog.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysOperLog.java
new file mode 100644
--- /dev/null	(date 1722344113837)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysOperLog.java	(date 1722344113837)
@@ -0,0 +1,135 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import com.fasterxml.jackson.annotation.JsonFormat;
+import leyramu.softwarecup.digEdu.common.core.annotation.Excel;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+import java.io.Serial;
+import java.util.Date;
+
+/**
+ * 操作日志记录表
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class SysOperLog extends BaseEntity {
+
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 日志主键
+     */
+    @Excel(name = "操作序号", cellType = Excel.ColumnType.NUMERIC)
+    private Long operId;
+
+    /**
+     * 操作模块
+     */
+    @Excel(name = "操作模块")
+    private String title;
+
+    /**
+     * 业务类型（0其它 1新增 2修改 3删除）
+     */
+    @Excel(name = "业务类型", readConverterExp = "0=其它,1=新增,2=修改,3=删除,4=授权,5=导出,6=导入,7=强退,8=生成代码,9=清空数据")
+    private Integer businessType;
+
+    /**
+     * 业务类型数组
+     */
+    private Integer[] businessTypes;
+
+    /**
+     * 请求方法
+     */
+    @Excel(name = "请求方法")
+    private String method;
+
+    /**
+     * 请求方式
+     */
+    @Excel(name = "请求方式")
+    private String requestMethod;
+
+    /**
+     * 操作类别（0其它 1后台用户 2是手机端用户）
+     */
+    @Excel(name = "操作类别", readConverterExp = "0=其它,1=后台用户,2=手机端用户")
+    private Integer operatorType;
+
+    /**
+     * 操作人员
+     */
+    @Excel(name = "操作人员")
+    private String operName;
+
+    /**
+     * 部门名称
+     */
+    @Excel(name = "部门名称")
+    private String deptName;
+
+    /**
+     * 请求url
+     */
+    @Excel(name = "请求地址")
+    private String operUrl;
+
+    /**
+     * 操作地址
+     */
+    @Excel(name = "操作地址")
+    private String operIp;
+
+    /**
+     * 请求参数
+     */
+    @Excel(name = "请求参数")
+    private String operParam;
+
+    /**
+     * 返回参数
+     */
+    @Excel(name = "返回参数")
+    private String jsonResult;
+
+    /**
+     * 操作状态（0正常 1异常）
+     */
+    @Excel(name = "状态", readConverterExp = "0=正常,1=异常")
+    private Integer status;
+
+    /**
+     * 错误消息
+     */
+    @Excel(name = "错误消息")
+    private String errorMsg;
+
+    /**
+     * 操作时间
+     */
+    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
+    @Excel(name = "操作时间", width = 30, dateFormat = "yyyy-MM-dd HH:mm:ss")
+    private Date operTime;
+
+    /**
+     * 消耗时间
+     */
+    @Excel(name = "消耗时间", suffix = "毫秒")
+    private Long costTime;
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/model/LoginUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/model/LoginUser.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/model/LoginUser.java
new file mode 100644
--- /dev/null	(date 1722344113561)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/model/LoginUser.java	(date 1722344113561)
@@ -0,0 +1,80 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.model;
+
+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
+import leyramu.softwarecup.digEdu.system.api.domain.SysUser;
+import lombok.Data;
+
+import java.io.Serial;
+import java.io.Serializable;
+import java.util.Set;
+
+/**
+ * 用户信息
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Data
+@JsonIgnoreProperties(ignoreUnknown = true)
+public class LoginUser implements Serializable {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 用户唯一标识
+     */
+    private String token;
+
+    /**
+     * 用户名id
+     */
+    private Long userid;
+
+    /**
+     * 用户名
+     */
+    private String username;
+
+    /**
+     * 登录时间
+     */
+    private Long loginTime;
+
+    /**
+     * 过期时间
+     */
+    private Long expireTime;
+
+    /**
+     * 登录IP地址
+     */
+    private String ipaddr;
+
+    /**
+     * 权限列表
+     */
+    private Set<String> permissions;
+
+    /**
+     * 角色列表
+     */
+    private Set<String> roles;
+
+    /**
+     * 用户信息
+     */
+    private SysUser sysUser;
+}
Index: asc-java/asc-common/asc-common-utils/src/main/resources/META-INF/spring.factories
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\r\n org.qinian.config.MybatisPlusConfig,\\\r\n org.qinian.config.RedisConfig, \\\r\n org.qinian.config.MvcConfig, \\\r\n org.qinian.config.SecurityConfig,\\\r\n org.qinian.config.RabbitMQConfig,\\\r\n org.qinian.utils.JwtTool
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/asc-java/asc-common/asc-common-utils/src/main/resources/META-INF/spring.factories b/asc-java/asc-common/asc-common-utils/src/main/resources/META-INF/spring.factories
--- a/asc-java/asc-common/asc-common-utils/src/main/resources/META-INF/spring.factories	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-common/asc-common-utils/src/main/resources/META-INF/spring.factories	(date 1725783859310)
@@ -1,7 +1,7 @@
-org.springframework.boot.autoconfigure.EnableAutoConfiguration=\
- org.qinian.config.MybatisPlusConfig,\
- org.qinian.config.RedisConfig, \
- org.qinian.config.MvcConfig, \
- org.qinian.config.SecurityConfig,\
- org.qinian.config.RabbitMQConfig,\
- org.qinian.utils.JwtTool
\ No newline at end of file
+#org.springframework.boot.autoconfigure.EnableAutoConfiguration=\
+# org.qinian.config.MybatisPlusConfig,\
+# org.qinian.config.RedisConfig, \
+# org.qinian.config.MvcConfig, \
+# org.qinian.config.SecurityConfig,\
+# org.qinian.config.RabbitMQConfig,\
+# org.qinian.utils.JwtTool
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/MetaVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/MetaVo.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/MetaVo.java
new file mode 100644
--- /dev/null	(date 1722344113790)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/MetaVo.java	(date 1722344113790)
@@ -0,0 +1,84 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain.vo;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+/**
+ * 路由显示信息
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class MetaVo {
+
+    /**
+     * 设置该路由在侧边栏和面包屑中展示的名字
+     */
+    private String title;
+
+    /**
+     * 设置该路由的图标，对应路径src/assets/icons/svg
+     */
+    private String icon;
+
+    /**
+     * 设置为true，则不会被 <keep-alive>缓存
+     */
+    private boolean noCache;
+
+    /**
+     * 内链地址（http(s)://开头）
+     */
+    private String link;
+
+
+    /**
+     * 构造方法
+     *
+     * @param title 标题
+     * @param icon 图标
+     */
+    public MetaVo(String title, String icon) {
+        this.title = title;
+        this.icon = icon;
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param title 标题
+     * @param icon 图标
+     * @param noCache 是否缓存
+     */
+    public MetaVo(String title, String icon, boolean noCache) {
+        this.title = title;
+        this.icon = icon;
+        this.noCache = noCache;
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param title 标题
+     * @param icon 图标
+     * @param link 内链地址
+     */
+    public MetaVo(String title, String icon, String link) {
+        this.title = title;
+        this.icon = icon;
+        this.link = link;
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/RouterVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/RouterVo.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/RouterVo.java
new file mode 100644
--- /dev/null	(date 1722344113620)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/RouterVo.java	(date 1722344113620)
@@ -0,0 +1,71 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain.vo;
+
+import com.fasterxml.jackson.annotation.JsonInclude;
+import lombok.Data;
+
+import java.util.List;
+
+/**
+ * 路由配置信息
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+@JsonInclude(JsonInclude.Include.NON_EMPTY)
+public class RouterVo {
+
+    /**
+     * 路由名字
+     */
+    private String name;
+
+    /**
+     * 路由地址
+     */
+    private String path;
+
+    /**
+     * 是否隐藏路由，当设置 true 的时候该路由不会再侧边栏出现
+     */
+    private boolean hidden;
+
+    /**
+     * 重定向地址，当设置 noRedirect 的时候该路由在面包屑导航中不可被点击
+     */
+    private String redirect;
+
+    /**
+     * 组件地址
+     */
+    private String component;
+
+    /**
+     * 路由参数：如 {"id": 1, "name": "ry"}
+     */
+    private String query;
+
+    /**
+     * 当你一个路由下面的 children 声明的路由大于1个时，自动会变成嵌套的模式--如组件页面
+     */
+    private Boolean alwaysShow;
+
+    /**
+     * 其他元素
+     */
+    private MetaVo meta;
+
+    /**
+     * 子路由
+     */
+    private List<RouterVo> children;
+}
Index: asc-java/asc-common/asc-common-security/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-security/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-common/asc-common-security/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1722344113670)
+++ b/asc-java/asc-common/asc-common-security/target/classes/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1722344113670)
@@ -0,0 +1,13 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.softwarecup.digEdu.common.security.config.WebMvcConfig
+leyramu.softwarecup.digEdu.common.security.service.TokenService
+leyramu.softwarecup.digEdu.common.security.aspect.PreAuthorizeAspect
+leyramu.softwarecup.digEdu.common.security.aspect.InnerAuthAspect
+leyramu.softwarecup.digEdu.common.security.handler.GlobalExceptionHandler
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/TreeSelect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/TreeSelect.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/TreeSelect.java
new file mode 100644
--- /dev/null	(date 1722344113526)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/vo/TreeSelect.java	(date 1722344113526)
@@ -0,0 +1,76 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain.vo;
+
+import com.fasterxml.jackson.annotation.JsonInclude;
+import leyramu.softwarecup.digEdu.system.api.domain.SysDept;
+import leyramu.softwarecup.digEdu.system.api.domain.SysMenu;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import java.io.Serial;
+import java.io.Serializable;
+import java.util.List;
+import java.util.stream.Collectors;
+
+/**
+ * TreeSelect 树结构实体类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+@NoArgsConstructor
+public class TreeSelect implements Serializable {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 节点ID
+     */
+    private Long id;
+
+    /**
+     * 节点名称
+     */
+    private String label;
+
+    /**
+     * 子节点
+     */
+    @JsonInclude(JsonInclude.Include.NON_EMPTY)
+    private List<TreeSelect> children;
+
+    /**
+     * 构造方法
+     *
+     * @param dept 部门信息
+     */
+    public TreeSelect(SysDept dept) {
+        this.id = dept.getDeptId();
+        this.label = dept.getDeptName();
+        this.children = dept.getChildren().stream().map(TreeSelect::new).collect(Collectors.toList());
+    }
+
+    /**
+     * 构造方法
+     *
+     * @param menu 菜单信息
+     */
+    public TreeSelect(SysMenu menu) {
+        this.id = menu.getMenuId();
+        this.label = menu.getMenuName();
+        this.children = menu.getChildren().stream().map(TreeSelect::new).collect(Collectors.toList());
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDept.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDept.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDept.java
new file mode 100644
--- /dev/null	(date 1722344113496)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDept.java	(date 1722344113496)
@@ -0,0 +1,143 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import jakarta.validation.constraints.Email;
+import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.NotNull;
+import jakarta.validation.constraints.Size;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+import java.io.Serial;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 部门表
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class SysDept extends BaseEntity {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 部门ID
+     */
+    private Long deptId;
+
+    /**
+     * 父部门ID
+     */
+    private Long parentId;
+
+    /**
+     * 祖级列表
+     */
+    private String ancestors;
+
+    /**
+     * 部门名称
+     */
+    private String deptName;
+
+    /**
+     * 显示顺序
+     */
+    private Integer orderNum;
+
+    /**
+     * 负责人
+     */
+    private String leader;
+
+    /**
+     * 联系电话
+     */
+    private String phone;
+
+    /**
+     * 邮箱
+     */
+    private String email;
+
+    /**
+     * 部门状态:0正常,1停用
+     */
+    private String status;
+
+    /**
+     * 删除标志（0代表存在 2代表删除）
+     */
+    private String delFlag;
+
+    /**
+     * 父部门名称
+     */
+    private String parentName;
+
+    /**
+     * 子部门
+     */
+    private List<SysDept> children = new ArrayList<>();
+
+    @NotBlank(message = "部门名称不能为空")
+    @Size(max = 30, message = "部门名称长度不能超过30个字符")
+    public String getDeptName() {
+        return deptName;
+    }
+
+    @NotNull(message = "显示顺序不能为空")
+    public Integer getOrderNum() {
+        return orderNum;
+    }
+
+    @Size(max = 11, message = "联系电话长度不能超过11个字符")
+    public String getPhone() {
+        return phone;
+    }
+
+    @Email(message = "邮箱格式不正确")
+    @Size(max = 50, message = "邮箱长度不能超过50个字符")
+    public String getEmail() {
+        return email;
+    }
+
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("deptId", getDeptId())
+                .append("parentId", getParentId())
+                .append("ancestors", getAncestors())
+                .append("deptName", getDeptName())
+                .append("orderNum", getOrderNum())
+                .append("leader", getLeader())
+                .append("phone", getPhone())
+                .append("email", getEmail())
+                .append("status", getStatus())
+                .append("delFlag", getDelFlag())
+                .append("createBy", getCreateBy())
+                .append("createTime", getCreateTime())
+                .append("updateBy", getUpdateBy())
+                .append("updateTime", getUpdateTime())
+                .toString();
+    }
+}
Index: asc-java/asc-service/asc-service-system/src/main/java/leyramu/qinian/asc/system/AscSystemServiceApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-service-system/src/main/java/leyramu/qinian/asc/system/AscSystemServiceApplication.java b/asc-java/asc-service/asc-service-system/src/main/java/leyramu/qinian/asc/system/AscSystemServiceApplication.java
new file mode 100644
--- /dev/null	(date 1726318026673)
+++ b/asc-java/asc-service/asc-service-system/src/main/java/leyramu/qinian/asc/system/AscSystemServiceApplication.java	(date 1726318026673)
@@ -0,0 +1,25 @@
+package leyramu.qinian.asc.system;
+
+import leyramu.softwarecup.digEdu.common.security.annotation.EnableAscFeignClients;
+import leyramu.softwarecup.digEdu.common.security.annotation.EnableCustomConfig;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+/**
+ * 系统模块
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/9/14
+ */
+@Slf4j
+@EnableCustomConfig
+@EnableAscFeignClients
+@SpringBootApplication
+public class AscSystemServiceApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(AscSystemServiceApplication.class, args);
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports b/asc-java/asc-api/asc-api-system/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
new file mode 100644
--- /dev/null	(date 1722344113653)
+++ b/asc-java/asc-api/asc-api-system/src/main/resources/META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports	(date 1722344113653)
@@ -0,0 +1,11 @@
+#
+# Copyright (c) 2024 Leyramu. All rights reserved.
+# This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+# For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+# The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+# By using this project, users acknowledge and agree to abide by these terms and conditions.
+#
+
+leyramu.softwarecup.digEdu.system.api.factory.RemoteUserFallbackFactory
+leyramu.softwarecup.digEdu.system.api.factory.RemoteLogFallbackFactory
+leyramu.softwarecup.digEdu.system.api.factory.RemoteFileFallbackFactory
Index: asc-java/asc-common/asc-common-i18n/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/pom.xml b/asc-java/asc-common/asc-common-i18n/pom.xml
new file mode 100644
--- /dev/null	(date 1726315818824)
+++ b/asc-java/asc-common/asc-common-i18n/pom.xml	(date 1726315818824)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>leyramu.qinian</groupId>
+        <artifactId>asc-common</artifactId>
+        <version>1.0.0</version>
+    </parent>
+
+    <artifactId>asc-common-i18n</artifactId>
+</project>
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteLogFallbackFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteLogFallbackFactory.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteLogFallbackFactory.java
new file mode 100644
--- /dev/null	(date 1722514045388)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteLogFallbackFactory.java	(date 1722514045388)
@@ -0,0 +1,47 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.factory;
+
+import leyramu.softwarecup.digEdu.common.core.domain.R;
+import leyramu.softwarecup.digEdu.system.api.RemoteLogService;
+import leyramu.softwarecup.digEdu.system.api.domain.SysLogininfor;
+import leyramu.softwarecup.digEdu.system.api.domain.SysOperLog;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.cloud.openfeign.FallbackFactory;
+import org.springframework.stereotype.Component;
+
+/**
+ * 日志服务降级处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Component
+public class RemoteLogFallbackFactory implements FallbackFactory<RemoteLogService> {
+
+    private static final Logger log = LoggerFactory.getLogger(RemoteLogFallbackFactory.class);
+
+    @Override
+    public RemoteLogService create(Throwable throwable) {
+        log.error("日志服务调用失败:{}", throwable.getMessage());
+        return new RemoteLogService() {
+            @Override
+            public R<Boolean> saveLog(SysOperLog sysOperLog, String source) {
+                return R.fail("保存操作日志失败:" + throwable.getMessage());
+            }
+
+            @Override
+            public R<Boolean> saveLogininfor(SysLogininfor sysLogininfor, String source) {
+                return R.fail("保存登录日志失败:" + throwable.getMessage());
+            }
+        };
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteFileFallbackFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteFileFallbackFactory.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteFileFallbackFactory.java
new file mode 100644
--- /dev/null	(date 1722514045381)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteFileFallbackFactory.java	(date 1722514045381)
@@ -0,0 +1,38 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.factory;
+
+import leyramu.softwarecup.digEdu.common.core.domain.R;
+import leyramu.softwarecup.digEdu.system.api.RemoteFileService;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.cloud.openfeign.FallbackFactory;
+import org.springframework.stereotype.Component;
+
+/**
+ * 文件服务降级处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Component
+public class RemoteFileFallbackFactory implements FallbackFactory<RemoteFileService> {
+
+    /**
+     * 日志信息
+     */
+    private static final Logger log = LoggerFactory.getLogger(RemoteFileFallbackFactory.class);
+
+    @Override
+    public RemoteFileService create(Throwable throwable) {
+        log.error("文件服务调用失败:{}", throwable.getMessage());
+        return _ -> R.fail("上传文件失败:" + throwable.getMessage());
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteUserFallbackFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteUserFallbackFactory.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteUserFallbackFactory.java
new file mode 100644
--- /dev/null	(date 1722344113552)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/factory/RemoteUserFallbackFactory.java	(date 1722344113552)
@@ -0,0 +1,52 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.factory;
+
+import leyramu.softwarecup.digEdu.common.core.domain.R;
+import leyramu.softwarecup.digEdu.system.api.RemoteUserService;
+import leyramu.softwarecup.digEdu.system.api.domain.SysUser;
+import leyramu.softwarecup.digEdu.system.api.model.LoginUser;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.cloud.openfeign.FallbackFactory;
+import org.springframework.stereotype.Component;
+
+/**
+ * 用户服务降级处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Component
+public class RemoteUserFallbackFactory implements FallbackFactory<RemoteUserService> {
+
+    private static final Logger log = LoggerFactory.getLogger(RemoteUserFallbackFactory.class);
+
+    @Override
+    public RemoteUserService create(Throwable throwable) {
+        log.error("用户服务调用失败:{}", throwable.getMessage());
+        return new RemoteUserService() {
+            @Override
+            public R<LoginUser> getUserInfo(String username, String source) {
+                return R.fail("获取用户失败:" + throwable.getMessage());
+            }
+
+            @Override
+            public R<Boolean> registerUserInfo(SysUser sysUser, String source) {
+                return R.fail("注册用户失败:" + throwable.getMessage());
+            }
+
+            @Override
+            public R<Boolean> recordUserLogin(SysUser sysUser, String source) {
+                return R.fail("记录用户登录信息失败:" + throwable.getMessage());
+            }
+        };
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteLogService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteLogService.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteLogService.java
new file mode 100644
--- /dev/null	(date 1722052354874)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteLogService.java	(date 1722052354874)
@@ -0,0 +1,51 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api;
+
+import leyramu.softwarecup.digEdu.common.core.constant.SecurityConstants;
+import leyramu.softwarecup.digEdu.common.core.constant.ServiceNameConstants;
+import leyramu.softwarecup.digEdu.common.core.domain.R;
+import leyramu.softwarecup.digEdu.system.api.domain.SysLogininfor;
+import leyramu.softwarecup.digEdu.system.api.domain.SysOperLog;
+import leyramu.softwarecup.digEdu.system.api.factory.RemoteLogFallbackFactory;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestHeader;
+
+/**
+ * 日志服务
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@FeignClient(contextId = "remoteLogService", value = ServiceNameConstants.SYSTEM_SERVICE, fallbackFactory = RemoteLogFallbackFactory.class)
+public interface RemoteLogService {
+
+    /**
+     * 保存系统日志
+     *
+     * @param sysOperLog 日志实体
+     * @param source     请求来源
+     * @return 结果
+     */
+    @PostMapping("/operlog")
+    R<Boolean> saveLog(@RequestBody SysOperLog sysOperLog, @RequestHeader(SecurityConstants.FROM_SOURCE) String source) throws Exception;
+
+    /**
+     * 保存访问记录
+     *
+     * @param sysLogininfor 访问实体
+     * @param source        请求来源
+     * @return 结果
+     */
+    @PostMapping("/logininfor")
+    R<Boolean> saveLogininfor(@RequestBody SysLogininfor sysLogininfor, @RequestHeader(SecurityConstants.FROM_SOURCE) String source);
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteFileService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteFileService.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteFileService.java
new file mode 100644
--- /dev/null	(date 1722052354894)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteFileService.java	(date 1722052354894)
@@ -0,0 +1,39 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api;
+
+import leyramu.softwarecup.digEdu.common.core.constant.ServiceNameConstants;
+import leyramu.softwarecup.digEdu.common.core.domain.R;
+import leyramu.softwarecup.digEdu.system.api.domain.SysFile;
+import leyramu.softwarecup.digEdu.system.api.factory.RemoteFileFallbackFactory;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.http.MediaType;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestPart;
+import org.springframework.web.multipart.MultipartFile;
+
+/**
+ * 文件服务
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@FeignClient(contextId = "remoteFileService", value = ServiceNameConstants.FILE_SERVICE, fallbackFactory = RemoteFileFallbackFactory.class)
+public interface RemoteFileService {
+
+    /**
+     * 上传文件
+     *
+     * @param file 文件信息
+     * @return 结果
+     */
+    @PostMapping(value = "/upload", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
+    R<SysFile> upload(@RequestPart(value = "file") MultipartFile file);
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteUserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteUserService.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteUserService.java
new file mode 100644
--- /dev/null	(date 1722052354868)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/RemoteUserService.java	(date 1722052354868)
@@ -0,0 +1,59 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api;
+
+import leyramu.softwarecup.digEdu.common.core.constant.SecurityConstants;
+import leyramu.softwarecup.digEdu.common.core.constant.ServiceNameConstants;
+import leyramu.softwarecup.digEdu.common.core.domain.R;
+import leyramu.softwarecup.digEdu.system.api.domain.SysUser;
+import leyramu.softwarecup.digEdu.system.api.factory.RemoteUserFallbackFactory;
+import leyramu.softwarecup.digEdu.system.api.model.LoginUser;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.*;
+
+/**
+ * 用户服务
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@FeignClient(contextId = "remoteUserService", value = ServiceNameConstants.SYSTEM_SERVICE, fallbackFactory = RemoteUserFallbackFactory.class)
+public interface RemoteUserService {
+
+    /**
+     * 通过用户名查询用户信息
+     *
+     * @param username 用户名
+     * @param source   请求来源
+     * @return 结果
+     */
+    @GetMapping("/user/info/{username}")
+    R<LoginUser> getUserInfo(@PathVariable("username") String username, @RequestHeader(SecurityConstants.FROM_SOURCE) String source);
+
+    /**
+     * 注册用户信息
+     *
+     * @param sysUser 用户信息
+     * @param source  请求来源
+     * @return 结果
+     */
+    @PostMapping("/user/register")
+    R<Boolean> registerUserInfo(@RequestBody SysUser sysUser, @RequestHeader(SecurityConstants.FROM_SOURCE) String source);
+
+    /**
+     * 记录用户登录IP地址和登录时间
+     *
+     * @param sysUser 用户信息
+     * @param source  请求来源
+     * @return 结果
+     */
+    @PutMapping("/user/recordlogin")
+    R<Boolean> recordUserLogin(@RequestBody SysUser sysUser, @RequestHeader(SecurityConstants.FROM_SOURCE) String source);
+}
Index: asc-java/asc-service/asc-service-system/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-service-system/pom.xml b/asc-java/asc-service/asc-service-system/pom.xml
new file mode 100644
--- /dev/null	(date 1726317864704)
+++ b/asc-java/asc-service/asc-service-system/pom.xml	(date 1726317864704)
@@ -0,0 +1,85 @@
+<?xml version="1.0" encoding="UTF-8"?><!--
+  ~ Copyright (c) 2024 Leyramu. All rights reserved.
+  ~ This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+  ~ For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+  ~ The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+  ~ By using this project, users acknowledge and agree to abide by these terms and conditions.
+  -->
+
+<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
+    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+
+    <!--      模块版本号      -->
+    <modelVersion>4.0.0</modelVersion>
+
+    <!--      父工程      -->
+    <parent>
+        <groupId>leyramu.qinian</groupId>
+        <artifactId>asc-service</artifactId>
+        <relativePath>../pom.xml</relativePath>
+        <version>1.0.0</version>
+    </parent>
+
+    <!--      模块描述      -->
+    <description>系统模块</description>
+
+    <!--      工件 ID      -->
+    <artifactId>asc-service-system</artifactId>
+
+    <!--      依赖      -->
+    <dependencies>
+        <!--    Swagger UI    -->
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-swagger-ui</artifactId>
+        </dependency>
+
+        <!--    Asc Common DataSource    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-datasource</artifactId>
+        </dependency>
+
+        <!--    Asc Common DataScope    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-datascope</artifactId>
+        </dependency>
+
+        <!--    Asc Common Log    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-log</artifactId>
+        </dependency>
+
+        <!--    Asc API System    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-api-system</artifactId>
+        </dependency>
+
+        <!--    Asc Common Swagger    -->
+        <dependency>
+            <groupId>leyramu.qinian</groupId>
+            <artifactId>asc-common-swagger</artifactId>
+        </dependency>
+    </dependencies>
+
+    <!--      构建插件      -->
+    <build>
+        <finalName>${project.artifactId}</finalName>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+                <executions>
+                    <execution>
+                        <goals>
+                            <goal>repackage</goal>
+                        </goals>
+                    </execution>
+                </executions>
+            </plugin>
+        </plugins>
+    </build>
+</project>
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDictData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDictData.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDictData.java
new file mode 100644
--- /dev/null	(date 1722344113641)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDictData.java	(date 1722344113641)
@@ -0,0 +1,135 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.Size;
+import leyramu.softwarecup.digEdu.common.core.annotation.Excel;
+import leyramu.softwarecup.digEdu.common.core.constant.UserConstants;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+import java.io.Serial;
+
+/**
+ * 字典数据表
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class SysDictData extends BaseEntity {
+
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 字典编码
+     */
+    @Excel(name = "字典编码", cellType = Excel.ColumnType.NUMERIC)
+    private Long dictCode;
+
+    /**
+     * 字典排序
+     */
+    @Excel(name = "字典排序", cellType = Excel.ColumnType.NUMERIC)
+    private Long dictSort;
+
+    /**
+     * 字典标签
+     */
+    @Excel(name = "字典标签")
+    private String dictLabel;
+
+    /**
+     * 字典键值
+     */
+    @Excel(name = "字典键值")
+    private String dictValue;
+
+    /**
+     * 字典类型
+     */
+    @Excel(name = "字典类型")
+    private String dictType;
+
+    /**
+     * 样式属性（其他样式扩展）
+     */
+    private String cssClass;
+
+    /**
+     * 表格字典样式
+     */
+    private String listClass;
+
+    /**
+     * 是否默认（Y是 N否）
+     */
+    @Excel(name = "是否默认", readConverterExp = "Y=是,N=否")
+    private String isDefault;
+
+    /**
+     * 状态（0正常 1停用）
+     */
+    @Excel(name = "状态", readConverterExp = "0=正常,1=停用")
+    private String status;
+
+    @NotBlank(message = "字典标签不能为空")
+    @Size(max = 100, message = "字典标签长度不能超过100个字符")
+    public String getDictLabel() {
+        return dictLabel;
+    }
+
+    @NotBlank(message = "字典键值不能为空")
+    @Size(max = 100, message = "字典键值长度不能超过100个字符")
+    public String getDictValue() {
+        return dictValue;
+    }
+
+    @NotBlank(message = "字典类型不能为空")
+    @Size(max = 100, message = "字典类型长度不能超过100个字符")
+    public String getDictType() {
+        return dictType;
+    }
+
+    @Size(max = 100, message = "样式属性长度不能超过100个字符")
+    public String getCssClass() {
+        return cssClass;
+    }
+
+    public boolean getDefault() {
+        return UserConstants.YES.equals(this.isDefault);
+    }
+
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("dictCode", getDictCode())
+                .append("dictSort", getDictSort())
+                .append("dictLabel", getDictLabel())
+                .append("dictValue", getDictValue())
+                .append("dictType", getDictType())
+                .append("cssClass", getCssClass())
+                .append("listClass", getListClass())
+                .append("isDefault", getIsDefault())
+                .append("status", getStatus())
+                .append("createBy", getCreateBy())
+                .append("createTime", getCreateTime())
+                .append("updateBy", getUpdateBy())
+                .append("updateTime", getUpdateTime())
+                .append("remark", getRemark())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDictType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDictType.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDictType.java
new file mode 100644
--- /dev/null	(date 1722344113631)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysDictType.java	(date 1722344113631)
@@ -0,0 +1,88 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import jakarta.validation.constraints.NotBlank;
+import jakarta.validation.constraints.Pattern;
+import jakarta.validation.constraints.Size;
+import leyramu.softwarecup.digEdu.common.core.annotation.Excel;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+import java.io.Serial;
+
+/**
+ * 字典类型表
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class SysDictType extends BaseEntity {
+
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 字典主键
+     */
+    @Excel(name = "字典主键", cellType = Excel.ColumnType.NUMERIC)
+    private Long dictId;
+
+    /**
+     * 字典名称
+     */
+    @Excel(name = "字典名称")
+    private String dictName;
+
+    /**
+     * 字典类型
+     */
+    @Excel(name = "字典类型")
+    private String dictType;
+
+    /**
+     * 状态（0正常 1停用）
+     */
+    @Excel(name = "状态", readConverterExp = "0=正常,1=停用")
+    private String status;
+
+    @NotBlank(message = "字典名称不能为空")
+    @Size(max = 100, message = "字典类型名称长度不能超过100个字符")
+    public String getDictName() {
+        return dictName;
+    }
+
+    @NotBlank(message = "字典类型不能为空")
+    @Size(max = 100, message = "字典类型类型长度不能超过100个字符")
+    @Pattern(regexp = "^[a-z][a-z0-9_]*$", message = "字典类型必须以字母开头，且只能为（小写字母，数字，下滑线）")
+    public String getDictType() {
+        return dictType;
+    }
+
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("dictId", getDictId())
+                .append("dictName", getDictName())
+                .append("dictType", getDictType())
+                .append("status", getStatus())
+                .append("createBy", getCreateBy())
+                .append("createTime", getCreateTime())
+                .append("updateBy", getUpdateBy())
+                .append("updateTime", getUpdateTime())
+                .append("remark", getRemark())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRoleDept.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRoleDept.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRoleDept.java
new file mode 100644
--- /dev/null	(date 1722344113523)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRoleDept.java	(date 1722344113523)
@@ -0,0 +1,47 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import lombok.Data;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+/**
+ * 角色和部门关联
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+public class SysRoleDept {
+
+    /**
+     * 角色 ID
+     */
+    private Long roleId;
+
+    /**
+     * 部门 ID
+     */
+    private Long deptId;
+
+    /**
+     * 输出格式化
+     *
+     * @return 输出格式化
+     */
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("roleId", getRoleId())
+                .append("deptId", getDeptId())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRoleMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRoleMenu.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRoleMenu.java
new file mode 100644
--- /dev/null	(date 1722344113819)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysRoleMenu.java	(date 1722344113819)
@@ -0,0 +1,47 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import lombok.Data;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+/**
+ * 角色和菜单关联
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+public class SysRoleMenu {
+
+    /**
+     * 角色 ID
+     */
+    private Long roleId;
+
+    /**
+     *  菜单 ID
+     */
+    private Long menuId;
+
+    /**
+     *  输出格式化
+     *
+     *  @return 输出格式化
+     */
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("roleId", getRoleId())
+                .append("menuId", getMenuId())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserPost.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserPost.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserPost.java
new file mode 100644
--- /dev/null	(date 1722344113824)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserPost.java	(date 1722344113824)
@@ -0,0 +1,47 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import lombok.Data;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+/**
+ * 用户和岗位关联
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+public class SysUserPost {
+
+    /**
+     * 用户 ID
+     */
+    private Long userId;
+
+    /**
+     * 岗位 ID
+     */
+    private Long postId;
+
+    /**
+     * 输出格式化
+     *
+     * @return 输出格式化
+     */
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("userId", getUserId())
+                .append("postId", getPostId())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserRole.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserRole.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserRole.java
new file mode 100644
--- /dev/null	(date 1722344113603)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserRole.java	(date 1722344113603)
@@ -0,0 +1,47 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import lombok.Data;
+import org.apache.commons.lang3.builder.ToStringBuilder;
+import org.apache.commons.lang3.builder.ToStringStyle;
+
+/**
+ * 用户和角色关联
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27i
+ */
+@Data
+public class SysUserRole {
+
+    /**
+     * 用户 ID
+     */
+    private Long userId;
+
+    /**
+     * 角色 ID
+     */
+    private Long roleId;
+
+    /**
+     * 输出格式化
+     *
+     * @return 输出格式化
+     */
+    @Override
+    public String toString() {
+        return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
+                .append("userId", getUserId())
+                .append("roleId", getRoleId())
+                .toString();
+    }
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysLogininfor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysLogininfor.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysLogininfor.java
new file mode 100644
--- /dev/null	(date 1722344113784)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysLogininfor.java	(date 1722344113784)
@@ -0,0 +1,70 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import com.fasterxml.jackson.annotation.JsonFormat;
+import leyramu.softwarecup.digEdu.common.core.annotation.Excel;
+import leyramu.softwarecup.digEdu.common.core.web.domain.BaseEntity;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+import java.io.Serial;
+import java.util.Date;
+
+/**
+ * 系统访问记录表
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/24
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class SysLogininfor extends BaseEntity {
+
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * ID
+     */
+    @Excel(name = "序号", cellType = Excel.ColumnType.NUMERIC)
+    private Long infoId;
+
+    /**
+     * 用户账号
+     */
+    @Excel(name = "用户账号")
+    private String userName;
+
+    /**
+     * 状态 0成功 1失败
+     */
+    @Excel(name = "状态", readConverterExp = "0=成功,1=失败")
+    private String status;
+
+    /**
+     * 地址
+     */
+    @Excel(name = "地址")
+    private String ipaddr;
+
+    /**
+     * 描述
+     */
+    @Excel(name = "描述")
+    private String msg;
+
+    /**
+     * 访问时间
+     */
+    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
+    @Excel(name = "访问时间", width = 30, dateFormat = "yyyy-MM-dd HH:mm:ss")
+    private Date accessTime;
+}
Index: asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserOnline.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserOnline.java b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserOnline.java
new file mode 100644
--- /dev/null	(date 1722344113610)
+++ b/asc-java/asc-api/asc-api-system/src/main/java/leyramu/softwarecup/digEdu/system/api/domain/SysUserOnline.java	(date 1722344113610)
@@ -0,0 +1,57 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.softwarecup.digEdu.system.api.domain;
+
+import lombok.Data;
+
+/**
+ * 当前在线会话
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/27
+ */
+@Data
+public class SysUserOnline {
+
+    /**
+     * 会话编号
+     */
+    private String tokenId;
+
+    /**
+     * 用户名称
+     */
+    private String userName;
+
+    /**
+     * 登录 IP 地址
+     */
+    private String ipaddr;
+
+    /**
+     * 登录地址
+     */
+    private String loginLocation;
+
+    /**
+     * 浏览器类型
+     */
+    private String browser;
+
+    /**
+     * 操作系统
+     */
+    private String os;
+
+    /**
+     * 登录时间
+     */
+    private Long loginTime;
+}
Index: asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/AscAlertServiceApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/AscAlertServiceApplication.java b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/AscAlertServiceApplication.java
rename from asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/AscAlertServiceApplication.java
rename to asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/AscAlertServiceApplication.java
--- a/asc-java/asc-service/asc-alert-service/src/main/java/org/qinian/AscAlertServiceApplication.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-alert-service/src/main/java/org/leyramu/AscAlertServiceApplication.java	(date 1726316993246)
@@ -1,4 +1,4 @@
-package org.qinian;
+package org.leyramu;
 
 import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.boot.SpringApplication;
@@ -9,7 +9,7 @@
 @SpringBootApplication
 @EnableFeignClients
 @EnableDiscoveryClient
-@MapperScan(basePackages = {"org.qinian.dao"})
+@MapperScan(basePackages = {"org.qinian.mapper"})
 public class AscAlertServiceApplication {
     public static void main(String[] args) {
         SpringApplication.run(AscAlertServiceApplication.class, args);
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/controller/BaseController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/controller/BaseController.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/controller/BaseController.java
new file mode 100644
--- /dev/null	(date 1726288143200)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/controller/BaseController.java	(date 1726288143200)
@@ -0,0 +1,140 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.web.controller;
+
+import com.baomidou.mybatisplus.core.metadata.IPage;
+import leyramu.qinian.asc.common.core.constant.HttpStatus;
+import leyramu.qinian.asc.common.core.utils.DateUtils;
+import leyramu.qinian.asc.common.core.utils.PageUtils;
+import leyramu.qinian.asc.common.core.web.domain.AjaxResult;
+import leyramu.qinian.asc.common.core.web.page.TableDataInfo;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.web.bind.WebDataBinder;
+import org.springframework.web.bind.annotation.InitBinder;
+
+import java.beans.PropertyEditorSupport;
+import java.util.Date;
+
+/**
+ * web层通用数据处理
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class BaseController {
+
+    /**
+     * 日志对象
+     */
+    protected final Logger logger = LoggerFactory.getLogger(this.getClass());
+
+    /**
+     * 将前台传递过来的日期格式的字符串，自动转化为Date类型
+     */
+    @InitBinder
+    public void initBinder(WebDataBinder binder) {
+        // Date 类型转换
+        binder.registerCustomEditor(Date.class, new PropertyEditorSupport() {
+            @Override
+            public void setAsText(String text) {
+                setValue(DateUtils.parseDate(text));
+            }
+        });
+    }
+
+    /**
+     * 设置请求分页数据
+     */
+    protected IPage<?> startPage() {
+        return PageUtils.startPage();
+    }
+
+    /**
+     * 清理分页的线程变量
+     */
+    protected void clearPage() {
+        PageUtils.clearPage();
+    }
+
+    /**
+     * 响应请求分页数据
+     */
+    protected TableDataInfo getDataTable(IPage<?> page) {
+        TableDataInfo rspData = new TableDataInfo();
+        rspData.setCode(HttpStatus.SUCCESS);
+        rspData.setRows(page.getRecords());
+        rspData.setMsg("查询成功");
+        rspData.setTotal(page.getTotal());
+        return rspData;
+    }
+
+    /**
+     * 返回成功
+     */
+    public AjaxResult success() {
+        return AjaxResult.success();
+    }
+
+    /**
+     * 返回成功消息
+     */
+    public AjaxResult success(String message) {
+        return AjaxResult.success(message);
+    }
+
+    /**
+     * 返回成功消息
+     */
+    public AjaxResult success(Object data) {
+        return AjaxResult.success(data);
+    }
+
+    /**
+     * 返回失败消息
+     */
+    public AjaxResult error() {
+        return AjaxResult.error();
+    }
+
+    /**
+     * 返回失败消息
+     */
+    public AjaxResult error(String message) {
+        return AjaxResult.error(message);
+    }
+
+    /**
+     * 返回警告消息
+     */
+    public AjaxResult warn(String message) {
+        return AjaxResult.warn(message);
+    }
+
+    /**
+     * 响应返回结果
+     *
+     * @param rows 影响行数
+     * @return 操作结果
+     */
+    protected AjaxResult toAjax(int rows) {
+        return rows > 0 ? AjaxResult.success() : AjaxResult.error();
+    }
+
+    /**
+     * 响应返回结果
+     *
+     * @param result 结果
+     * @return 操作结果
+     */
+    protected AjaxResult toAjax(boolean result) {
+        return result ? success() : error();
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/TreeEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/TreeEntity.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/TreeEntity.java
new file mode 100644
--- /dev/null	(date 1726288143393)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/TreeEntity.java	(date 1726288143393)
@@ -0,0 +1,59 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.web.domain;
+
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+import java.io.Serial;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Tree基类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Data
+@EqualsAndHashCode(callSuper = true)
+public class TreeEntity extends BaseEntity {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 父菜单名称
+     */
+    private String parentName;
+
+    /**
+     * 父菜单ID
+     */
+    private Long parentId;
+
+    /**
+     * 显示顺序
+     */
+    private Integer orderNum;
+
+    /**
+     * 祖级列表
+     */
+    private String ancestors;
+
+    /**
+     * 子部门
+     */
+    private List<?> children = new ArrayList<>();
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/BaseEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/BaseEntity.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/BaseEntity.java
new file mode 100644
--- /dev/null	(date 1726288143524)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/BaseEntity.java	(date 1726288143524)
@@ -0,0 +1,89 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.web.domain;
+
+import com.fasterxml.jackson.annotation.JsonFormat;
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import com.fasterxml.jackson.annotation.JsonInclude;
+import lombok.Data;
+
+import java.io.Serial;
+import java.io.Serializable;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Entity基类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Data
+public class BaseEntity implements Serializable {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 搜索值
+     */
+    @JsonIgnore
+    private String searchValue;
+
+    /**
+     * 创建者
+     */
+    private String createBy;
+
+    /**
+     * 创建时间
+     */
+    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
+    private Date createTime;
+
+    /**
+     * 更新者
+     */
+    private String updateBy;
+
+    /**
+     * 更新时间
+     */
+    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
+    private Date updateTime;
+
+    /**
+     * 备注
+     */
+    private String remark;
+
+    /**
+     * 请求参数
+     */
+    @JsonInclude(JsonInclude.Include.NON_EMPTY)
+    private Map<String, Object> params;
+
+    /**
+     * 获取请求参数
+     *
+     * @return 请求参数
+     */
+    public Map<String, Object> getParams() {
+        if (params == null) {
+            params = new HashMap<>();
+        }
+        return params;
+    }
+
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AlertLevels.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AlertLevels.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AlertLevels.java
new file mode 100644
--- /dev/null	(date 1726310283720)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AlertLevels.java	(date 1726310283720)
@@ -0,0 +1,18 @@
+package leyramu.qinian.asc.common.base.enums;
+
+import com.baomidou.mybatisplus.annotation.EnumValue;
+
+public enum AlertLevels {
+    LAZY("低风险", "算法警告"),
+    HEAT("高风险", "天气警告"),
+    ;
+    @EnumValue
+    final
+    String value;
+    final String desc;
+
+    AlertLevels(String value, String desc) {
+        this.value = value;
+        this.desc = desc;
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/AjaxResult.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/AjaxResult.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/AjaxResult.java
new file mode 100644
--- /dev/null	(date 1726288143597)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/domain/AjaxResult.java	(date 1726288143597)
@@ -0,0 +1,216 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.web.domain;
+
+import leyramu.qinian.asc.common.core.constant.HttpStatus;
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+import lombok.NoArgsConstructor;
+
+import java.io.Serial;
+import java.util.HashMap;
+import java.util.Objects;
+
+/**
+ * 操作消息提醒
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@NoArgsConstructor
+public class AjaxResult extends HashMap<String, Object> {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 状态码
+     */
+    public static final String CODE_TAG = "code";
+
+    /**
+     * 返回内容
+     */
+    public static final String MSG_TAG = "msg";
+
+    /**
+     * 数据对象
+     */
+    public static final String DATA_TAG = "data";
+
+    /**
+     * 初始化一个新创建的 AjaxResult 对象
+     *
+     * @param code 状态码
+     * @param msg  返回内容
+     */
+    public AjaxResult(int code, String msg) {
+        super.put(CODE_TAG, code);
+        super.put(MSG_TAG, msg);
+    }
+
+    /**
+     * 初始化一个新创建的 AjaxResult 对象
+     *
+     * @param code 状态码
+     * @param msg  返回内容
+     * @param data 数据对象
+     */
+    public AjaxResult(int code, String msg, Object data) {
+        super.put(CODE_TAG, code);
+        super.put(MSG_TAG, msg);
+        if (StringUtils.isNotNull(data)) {
+            super.put(DATA_TAG, data);
+        }
+    }
+
+    /**
+     * 返回成功消息
+     *
+     * @return 成功消息
+     */
+    public static AjaxResult success() {
+        return AjaxResult.success("操作成功");
+    }
+
+    /**
+     * 返回成功数据
+     *
+     * @return 成功消息
+     */
+    public static AjaxResult success(Object data) {
+        return AjaxResult.success("操作成功", data);
+    }
+
+    /**
+     * 返回成功消息
+     *
+     * @param msg 返回内容
+     * @return 成功消息
+     */
+    public static AjaxResult success(String msg) {
+        return AjaxResult.success(msg, null);
+    }
+
+    /**
+     * 返回成功消息
+     *
+     * @param msg  返回内容
+     * @param data 数据对象
+     * @return 成功消息
+     */
+    public static AjaxResult success(String msg, Object data) {
+        return new AjaxResult(HttpStatus.SUCCESS, msg, data);
+    }
+
+    /**
+     * 返回警告消息
+     *
+     * @param msg 返回内容
+     * @return 警告消息
+     */
+    public static AjaxResult warn(String msg) {
+        return AjaxResult.warn(msg, null);
+    }
+
+    /**
+     * 返回警告消息
+     *
+     * @param msg  返回内容
+     * @param data 数据对象
+     * @return 警告消息
+     */
+    public static AjaxResult warn(String msg, Object data) {
+        return new AjaxResult(HttpStatus.WARN, msg, data);
+    }
+
+    /**
+     * 返回错误消息
+     *
+     * @return 错误消息
+     */
+    public static AjaxResult error() {
+        return AjaxResult.error("操作失败");
+    }
+
+    /**
+     * 返回错误消息
+     *
+     * @param msg 返回内容
+     * @return 错误消息
+     */
+    public static AjaxResult error(String msg) {
+        return AjaxResult.error(msg, null);
+    }
+
+    /**
+     * 返回错误消息
+     *
+     * @param msg  返回内容
+     * @param data 数据对象
+     * @return 错误消息
+     */
+    public static AjaxResult error(String msg, Object data) {
+        return new AjaxResult(HttpStatus.ERROR, msg, data);
+    }
+
+    /**
+     * 返回错误消息
+     *
+     * @param code 状态码
+     * @param msg  返回内容
+     * @return 错误消息
+     */
+    public static AjaxResult error(int code, String msg) {
+        return new AjaxResult(code, msg, null);
+    }
+
+    /**
+     * 是否为成功消息
+     *
+     * @return 结果
+     */
+    public boolean isSuccess() {
+        return Objects.equals(HttpStatus.SUCCESS, this.get(CODE_TAG));
+    }
+
+    /**
+     * 是否为警告消息
+     *
+     * @return 结果
+     */
+    public boolean isWarn() {
+        return Objects.equals(HttpStatus.WARN, this.get(CODE_TAG));
+    }
+
+    /**
+     * 是否为错误消息
+     *
+     * @return 结果
+     */
+    public boolean isError() {
+        return Objects.equals(HttpStatus.ERROR, this.get(CODE_TAG));
+    }
+
+    /**
+     * 方便链式调用
+     *
+     * @param key   键
+     * @param value 值
+     * @return AjaxResult 对象
+     */
+    @Override
+    public AjaxResult put(String key, Object value) {
+        super.put(key, value);
+        return this;
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/UserStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/UserStatus.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/UserStatus.java
new file mode 100644
--- /dev/null	(date 1726310283775)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/UserStatus.java	(date 1726310283775)
@@ -0,0 +1,30 @@
+package leyramu.qinian.asc.common.base.enums;
+
+import com.baomidou.mybatisplus.annotation.EnumValue;
+import lombok.Getter;
+import leyramu.qinian.asc.common.core.exception.BadRequestException;
+
+@Getter
+public enum UserStatus {
+    FROZEN(0, "禁止使用"),
+    NORMAL(1, "已激活"),
+    ;
+    @EnumValue
+    int value;
+    String desc;
+
+    UserStatus(Integer value, String desc) {
+        this.value = value;
+        this.desc = desc;
+    }
+
+    public static UserStatus of(int value) {
+        if (value == 0) {
+            return FROZEN;
+        }
+        if (value == 1) {
+            return NORMAL;
+        }
+        throw new BadRequestException("账户状态错误");
+    }
+}
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/TableDataInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/TableDataInfo.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/TableDataInfo.java
new file mode 100644
--- /dev/null	(date 1726288143558)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/web/page/TableDataInfo.java	(date 1726288143558)
@@ -0,0 +1,69 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.web.page;
+
+import lombok.Data;
+
+import java.io.Serial;
+import java.io.Serializable;
+import java.util.List;
+
+/**
+ * 表格分页数据对象
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Data
+public class TableDataInfo implements Serializable {
+
+    /**
+     * 序列化
+     */
+    @Serial
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * 总记录数
+     */
+    private long total;
+
+    /**
+     * 列表数据
+     */
+    private List<?> rows;
+
+    /**
+     * 消息状态码
+     */
+    private int code;
+
+    /**
+     * 消息内容
+     */
+    private String msg;
+
+    /**
+     * 表格数据对象
+     */
+    public TableDataInfo() {
+    }
+
+    /**
+     * 分页
+     *
+     * @param list  列表数据
+     * @param total 总记录数
+     */
+    public TableDataInfo(List<?> list, int total) {
+        this.rows = list;
+        this.total = total;
+    }
+}
Index: asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AlertTypes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AlertTypes.java b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AlertTypes.java
new file mode 100644
--- /dev/null	(date 1726310283658)
+++ b/asc-java/asc-common/asc-common-base/src/main/java/leyramu/qinian/asc/common/base/enums/AlertTypes.java	(date 1726310283658)
@@ -0,0 +1,18 @@
+package leyramu.qinian.asc.common.base.enums;
+
+import com.baomidou.mybatisplus.annotation.EnumValue;
+
+public enum AlertTypes {
+    AI_ALERT(1L, "算法警告"),
+    WEATHER_ALERT(2L, "天气警告"),
+    ;
+    @EnumValue
+    final
+    Long value;
+    final String desc;
+
+    AlertTypes(Long value, String desc) {
+        this.value = value;
+        this.desc = desc;
+    }
+}
Index: asc-java/asc-service/asc-user-service/src/main/java/org/qinian/AscUserServiceApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/AscUserServiceApplication.java b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/AscUserServiceApplication.java
rename from asc-java/asc-service/asc-user-service/src/main/java/org/qinian/AscUserServiceApplication.java
rename to asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/AscUserServiceApplication.java
--- a/asc-java/asc-service/asc-user-service/src/main/java/org/qinian/AscUserServiceApplication.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-user-service/src/main/java/org/leyramu/AscUserServiceApplication.java	(date 1726316993380)
@@ -1,4 +1,4 @@
-package org.qinian;
+package org.leyramu;
 
 import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.boot.SpringApplication;
@@ -9,7 +9,7 @@
 @SpringBootApplication
 @EnableFeignClients
 @EnableDiscoveryClient
-@MapperScan(basePackages = {"org.qinian.dao"})
+@MapperScan(basePackages = {"org.qinian.mapper"})
 public class AscUserServiceApplication {
 
     public static void main(String[] args) {
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/enums/UserStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/enums/UserStatus.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/enums/UserStatus.java
new file mode 100644
--- /dev/null	(date 1726288143579)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/enums/UserStatus.java	(date 1726288143579)
@@ -0,0 +1,49 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.enums;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+
+/**
+ * 用户状态
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+@Getter
+@AllArgsConstructor
+public enum UserStatus {
+
+    /**
+     * 正常
+     */
+    OK("0", "正常"),
+
+    /**
+     * 停用
+     */
+    DISABLE("1", "停用"),
+
+    /**
+     * 删除
+     */
+    DELETED("2", "删除");
+
+    /**
+     * 状态
+     */
+    private final String code;
+
+    /**
+     * 信息
+     */
+    private final String info;
+}
Index: asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_zh_CN.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_zh_CN.properties b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_zh_CN.properties
new file mode 100644
--- /dev/null	(date 1726288500144)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_zh_CN.properties	(date 1726288500144)
@@ -0,0 +1,19 @@
+#  /*
+#   * Copyright (c) 2024 Leyramu. All rights reserved.
+#   * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+#   * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+#   * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+#   * By using this project, users acknowledge and agree to abide by these terms and conditions.
+#   */
+
+
+P_OAuth2_UuidIsNull=UUIDä¸è½ä¸ºç©º
+P_OAuth2_CaptchaIsNull=éªè¯ç ä¸è½ä¸ºç©º
+P_OAuth2_UsernameIsNull=ç¨æ·åä¸è½ä¸ºç©º
+P_OAuth2_PasswordIsNull=å¯ç ä¸è½ä¸ºç©º
+P_OAuth2_MobileIsNUll=ææºå·ä¸è½ä¸ºç©º
+P_OAuth2_MailIsNull=é®ç®±ä¸è½ä¸ºç©º
+P_OAuth2_TenantIdIsNull=ç§æ·IDä¸è½ä¸ºç©º
+P_System_IdIsNull=IDä¸è½ä¸ºç©º
+A_OAuth2_MailError=é®ç®±éè¯¯
+A_OAuth2_MobileError=ææºå·éè¯¯
Index: asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_en_US.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_en_US.properties b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_en_US.properties
new file mode 100644
--- /dev/null	(date 1726288500151)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_en_US.properties	(date 1726288500151)
@@ -0,0 +1,19 @@
+#  /*
+#   * Copyright (c) 2024 Leyramu. All rights reserved.
+#   * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+#   * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+#   * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+#   * By using this project, users acknowledge and agree to abide by these terms and conditions.
+#   */
+
+
+P_OAuth2_UuidIsNull=UUID cannot be empty
+P_OAuth2_CaptchaIsNull=The verification code cannot be empty
+P_OAuth2_UsernameIsNull=Username cannot be empty
+P_OAuth2_PasswordIsNull=Password cannot be empty
+P_OAuth2_MobileIsNUll=Mobile phone number cannot be empty
+P_OAuth2_MailIsNull=Email cannot be empty
+P_OAuth2_TenantIdIsNull=Tenant ID cannot be empty
+P_System_IdIsNull=ID cannot be empty
+A_OAuth2_MailError=Email error
+A_OAuth2_MobileError=Mobile number error
Index: asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_en.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_en.properties b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_en.properties
new file mode 100644
--- /dev/null	(date 1726288500155)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/validation_en.properties	(date 1726288500155)
@@ -0,0 +1,19 @@
+#  /*
+#   * Copyright (c) 2024 Leyramu. All rights reserved.
+#   * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+#   * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+#   * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+#   * By using this project, users acknowledge and agree to abide by these terms and conditions.
+#   */
+
+
+P_OAuth2_UuidIsNull=UUID cannot be empty
+P_OAuth2_CaptchaIsNull=The verification code cannot be empty
+P_OAuth2_UsernameIsNull=Username cannot be empty
+P_OAuth2_PasswordIsNull=Password cannot be empty
+P_OAuth2_MobileIsNUll=Mobile phone number cannot be empty
+P_OAuth2_MailIsNull=Email cannot be empty
+P_OAuth2_TenantIdIsNull=Tenant ID cannot be empty
+P_System_IdIsNull=ID cannot be empty
+A_OAuth2_MailError=Email error
+A_OAuth2_MobileError=Mobile number error
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/StrFormatter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/StrFormatter.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/StrFormatter.java
new file mode 100644
--- /dev/null	(date 1726288143322)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/StrFormatter.java	(date 1726288143322)
@@ -0,0 +1,96 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.text;
+
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+
+/**
+ * 字符串格式化
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class StrFormatter {
+
+    /**
+     * 空的JSON字符串
+     */
+    public static final String EMPTY_JSON = "{}";
+
+    /**
+     * 占位符前缀
+     */
+    public static final char C_BACKSLASH = '\\';
+
+    /**
+     * 占位符前缀
+     */
+    public static final char C_DELIM_START = '{';
+
+    /**
+     * 占位符后缀
+     */
+    public static final char C_DELIM_END = '}';
+
+    /**
+     * 格式化字符串
+     *
+     * @param strPattern 字符串模板
+     * @param argArray   参数列表
+     * @return 结果
+     */
+    public static String format(final String strPattern, final Object... argArray) {
+        if (StringUtils.isEmpty(strPattern) || StringUtils.isEmpty(argArray)) {
+            return strPattern;
+        }
+        final int strPatternLength = strPattern.length();
+
+        // 初始化定义好的长度以获得更好的性能
+        StringBuilder sbuf = new StringBuilder(strPatternLength + 50);
+
+        int handledPosition = 0;
+        int delimIndex;// 占位符所在位置
+        for (int argIndex = 0; argIndex < argArray.length; argIndex++) {
+            delimIndex = strPattern.indexOf(EMPTY_JSON, handledPosition);
+            if (delimIndex == -1) {
+                if (handledPosition == 0) {
+                    return strPattern;
+                } else { // 字符串模板剩余部分不再包含占位符，加入剩余部分后返回结果
+                    sbuf.append(strPattern, handledPosition, strPatternLength);
+                    return sbuf.toString();
+                }
+            } else {
+                if (delimIndex > 0 && strPattern.charAt(delimIndex - 1) == C_BACKSLASH) {
+                    if (delimIndex > 1 && strPattern.charAt(delimIndex - 2) == C_BACKSLASH) {
+                        // 转义符之前还有一个转义符，占位符依旧有效
+                        sbuf.append(strPattern, handledPosition, delimIndex - 1);
+                        sbuf.append(Convert.utf8Str(argArray[argIndex]));
+                        handledPosition = delimIndex + 2;
+                    } else {
+                        // 占位符被转义
+                        argIndex--;
+                        sbuf.append(strPattern, handledPosition, delimIndex - 1);
+                        sbuf.append(C_DELIM_START);
+                        handledPosition = delimIndex + 1;
+                    }
+                } else {
+                    // 正常占位符
+                    sbuf.append(strPattern, handledPosition, delimIndex);
+                    sbuf.append(Convert.utf8Str(argArray[argIndex]));
+                    handledPosition = delimIndex + 2;
+                }
+            }
+        }
+        // 加入最后一个占位符后所有的字符
+        sbuf.append(strPattern, handledPosition, strPattern.length());
+
+        return sbuf.toString();
+    }
+}
Index: asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/AscWeatherServiceApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/AscWeatherServiceApplication.java b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/AscWeatherServiceApplication.java
rename from asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/AscWeatherServiceApplication.java
rename to asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/AscWeatherServiceApplication.java
--- a/asc-java/asc-service/asc-weather-service/src/main/java/org/qinian/AscWeatherServiceApplication.java	(revision c698812ac850480346fc962ed2ecfa2e55a9ac4b)
+++ b/asc-java/asc-service/asc-weather-service/src/main/java/org/leyramu/AscWeatherServiceApplication.java	(date 1726316993274)
@@ -1,4 +1,4 @@
-package org.qinian;
+package org.leyramu;
 
 import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.boot.SpringApplication;
@@ -11,7 +11,7 @@
 @EnableFeignClients
 @EnableDiscoveryClient
 @EnableScheduling
-@MapperScan(basePackages = {"org.qinian.dao"})
+@MapperScan(basePackages = {"org.qinian.mapper"})
 public class AscWeatherServiceApplication {
 
     public static void main(String[] args) {
Index: asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_zh_CN.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_zh_CN.properties b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_zh_CN.properties
new file mode 100644
--- /dev/null	(date 1726288500160)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_zh_CN.properties	(date 1726288500160)
@@ -0,0 +1,45 @@
+#  /*
+#   * Copyright (c) 2024 Leyramu. All rights reserved.
+#   * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+#   * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+#   * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+#   * By using this project, users acknowledge and agree to abide by these terms and conditions.
+#   */
+
+
+OK=\u8BF7\u6C42\u6210\u529F
+Bad_Request=\u9519\u8BEF\u8BF7\u6C42
+Unauthorized=\u767B\u5F55\u72B6\u6001\u5DF2\u8FC7\u671F
+Forbidden=\u62D2\u7EDD\u8BBF\u95EE\uFF0C\u6CA1\u6709\u6743\u9650
+Not_Found=\u65E0\u6CD5\u627E\u5230\u8BF7\u6C42\u7684\u8D44\u6E90
+Too_Many_Requests=\u8BF7\u6C42\u592A\u9891\u7E41
+Internal_Server_Error=\u670D\u52A1\u5668\u5185\u90E8\u9519\u8BEF\uFF0C\u65E0\u6CD5\u5B8C\u6210\u8BF7\u6C42
+Bad_Gateway=\u9519\u8BEF\u7F51\u5173
+Service_Unavailable=\u670D\u52A1\u6B63\u5728\u7EF4\u62A4
+S_Ip_Blacked=IP\u5DF2\u5217\u5165\u9ED1\u540D\u5355
+S_Ip_Restricted=IP\u88AB\u9650\u5236
+S_Gateway_RouterNotExist=\u8DEF\u7531\u4E0D\u5B58\u5728
+A_OAuth2_GenerateIdTokenFail=\u4EE4\u724C\u751F\u6210\u5668\u65E0\u6CD5\u751F\u6210\u6807\u8BC6\u4EE4\u724C
+A_OAuth2_GenerateRefreshTokenFail=\u4EE4\u724C\u751F\u6210\u5668\u65E0\u6CD5\u751F\u6210\u5237\u65B0\u4EE4\u724C
+A_OAuth2_GenerateAccessTokenFail=\u4EE4\u724C\u751F\u6210\u5668\u65E0\u6CD5\u751F\u6210\u8BBF\u95EE\u4EE4\u724C
+A_OAuth2_RegisteredClientNotExist=\u6CE8\u518C\u5BA2\u6237\u7AEF\u4E0D\u5B58\u5728
+A_OAuth2_InvalidClient=\u65E0\u6548\u5BA2\u6237\u7AEF
+A_OAuth2_InvalidScope=\u65E0\u6548\u4F5C\u7528\u57DF
+A_OAuth2_UserDisabled=\u7528\u6237\u5DF2\u7981\u7528
+A_OAuth2_CaptchaExpired=\u9A8C\u8BC1\u7801\u5DF2\u8FC7\u671F
+A_OAuth2_CaptchaError=\u9A8C\u8BC1\u7801\u9519\u8BEF
+A_OAuth2_UsernamePasswordError=\u7528\u6237\u540D\u6216\u5BC6\u7801\u9519\u8BEF
+S_Sentinel_Authority=\u6388\u6743\u89C4\u5219\u9519\u8BEF
+S_Sentinel_SystemBlocked=\u7CFB\u7EDF\u89C4\u5219\u9519\u8BEF
+S_Sentinel_ParamFlowed=\u70ED\u70B9\u53C2\u6570\u5DF2\u9650\u6D41
+S_Sentinel_Degraded=\u5DF2\u964D\u7EA7
+S_Sentinel_Flowed=\u5DF2\u9650\u6D41
+S_Seata_TransactionDowntime=\u5206\u5E03\u5F0F\u4E8B\u52A1\u5DF2\u5B95\u673A
+S_Seata_TransactionTimeout=\u5206\u5E03\u5F0F\u4E8B\u52A1\u5DF2\u8D85\u65F6
+S_DS_TableNotExist=\u8868 {0} \u4E0D\u5B58\u5728
+A_OAuth2_SourceNotExist=\u6570\u636E\u6E90\u4E0D\u5B58\u5728
+S_User_AESDecryptUsernameFail=\u7528\u6237\u540D\u89E3\u5BC6\u5931\u8D25
+S_User_AESDecryptMailFail=\u90AE\u7BB1\u89E3\u5BC6\u5931\u8D25
+S_User_AESDecryptMobileFail=\u624B\u673A\u53F7\u89E3\u5BC6\u5931\u8D25
+A_OAuth2_MobileNotRegistered=\u624B\u673A\u53F7\u672A\u6CE8\u518C
+A_OAuth2_MailNotRegistered=\u90AE\u7BB1\u672A\u6CE8\u518C
Index: asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/CharsetKit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/CharsetKit.java b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/CharsetKit.java
new file mode 100644
--- /dev/null	(date 1726288143516)
+++ b/asc-java/asc-common/asc-common-core/src/main/java/leyramu/qinian/asc/common/core/text/CharsetKit.java	(date 1726288143516)
@@ -0,0 +1,103 @@
+/*
+ * Copyright (c) 2024 Leyramu. All rights reserved.
+ * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+ * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+ * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+ * By using this project, users acknowledge and agree to abide by these terms and conditions.
+ */
+
+package leyramu.qinian.asc.common.core.text;
+
+import leyramu.qinian.asc.common.core.utils.StringUtils;
+
+import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
+
+/**
+ * 字符集工具类
+ *
+ * @author <a href="mailto:2038322151@qq.com">Miraitowa_zcx</a>
+ * @version 1.0.0
+ * @since 2024/7/23
+ */
+public class CharsetKit {
+
+    /**
+     * GBK
+     */
+    public static final String GBK = "GBK";
+
+    /**
+     * UTF-8
+     */
+    public static final String UTF_8 = "UTF-8";
+
+    /**
+     * ISO-8859-1
+     */
+    public static final Charset CHARSET_ISO_8859_1 = StandardCharsets.ISO_8859_1;
+
+    /**
+     * UTF-8
+     */
+    public static final Charset CHARSET_UTF_8 = StandardCharsets.UTF_8;
+
+    /**
+     * GBK
+     */
+    public static final Charset CHARSET_GBK = Charset.forName(GBK);
+
+    /**
+     * 转换为Charset对象
+     *
+     * @param charset 字符集，为空则返回默认字符集
+     * @return Charset
+     */
+    public static Charset charset(String charset) {
+        return StringUtils.isEmpty(charset) ? Charset.defaultCharset() : Charset.forName(charset);
+    }
+
+    /**
+     * 转换字符串的字符集编码
+     *
+     * @param source      字符串
+     * @param srcCharset  源字符集，默认ISO-8859-1
+     * @param destCharset 目标字符集，默认UTF-8
+     * @return 转换后的字符集
+     */
+    public static String convert(String source, String srcCharset, String destCharset) {
+        return convert(source, Charset.forName(srcCharset), Charset.forName(destCharset));
+    }
+
+    /**
+     * 转换字符串的字符集编码
+     *
+     * @param source      字符串
+     * @param srcCharset  源字符集，默认ISO-8859-1
+     * @param destCharset 目标字符集，默认UTF-8
+     * @return 转换后的字符集
+     */
+    public static String convert(String source, Charset srcCharset, Charset destCharset) {
+        if (null == srcCharset) {
+            srcCharset = StandardCharsets.ISO_8859_1;
+        }
+
+        if (null == destCharset) {
+            destCharset = StandardCharsets.UTF_8;
+        }
+
+        if (StringUtils.isEmpty(source) || srcCharset.equals(destCharset)) {
+            return source;
+        }
+        return new String(source.getBytes(srcCharset), destCharset);
+    }
+
+    /**
+     * 获取文件字符集编码
+     *
+     * @return 系统字符集编码
+     */
+    public static String systemCharset() {
+        return Charset.defaultCharset().name();
+    }
+}
Index: asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_en_US.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_en_US.properties b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_en_US.properties
new file mode 100644
--- /dev/null	(date 1726288500164)
+++ b/asc-java/asc-common/asc-common-i18n/src/main/resources/i18n/message_en_US.properties	(date 1726288500164)
@@ -0,0 +1,45 @@
+#  /*
+#   * Copyright (c) 2024 Leyramu. All rights reserved.
+#   * This project (Digitalization Education), including its source code, documentation, and any associated materials, is the intellectual property of Leyramu. No part of this software may be reproduced, distributed, or transmitted in any form or by any means, including photocopying, recording, or other electronic or mechanical methods, without the prior written permission of the copyright owner, Miraitowa_zcx, except in the case of brief quotations embodied in critical reviews and certain other noncommercial uses permitted by copyright law.
+#   * For inquiries related to licensing or usage outside the scope of this notice, please contact the copyright holder at 2038322151@qq.com.
+#   * The author disclaims all warranties, express or implied, including but not limited to the warranties of merchantability and fitness for a particular purpose. Under no circumstances shall the author be liable for any special, incidental, indirect, or consequential damages arising from the use of this software.
+#   * By using this project, users acknowledge and agree to abide by these terms and conditions.
+#   */
+
+
+OK=Request successful
+Bad_Request=Bad request
+Unauthorized=Login status has expired
+Forbidden=Access denied without permission
+Not_Found=Unable to find the requested resource
+Too_Many_Requests=Request too frequently
+Internal_Server_Error=Internal server error, unable to complete request
+Bad_Gateway=Bad Gateway
+Service_Unavailable=Service is being maintained
+S_Ip_Blacked=IP has been blacklisted
+S_Ip_Restricted=IP restricted
+S_Gateway_RouterNotExist=Router does not exist
+A_OAuth2_GenerateIdTokenFail=Token generator failed to generate identity token
+A_OAuth2_GenerateRefreshTokenFail=The token generator was unable to generate a refresh token
+A_OAuth2_GenerateAccessTokenFail=Token generator failed to generate access token
+A_OAuth2_RegisteredClientNotExist=The registration client does not exist
+A_OAuth2_InvalidClient=Invalid client
+A_OAuth2_InvalidScope=Invalid scope
+A_OAuth2_UserDisabled=User disabled
+A_OAuth2_CaptchaExpired=Verification code has expired
+A_OAuth2_CaptchaError=Verification code error
+A_OAuth2_UsernamePasswordError=Username or password error
+S_Sentinel_Authority=Authorization rule error
+S_Sentinel_SystemBlocked=System rule error
+S_Sentinel_ParamFlowed=Hot spot parameters are restricted
+S_Sentinel_Degraded=Degraded
+S_Sentinel_Flowed=Flowed
+S_Seata_TransactionDowntime=Distributed transaction has crashed
+S_Seata_TransactionTimeout=Distributed transaction has timed out
+S_DS_TableNotExist=Table {0} does not exist
+A_OAuth2_SourceNotExist=The data source does not exist
+S_User_AESDecryptUsernameFail=User name decryption failed
+S_User_AESDecryptMailFail=Email decryption failed
+S_User_AESDecryptMobileFail=Phone number decryption failed
+A_OAuth2_MobileNotRegistered=Mobile number not registered
+A_OAuth2_MailNotRegistered=Email not registered
